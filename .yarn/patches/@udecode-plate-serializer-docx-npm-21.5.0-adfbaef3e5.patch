diff --git a/dist/index.es.js b/dist/index.es.js
index 16021920a8f95940f7239ee85fe7de654a3c2446..612083e76d388f5e0cb3449da8b14a9727448f7e 100644
--- a/dist/index.es.js
+++ b/dist/index.es.js
@@ -2,9 +2,10 @@ import { traverseHtmlElements, isHtmlComment, removeHtmlNodesBetweenComments, NO
 import { ELEMENT_H1, ELEMENT_H2, ELEMENT_H3, ELEMENT_H4, ELEMENT_H5, ELEMENT_H6 } from '@udecode/plate-heading';
 import { KEY_INDENT, KEY_TEXT_INDENT } from '@udecode/plate-indent';
 import { ListStyleType, KEY_LIST_STYLE_TYPE } from '@udecode/plate-indent-list';
-import { ELEMENT_IMAGE } from '@udecode/plate-media';
 import { ELEMENT_PARAGRAPH } from '@udecode/plate-paragraph';
 
+const ELEMENT_IMAGE = "img";
+
 /**
  * Remove HTML nodes between comments in the next sibling after BR.
  */
diff --git a/dist/index.es.js.map b/dist/index.es.js.map
index a15d728f6a20801efc6d4c20952c9d8ae774c66e..5e60e4ea9d771a12a2c10ae298885b8a1959566c 100644
--- a/dist/index.es.js.map
+++ b/dist/index.es.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.es.js","sources":["../src/docx-cleaner/utils/cleanDocxBrComments.ts","../src/docx-cleaner/utils/cleanDocxEmptyParagraphs.ts","../src/docx-cleaner/utils/isDocxFootnote.ts","../src/docx-cleaner/utils/cleanDocxFootnotes.ts","../../../../node_modules/validator/lib/util/assertString.js","../../../../node_modules/validator/lib/util/merge.js","../../../../node_modules/validator/lib/isFQDN.js","../../../../node_modules/validator/lib/isIP.js","../../../../node_modules/validator/lib/isURL.js","../src/docx-cleaner/utils/getRtfImageHex.ts","../src/docx-cleaner/utils/getRtfImageMimeType.ts","../src/docx-cleaner/utils/getRtfImageSpid.ts","../src/docx-cleaner/utils/getRtfImagesByType.ts","../src/docx-cleaner/utils/getRtfImagesMap.ts","../src/docx-cleaner/utils/getVShapes.ts","../src/docx-cleaner/utils/getVShapeSpid.ts","../src/docx-cleaner/utils/cleanDocxImageElements.ts","../src/docx-cleaner/utils/cleanDocxListElements.ts","../src/docx-cleaner/utils/getDocxListContentHtml.ts","../src/docx-cleaner/utils/getDocxListIndent.ts","../src/docx-cleaner/utils/isDocxBookmark.ts","../src/docx-cleaner/utils/isDocxList.ts","../src/docx-cleaner/utils/getDocxListNode.ts","../src/docx-cleaner/utils/isDocxOl.ts","../src/docx-cleaner/utils/docxListToList.ts","../src/docx-cleaner/utils/cleanDocxListElementsToList.ts","../src/docx-cleaner/utils/cleanDocxQuotes.ts","../src/docx-cleaner/utils/generateSpaces.ts","../src/docx-cleaner/utils/cleanDocxSpacerun.ts","../src/docx-cleaner/utils/cleanDocxTabCount.ts","../src/docx-cleaner/utils/cleanDocxSpans.ts","../src/docx-cleaner/utils/getDocxIndent.ts","../src/docx-cleaner/utils/getTextListStyleType.ts","../src/docx-cleaner/utils/isDocxContent.ts","../src/docx-cleaner/cleanDocx.ts","../src/deserializer/createDeserializeDocxPlugin.ts"],"sourcesContent":["import {\n  isHtmlComment,\n  removeHtmlNodesBetweenComments,\n  traverseHtmlElements,\n} from '@udecode/plate-common';\n\n/**\n * Remove HTML nodes between comments in the next sibling after BR.\n */\nexport const cleanDocxBrComments = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName !== 'BR') {\n      return true;\n    }\n\n    if (\n      element.nextSibling &&\n      isHtmlComment(element.nextSibling) &&\n      element.nextSibling.data === '[if !supportLineBreakNewLine]'\n    ) {\n      removeHtmlNodesBetweenComments(\n        element.nextSibling,\n        '[if !supportLineBreakNewLine]',\n        '[endif]'\n      );\n    }\n\n    return false;\n  });\n};\n","import { NO_BREAK_SPACE, traverseHtmlElements } from '@udecode/plate-common';\n\nconst isHtmlOpEmpty = (element: Element): boolean =>\n  element.nodeName === 'O:P' && element.textContent === NO_BREAK_SPACE;\n\nconst isHtmlElementEmpty = (element: Element): boolean =>\n  element.children.length === 1 &&\n  element.firstElementChild !== null &&\n  (isHtmlOpEmpty(element.firstElementChild) ||\n    isHtmlElementEmpty(element.firstElementChild));\n\n/**\n * Remove paragraph innerHTML if its child is 'O:P' with NO_BREAK_SPACE.\n */\nexport const cleanDocxEmptyParagraphs = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName === 'P' && isHtmlElementEmpty(element)) {\n      element.innerHTML = '';\n    }\n\n    return true;\n  });\n};\n","/**\n * Is element a docx footnote.\n */\nexport const isDocxFootnote = (element: Element): boolean => {\n  return (\n    element.tagName === 'SPAN' &&\n    element.classList.contains('MsoFootnoteReference')\n  );\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\nimport { isDocxFootnote } from './isDocxFootnote';\n\n/**\n * Gets \"4\" from \"[4]\", \"A\" from \"[A]\", etc.\n */\nconst extractFootnoteNumber = (footnote: Element): string => {\n  return (footnote.textContent || '').trim().replace(/[[\\]]/g, '');\n};\n\n/**\n * Replace docx footnotes with sup element.\n */\nexport const cleanDocxFootnotes = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (isDocxFootnote(element)) {\n      const footnoteReplacement = document.createElement('sup');\n      footnoteReplacement.textContent = extractFootnoteNumber(element);\n\n      if (element.parentElement) {\n        element.parentElement.replaceChild(footnoteReplacement, element);\n      }\n\n      return true;\n    }\n\n    return true;\n  });\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  /* Remove the optional wildcard before checking validity */\n\n\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces\n\n\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n\n  if (version === '4') {\n    if (!IPv4AddressRegExp.test(str)) {\n      return false;\n    }\n\n    var parts = str.split('.').sort(function (a, b) {\n      return a - b;\n    });\n    return parts[3] <= 255;\n  }\n\n  if (version === '6') {\n    return !!IPv6AddressRegExp.test(str);\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.substr(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.substr(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    if (split[0] === '') {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n\n    var _auth$split = auth.split(':'),\n        _auth$split2 = _slicedToArray(_auth$split, 2),\n        user = _auth$split2[0],\n        password = _auth$split2[1];\n\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","import { SPACE } from '@udecode/plate-common';\n\nexport const getRtfImageHex = (imageData: string): string | null => {\n  const [, bliptagData = ''] = imageData.split('bliptag');\n  const bracketSplit = bliptagData.split('}');\n\n  if (bracketSplit.length < 2) {\n    return null;\n  }\n\n  const [beforeBracket, afterBracket] = bracketSplit;\n\n  if (bracketSplit.length > 2 && beforeBracket.includes('blipuid')) {\n    return afterBracket.split(SPACE).join('');\n  }\n\n  const spaceSplit = beforeBracket.split(SPACE);\n\n  if (spaceSplit.length < 2) {\n    return null;\n  }\n\n  return spaceSplit.slice(1).join('');\n};\n","export const getRtfImageMimeType = (imageData: string): string | null => {\n  const [bliptagMeta] = imageData.split('bliptag');\n\n  if (bliptagMeta.includes('pngblip')) {\n    return 'image/png';\n  }\n\n  if (bliptagMeta.includes('jpegblip')) {\n    return 'image/jpeg';\n  }\n\n  return null;\n};\n","import { CARRIAGE_RETURN, LINE_FEED, SPACE } from '@udecode/plate-common';\n\nconst END_OF_ID_SEQUENCE_CHARACTERS = [\n  '\\\\',\n  '{',\n  CARRIAGE_RETURN,\n  LINE_FEED,\n  SPACE,\n];\n\nexport const getRtfImageSpid = (\n  imageData: string,\n  spidPrefix: string\n): string | null => {\n  const indexes = END_OF_ID_SEQUENCE_CHARACTERS.map((character) =>\n    imageData.indexOf(character)\n  );\n  const foundIndexes = indexes.filter((index) => index !== -1);\n  const idLength = Math.min(imageData.length, ...foundIndexes);\n  const id = imageData.substring(0, idLength);\n  return id ? `${spidPrefix}${id}` : null;\n};\n","import { RtfImage } from '../types';\nimport { getRtfImageHex } from './getRtfImageHex';\nimport { getRtfImageMimeType } from './getRtfImageMimeType';\nimport { getRtfImageSpid } from './getRtfImageSpid';\n\nexport const getRtfImagesByType = (\n  rtf: string,\n  spidPrefix: string,\n  type: string\n): RtfImage[] => {\n  const [, ...images] = rtf.split(type);\n\n  return images.reduce<RtfImage[]>((rtfImages, image) => {\n    const [, imageData = ''] = image.split('shplid');\n    const spid = getRtfImageSpid(imageData, spidPrefix);\n    const mimeType = getRtfImageMimeType(imageData);\n    const hex = getRtfImageHex(imageData);\n\n    if (spid && mimeType && hex) {\n      rtfImages.push({ hex, mimeType, spid });\n    }\n\n    return rtfImages;\n  }, []);\n};\n","import { RtfImagesMap } from '../types';\nimport { getRtfImagesByType } from './getRtfImagesByType';\n\nexport const getRtfImagesMap = (rtf: string): RtfImagesMap => {\n  const rtfImagesMap: RtfImagesMap = {};\n\n  const shppictRtfImages = getRtfImagesByType(rtf, 'i', '\\\\shppict');\n  for (const shppictRtfImage of shppictRtfImages) {\n    rtfImagesMap[shppictRtfImage.spid] = shppictRtfImage;\n  }\n\n  const shpRtfImages = getRtfImagesByType(rtf, 's', '\\\\shp');\n  for (const shpRtfImage of shpRtfImages) {\n    rtfImagesMap[shpRtfImage.spid] = shpRtfImage;\n  }\n\n  return rtfImagesMap;\n};\n","import { getHtmlComments } from '@udecode/plate-common';\n\nexport const getVShapes = (document: Document): Record<string, string> => {\n  const comments = getHtmlComments(document);\n\n  return comments.reduce<Record<string, string>>((vShapesMap, comment) => {\n    try {\n      const xmlDocument = new DOMParser().parseFromString(comment, 'text/html');\n      const vShapes = Array.from(xmlDocument.getElementsByTagName('V:SHAPE'));\n\n      vShapes.forEach((vShape) => {\n        const { id } = vShape;\n        const spid = vShape.getAttribute('o:spid');\n\n        if (typeof id === 'string' && typeof spid === 'string') {\n          vShapesMap[id] = spid;\n        }\n      });\n    } catch (error) {\n      // Cannot parse as XML, we're not interested in this comment\n    }\n\n    return vShapesMap;\n  }, {});\n};\n","import { getVShapes } from './getVShapes';\n\nconst normalizeSpid = (spid: string): string => {\n  const [, , id] = spid.split('_');\n  return id;\n};\n\nexport const getVShapeSpid = (\n  document: Document,\n  element: Element\n): string | null => {\n  if (element.tagName === 'IMG') {\n    const vShapeId = element.getAttribute('v:shapes');\n    const vShapes = getVShapes(document);\n\n    if (!vShapeId) {\n      return null;\n    }\n\n    const vShapeSpid = vShapes[vShapeId];\n\n    if (vShapeSpid) {\n      return normalizeSpid(vShapeSpid);\n    }\n\n    if (\n      element.parentElement &&\n      element.parentElement.parentElement &&\n      element.parentElement.parentElement.innerHTML.indexOf('msEquation') >= 0\n    ) {\n      return null;\n    }\n\n    return normalizeSpid(vShapeId);\n  }\n\n  if (!element.parentElement) {\n    return null;\n  }\n\n  const spid = element.parentElement.getAttribute('o:spid');\n\n  if (spid) {\n    return normalizeSpid(spid);\n  }\n\n  return spid;\n};\n","import { hexToBase64, traverseHtmlElements } from '@udecode/plate-common';\nimport isURL from 'validator/lib/isURL';\nimport { getRtfImagesMap } from './getRtfImagesMap';\nimport { getVShapeSpid } from './getVShapeSpid';\n\n/**\n * Clean docx image elements.\n */\nexport const cleanDocxImageElements = (\n  document: Document,\n  rtf: string,\n  rootNode: Node\n): void => {\n  if (!rtf) {\n    return;\n  }\n\n  traverseHtmlElements(rootNode, (element) => {\n    if (!['IMG', 'V:IMAGEDATA'].includes(element.tagName)) {\n      return true;\n    }\n\n    if (element.tagName === 'IMG') {\n      const src = element.getAttribute('src');\n\n      if (!src || !src.startsWith('file://')) {\n        return true;\n      }\n\n      const alt = element.getAttribute('alt');\n\n      if (typeof alt === 'string' && isURL(alt, { require_protocol: true })) {\n        element.setAttribute('src', alt);\n        return true;\n      }\n    }\n\n    const vShapeSpid = getVShapeSpid(document, element);\n\n    if (!vShapeSpid) {\n      return true;\n    }\n\n    const rtfImagesMap = getRtfImagesMap(rtf);\n    const rtfImage = rtfImagesMap[vShapeSpid];\n\n    if (!rtfImage) {\n      // We fould some kind of vshape (perhaps a drawing) that we don't know\n      // how to recover from RTF. So we just skip it.\n      element.remove();\n      return true;\n    }\n\n    const dataUri = `data:${rtfImage.mimeType};base64,${hexToBase64(\n      rtfImage.hex\n    )}`;\n\n    if (element.tagName === 'IMG') {\n      element.setAttribute('src', dataUri);\n    } else if (element.parentNode && element.parentNode.parentNode) {\n      const imageElement = document.createElement('img');\n      imageElement.setAttribute('src', dataUri);\n      element.parentNode.parentNode.replaceChild(\n        imageElement,\n        element.parentNode\n      );\n    }\n    return true;\n  });\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Clean elements style mso-list to mso-list:Ignore\n */\nexport const cleanDocxListElements = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute) {\n      element.setAttribute(\n        'style',\n        styleAttribute.replace(/mso-list:\\s*Ignore/gim, 'mso-list:Ignore')\n      );\n    }\n\n    return true;\n  });\n};\n","import {\n  removeHtmlNodesBetweenComments,\n  traverseHtmlElements,\n} from '@udecode/plate-common';\n\nexport const getDocxListContentHtml = (rootElement: Element): string => {\n  const clonedElement = rootElement.cloneNode(true) as Element;\n\n  removeHtmlNodesBetweenComments(\n    clonedElement,\n    '[if !supportLists]',\n    '[endif]'\n  );\n\n  traverseHtmlElements(clonedElement, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute === 'mso-list:Ignore') {\n      element.remove();\n    }\n\n    return true;\n  });\n\n  return clonedElement.innerHTML;\n};\n","export const getDocxListIndent = (element: Element): number => {\n  const styleAttribute = element.getAttribute('style') || '';\n  const matches = styleAttribute.match(/level(\\d+)/im);\n\n  if (matches && matches.length >= 1) {\n    const [, level] = matches;\n    return parseInt(level, 10);\n  }\n\n  return 1;\n};\n","export const isDocxBookmark = (element: Element): boolean => {\n  const styleAttribute = element.getAttribute('style');\n  return (\n    (styleAttribute || '').startsWith('mso-bookmark') && !element.textContent\n  );\n};\n","export const isDocxList = (element: Element): boolean => {\n  const styleAttribute = element.getAttribute('style');\n\n  if (!styleAttribute) {\n    return false;\n  }\n\n  const hasMsoListInStyle = /mso-list:\\s*l/gim.test(styleAttribute);\n\n  if (!hasMsoListInStyle) {\n    return false;\n  }\n\n  const hasMsoListIgnoreChild = Boolean(\n    element.querySelector('[style=\"mso-list:Ignore\"]')\n  );\n\n  if (hasMsoListIgnoreChild) {\n    return true;\n  }\n\n  return element.outerHTML.includes('<!--[if !supportLists]-->');\n};\n","export const getDocxListNode = (element: Element): Node | null => {\n  return (\n    element.querySelector('[style=\"mso-list:Ignore\"]') ||\n    element.querySelector('span[lang]')\n  );\n};\n","import { isOlSymbol } from '@udecode/plate-common';\nimport { getDocxListNode } from './getDocxListNode';\n\nexport const isDocxOl = (element: Element): boolean => {\n  const listNode = getDocxListNode(element);\n\n  if (!listNode) {\n    return false;\n  }\n\n  return isOlSymbol(listNode.textContent || '');\n};\n","import { parseHtmlElement } from '@udecode/plate-common';\nimport { getDocxListContentHtml } from './getDocxListContentHtml';\nimport { getDocxListIndent } from './getDocxListIndent';\nimport { isDocxBookmark } from './isDocxBookmark';\nimport { isDocxList } from './isDocxList';\nimport { isDocxOl } from './isDocxOl';\n\ninterface Result {\n  list: Element | null;\n  nextSibling: Element | null;\n}\n\nexport const docxListToList = (element: Element): Result => {\n  const listLevel = getDocxListIndent(element);\n  let listHtml = '';\n  let nextSibling: Element | null = element;\n\n  while (nextSibling) {\n    if (isDocxBookmark(nextSibling)) {\n      nextSibling = nextSibling.nextElementSibling;\n      continue;\n    }\n\n    if (!isDocxList(nextSibling)) {\n      break;\n    }\n\n    const nextListLevel = getDocxListIndent(nextSibling);\n\n    if (nextListLevel < listLevel) {\n      // Lower level found. Current list is done.\n      break;\n    }\n\n    if (nextListLevel > listLevel) {\n      const nestedList = docxListToList(nextSibling);\n\n      if (nestedList.list) {\n        listHtml += nestedList.list.outerHTML;\n      }\n\n      nextSibling = nestedList.nextSibling;\n      continue;\n    }\n\n    listHtml += `<li>${getDocxListContentHtml(nextSibling)}</li>`;\n    const currentElement = nextSibling;\n    nextSibling = currentElement.nextElementSibling;\n    currentElement.remove();\n  }\n\n  const listTagName = isDocxOl(element) ? 'ol' : 'ul';\n  const list = parseHtmlElement(`<${listTagName}>${listHtml}</${listTagName}>`);\n\n  return { list, nextSibling };\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\nimport { docxListToList } from './docxListToList';\nimport { isDocxList } from './isDocxList';\n\nexport const cleanDocxListElementsToList = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute) {\n      element.setAttribute(\n        'style',\n        styleAttribute.replace(/mso-list:\\s*Ignore/gim, 'mso-list:Ignore')\n      );\n    }\n\n    return true;\n  });\n\n  traverseHtmlElements(rootNode, (element) => {\n    if (!isDocxList(element)) {\n      return true;\n    }\n\n    const { parentElement, previousSibling } = element;\n\n    if (!parentElement) {\n      return true;\n    }\n\n    const { list } = docxListToList(element);\n\n    if (!list) {\n      return true;\n    }\n\n    const beforeElement = previousSibling\n      ? previousSibling.nextSibling\n      : parentElement.firstChild;\n\n    if (beforeElement) {\n      parentElement.insertBefore(list, beforeElement);\n    } else {\n      parentElement.appendChild(list);\n    }\n\n    return false;\n  });\n};\n","import { replaceTagName, traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Replace p.MsoQuote elements with blockquote.\n */\nexport const cleanDocxQuotes = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (\n      element.parentNode &&\n      element.tagName === 'P' &&\n      element.classList.contains('MsoQuote')\n    ) {\n      replaceTagName(element, 'blockquote');\n    }\n\n    return true;\n  });\n};\n","import { SPACE, TAB } from '@udecode/plate-common';\n\nexport const generateSpaces = (count: number): string =>\n  Array.from({ length: count }, () => SPACE).join('');\n\nexport const generateTabs = (count: number): string =>\n  Array.from({ length: count }, () => TAB).join('');\n","import { generateSpaces } from './generateSpaces';\n\n/**\n * Replace the element with spaces if its style includes 'mso-spacerun: yes'.\n */\nexport const cleanDocxSpacerun = (element: Element): void => {\n  const styleAttribute = element.getAttribute('style');\n\n  if (\n    !(\n      styleAttribute &&\n      ['mso-spacerun:yes', 'mso-spacerun: yes'].includes(styleAttribute)\n    )\n  ) {\n    return;\n  }\n\n  const spacesCount = (element.textContent || '').length;\n  const replacementNode = document.createTextNode(generateSpaces(spacesCount));\n\n  if (element.parentNode) {\n    element.parentNode.replaceChild(replacementNode, element);\n  }\n};\n","import { generateTabs } from './generateSpaces';\n\n/**\n * Replace element with tabs if its style starts with 'mso-tab-count'.\n */\nexport const cleanDocxTabCount = (element: Element): void => {\n  const styleAttribute = element.getAttribute('style') || '';\n\n  if (!styleAttribute.startsWith('mso-tab-count:')) {\n    return;\n  }\n\n  const [, countString] = styleAttribute.split(':');\n  const count = parseInt(countString, 10);\n  const replacementNode = document.createTextNode(generateTabs(count));\n\n  if (element.parentNode) {\n    element.parentNode.replaceChild(replacementNode, element);\n  }\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\nimport { cleanDocxSpacerun } from './cleanDocxSpacerun';\nimport { cleanDocxTabCount } from './cleanDocxTabCount';\n\n/**\n * Clean docx spaceruns and tab counts.\n */\nexport const cleanDocxSpans = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.nodeName !== 'SPAN') {\n      return true;\n    }\n\n    cleanDocxSpacerun(element);\n    cleanDocxTabCount(element);\n\n    return true;\n  });\n};\n","const DOCX_INDENT_STEP = 36;\n\n/**\n * Convert a string to floating number.\n * Negative values are ignored.\n * Values starting by \".\" are replaced by \"0.\"\n */\nconst extractNumber = (str: string) => {\n  if (str[0] === '-') return 0;\n\n  let number = str.replace(/[^\\d.,]+/, '');\n\n  if (number[0] === '.') {\n    number = `0${number}`;\n  }\n  return parseFloat(number);\n};\n\nconst styleToIndent = (style: string, indentStep = DOCX_INDENT_STEP) => {\n  const indent = extractNumber(style);\n  if (indent) {\n    if (style.includes('in')) {\n      return Math.round((indent * 72) / indentStep);\n    }\n    return Math.round(indent / indentStep);\n  }\n  return 0;\n};\n\nexport const getDocxSpacing = (element: Element, cssProp: string): number => {\n  const el = element as HTMLElement;\n  const spacing = el.style[cssProp];\n\n  if (!spacing) return 0;\n\n  return styleToIndent(spacing) || 0;\n};\n\nexport const getDocxIndent = (element: Element) =>\n  getDocxSpacing(element, 'marginLeft');\n\nexport const getDocxTextIndent = (element: Element) =>\n  getDocxSpacing(element, 'textIndent');\n","import { ListStyleType } from '@udecode/plate-indent-list';\n\nexport const getTextListStyleType = (\n  text: string\n): ListStyleType | undefined => {\n  text = text.trimStart();\n\n  if (text.match(/^\\d+[\\\\.]/)?.[0]) {\n    if (text[0] === '0') {\n      return ListStyleType.DecimalLeadingZero;\n    }\n\n    return ListStyleType.Decimal;\n  }\n\n  if (text.match(/^[ivmcldx]+\\./)?.[0]) {\n    return ListStyleType.LowerRoman;\n  }\n\n  if (text.match(/^[a-z]+\\./)?.[0]) {\n    return ListStyleType.LowerAlpha;\n  }\n\n  if (text.match(/^[IVMCLDX]+\\./)?.[0]) {\n    return ListStyleType.UpperRoman;\n  }\n\n  if (text.match(/^[A-Z]+\\./)?.[0]) {\n    return ListStyleType.UpperAlpha;\n  }\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Check if the element contains docx content.\n * True if one element has:\n * - style including 'mso-'\n * - className including 'Mso'\n */\nexport const isDocxContent = (body: HTMLElement): boolean => {\n  let result = false;\n\n  traverseHtmlElements(body, (element) => {\n    const styleAttribute = element.getAttribute('style') || '';\n    const classList = Array.from(element.classList);\n\n    const isMsoElement =\n      styleAttribute.includes('mso-') ||\n      classList.some((className) => className.startsWith('Mso'));\n\n    result = result || isMsoElement;\n\n    return !result;\n  });\n\n  return result;\n};\n","import {\n  cleanHtmlBrElements,\n  cleanHtmlEmptyElements,\n  cleanHtmlFontElements,\n  cleanHtmlLinkElements,\n  cleanHtmlTextNodes,\n  copyBlockMarksToSpanChild,\n  postCleanHtml,\n  preCleanHtml,\n} from '@udecode/plate-common';\nimport {\n  cleanDocxBrComments,\n  cleanDocxEmptyParagraphs,\n  cleanDocxFootnotes,\n  cleanDocxImageElements,\n  cleanDocxListElements,\n  cleanDocxQuotes,\n  cleanDocxSpans,\n  isDocxContent,\n} from './utils';\n\nexport const cleanDocx = (html: string, rtf: string): string => {\n  const document = new DOMParser().parseFromString(\n    preCleanHtml(html),\n    'text/html'\n  );\n  const { body } = document;\n\n  if (!rtf && !isDocxContent(body)) {\n    return html;\n  }\n\n  cleanDocxFootnotes(body);\n  cleanDocxImageElements(document, rtf, body);\n  cleanHtmlEmptyElements(body);\n  cleanDocxEmptyParagraphs(body);\n  cleanDocxQuotes(body);\n  cleanDocxSpans(body);\n  cleanHtmlTextNodes(body);\n  cleanDocxBrComments(body);\n  cleanHtmlBrElements(body);\n  cleanHtmlLinkElements(body);\n  cleanHtmlFontElements(body);\n  cleanDocxListElements(body);\n  copyBlockMarksToSpanChild(body);\n\n  return postCleanHtml(body.innerHTML);\n};\n","import {\n  createPluginFactory,\n  DeserializeHtml,\n  KEY_DESERIALIZE_HTML,\n  PlatePlugin,\n} from '@udecode/plate-common';\nimport {\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n} from '@udecode/plate-heading';\nimport { KEY_INDENT, KEY_TEXT_INDENT } from '@udecode/plate-indent';\nimport { KEY_LIST_STYLE_TYPE, ListStyleType } from '@udecode/plate-indent-list';\nimport { ELEMENT_IMAGE } from '@udecode/plate-media';\nimport { ELEMENT_PARAGRAPH } from '@udecode/plate-paragraph';\nimport { cleanDocx } from '../docx-cleaner/cleanDocx';\nimport {\n  getDocxIndent,\n  getDocxTextIndent,\n} from '../docx-cleaner/utils/getDocxIndent';\nimport { getDocxListContentHtml } from '../docx-cleaner/utils/getDocxListContentHtml';\nimport { getDocxListIndent } from '../docx-cleaner/utils/getDocxListIndent';\nimport { getTextListStyleType } from '../docx-cleaner/utils/getTextListStyleType';\nimport { isDocxContent } from '../docx-cleaner/utils/isDocxContent';\nimport { isDocxList } from '../docx-cleaner/utils/isDocxList';\n\nexport const KEY_DESERIALIZE_DOCX = 'deserializeDocx';\n\nconst getListNode = (type: string): DeserializeHtml['getNode'] => (element) => {\n  const node: any = { type };\n\n  if (isDocxList(element)) {\n    node[KEY_INDENT] = getDocxListIndent(element);\n\n    const text = element.textContent ?? '';\n\n    node[KEY_LIST_STYLE_TYPE] =\n      getTextListStyleType(text) ?? ListStyleType.Disc;\n\n    element.innerHTML = getDocxListContentHtml(element);\n  } else {\n    const indent = getDocxIndent(element);\n    if (indent) {\n      node[KEY_INDENT] = indent;\n    }\n\n    const textIndent = getDocxTextIndent(element);\n    if (textIndent) {\n      node[KEY_TEXT_INDENT] = textIndent;\n    }\n  }\n\n  return node;\n};\n\nconst KEYS = [\n  ELEMENT_PARAGRAPH,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n];\n\nconst overrideByKey: Record<string, Partial<PlatePlugin>> = {};\n\nKEYS.forEach((key) => {\n  overrideByKey[key] = {\n    then: (editor, { type }) => ({\n      deserializeHtml: {\n        getNode: getListNode(type),\n      },\n    }),\n  };\n});\n\nexport const createDeserializeDocxPlugin = createPluginFactory({\n  key: KEY_DESERIALIZE_DOCX,\n  inject: {\n    pluginsByKey: {\n      [KEY_DESERIALIZE_HTML]: {\n        editor: {\n          insertData: {\n            transformData: (data, { dataTransfer }) => {\n              const rtf = dataTransfer.getData('text/rtf');\n\n              return cleanDocx(data, rtf);\n            },\n          },\n        },\n      },\n    },\n  },\n  overrideByKey: {\n    ...overrideByKey,\n    [ELEMENT_IMAGE]: {\n      editor: {\n        insertData: {\n          query: ({ dataTransfer }) => {\n            const data = dataTransfer.getData('text/html');\n            const { body } = new DOMParser().parseFromString(data, 'text/html');\n\n            return !isDocxContent(body);\n          },\n        },\n      },\n    },\n  },\n});\n"],"names":["cleanDocxBrComments","rootNode","traverseHtmlElements","element","tagName","nextSibling","isHtmlComment","data","removeHtmlNodesBetweenComments","isHtmlOpEmpty","nodeName","textContent","NO_BREAK_SPACE","isHtmlElementEmpty","children","length","firstElementChild","cleanDocxEmptyParagraphs","innerHTML","isDocxFootnote","classList","contains","extractFootnoteNumber","footnote","trim","replace","cleanDocxFootnotes","footnoteReplacement","document","createElement","parentElement","replaceChild","require$$0","require$$1","require$$2","require$$3","getRtfImageHex","imageData","bliptagData","split","bracketSplit","beforeBracket","afterBracket","includes","SPACE","join","spaceSplit","slice","getRtfImageMimeType","bliptagMeta","END_OF_ID_SEQUENCE_CHARACTERS","CARRIAGE_RETURN","LINE_FEED","getRtfImageSpid","spidPrefix","indexes","map","character","indexOf","foundIndexes","filter","index","idLength","Math","min","id","substring","getRtfImagesByType","rtf","type","images","reduce","rtfImages","image","spid","mimeType","hex","push","getRtfImagesMap","rtfImagesMap","shppictRtfImages","shppictRtfImage","shpRtfImages","shpRtfImage","getVShapes","comments","getHtmlComments","vShapesMap","comment","xmlDocument","DOMParser","parseFromString","vShapes","Array","from","getElementsByTagName","forEach","vShape","getAttribute","error","normalizeSpid","getVShapeSpid","vShapeId","vShapeSpid","cleanDocxImageElements","src","startsWith","alt","isURL","require_protocol","setAttribute","rtfImage","remove","dataUri","hexToBase64","parentNode","imageElement","cleanDocxListElements","styleAttribute","getDocxListContentHtml","rootElement","clonedElement","cloneNode","getDocxListIndent","matches","match","level","parseInt","isDocxBookmark","isDocxList","hasMsoListInStyle","test","hasMsoListIgnoreChild","Boolean","querySelector","outerHTML","getDocxListNode","isDocxOl","listNode","isOlSymbol","docxListToList","listLevel","listHtml","nextElementSibling","nextListLevel","nestedList","list","currentElement","listTagName","parseHtmlElement","cleanDocxListElementsToList","previousSibling","beforeElement","firstChild","insertBefore","appendChild","cleanDocxQuotes","replaceTagName","generateSpaces","count","generateTabs","TAB","cleanDocxSpacerun","spacesCount","replacementNode","createTextNode","cleanDocxTabCount","countString","cleanDocxSpans","DOCX_INDENT_STEP","extractNumber","str","number","parseFloat","styleToIndent","style","indentStep","indent","round","getDocxSpacing","cssProp","el","spacing","getDocxIndent","getDocxTextIndent","getTextListStyleType","text","trimStart","ListStyleType","DecimalLeadingZero","Decimal","LowerRoman","LowerAlpha","UpperRoman","UpperAlpha","isDocxContent","body","result","isMsoElement","some","className","cleanDocx","html","preCleanHtml","cleanHtmlEmptyElements","cleanHtmlTextNodes","cleanHtmlBrElements","cleanHtmlLinkElements","cleanHtmlFontElements","copyBlockMarksToSpanChild","postCleanHtml","KEY_DESERIALIZE_DOCX","getListNode","node","KEY_INDENT","KEY_LIST_STYLE_TYPE","Disc","textIndent","KEY_TEXT_INDENT","KEYS","ELEMENT_PARAGRAPH","ELEMENT_H1","ELEMENT_H2","ELEMENT_H3","ELEMENT_H4","ELEMENT_H5","ELEMENT_H6","overrideByKey","key","then","editor","deserializeHtml","getNode","createDeserializeDocxPlugin","createPluginFactory","inject","pluginsByKey","KEY_DESERIALIZE_HTML","insertData","transformData","dataTransfer","getData","ELEMENT_IMAGE","query"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.es.js","sources":["../src/docx-cleaner/utils/cleanDocxBrComments.ts","../src/docx-cleaner/utils/cleanDocxEmptyParagraphs.ts","../src/docx-cleaner/utils/isDocxFootnote.ts","../src/docx-cleaner/utils/cleanDocxFootnotes.ts","../../../../node_modules/validator/lib/util/assertString.js","../../../../node_modules/validator/lib/util/merge.js","../../../../node_modules/validator/lib/isFQDN.js","../../../../node_modules/validator/lib/isIP.js","../../../../node_modules/validator/lib/isURL.js","../src/docx-cleaner/utils/getRtfImageHex.ts","../src/docx-cleaner/utils/getRtfImageMimeType.ts","../src/docx-cleaner/utils/getRtfImageSpid.ts","../src/docx-cleaner/utils/getRtfImagesByType.ts","../src/docx-cleaner/utils/getRtfImagesMap.ts","../src/docx-cleaner/utils/getVShapes.ts","../src/docx-cleaner/utils/getVShapeSpid.ts","../src/docx-cleaner/utils/cleanDocxImageElements.ts","../src/docx-cleaner/utils/cleanDocxListElements.ts","../src/docx-cleaner/utils/getDocxListContentHtml.ts","../src/docx-cleaner/utils/getDocxListIndent.ts","../src/docx-cleaner/utils/isDocxBookmark.ts","../src/docx-cleaner/utils/isDocxList.ts","../src/docx-cleaner/utils/getDocxListNode.ts","../src/docx-cleaner/utils/isDocxOl.ts","../src/docx-cleaner/utils/docxListToList.ts","../src/docx-cleaner/utils/cleanDocxListElementsToList.ts","../src/docx-cleaner/utils/cleanDocxQuotes.ts","../src/docx-cleaner/utils/generateSpaces.ts","../src/docx-cleaner/utils/cleanDocxSpacerun.ts","../src/docx-cleaner/utils/cleanDocxTabCount.ts","../src/docx-cleaner/utils/cleanDocxSpans.ts","../src/docx-cleaner/utils/getDocxIndent.ts","../src/docx-cleaner/utils/getTextListStyleType.ts","../src/docx-cleaner/utils/isDocxContent.ts","../src/docx-cleaner/cleanDocx.ts","../src/deserializer/createDeserializeDocxPlugin.ts"],"sourcesContent":["import {\n  isHtmlComment,\n  removeHtmlNodesBetweenComments,\n  traverseHtmlElements,\n} from '@udecode/plate-common';\n\n/**\n * Remove HTML nodes between comments in the next sibling after BR.\n */\nexport const cleanDocxBrComments = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName !== 'BR') {\n      return true;\n    }\n\n    if (\n      element.nextSibling &&\n      isHtmlComment(element.nextSibling) &&\n      element.nextSibling.data === '[if !supportLineBreakNewLine]'\n    ) {\n      removeHtmlNodesBetweenComments(\n        element.nextSibling,\n        '[if !supportLineBreakNewLine]',\n        '[endif]'\n      );\n    }\n\n    return false;\n  });\n};\n","import { NO_BREAK_SPACE, traverseHtmlElements } from '@udecode/plate-common';\n\nconst isHtmlOpEmpty = (element: Element): boolean =>\n  element.nodeName === 'O:P' && element.textContent === NO_BREAK_SPACE;\n\nconst isHtmlElementEmpty = (element: Element): boolean =>\n  element.children.length === 1 &&\n  element.firstElementChild !== null &&\n  (isHtmlOpEmpty(element.firstElementChild) ||\n    isHtmlElementEmpty(element.firstElementChild));\n\n/**\n * Remove paragraph innerHTML if its child is 'O:P' with NO_BREAK_SPACE.\n */\nexport const cleanDocxEmptyParagraphs = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName === 'P' && isHtmlElementEmpty(element)) {\n      element.innerHTML = '';\n    }\n\n    return true;\n  });\n};\n","/**\n * Is element a docx footnote.\n */\nexport const isDocxFootnote = (element: Element): boolean => {\n  return (\n    element.tagName === 'SPAN' &&\n    element.classList.contains('MsoFootnoteReference')\n  );\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\nimport { isDocxFootnote } from './isDocxFootnote';\n\n/**\n * Gets \"4\" from \"[4]\", \"A\" from \"[A]\", etc.\n */\nconst extractFootnoteNumber = (footnote: Element): string => {\n  return (footnote.textContent || '').trim().replace(/[[\\]]/g, '');\n};\n\n/**\n * Replace docx footnotes with sup element.\n */\nexport const cleanDocxFootnotes = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (isDocxFootnote(element)) {\n      const footnoteReplacement = document.createElement('sup');\n      footnoteReplacement.textContent = extractFootnoteNumber(element);\n\n      if (element.parentElement) {\n        element.parentElement.replaceChild(footnoteReplacement, element);\n      }\n\n      return true;\n    }\n\n    return true;\n  });\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  /* Remove the optional wildcard before checking validity */\n\n\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces\n\n\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n\n  if (version === '4') {\n    if (!IPv4AddressRegExp.test(str)) {\n      return false;\n    }\n\n    var parts = str.split('.').sort(function (a, b) {\n      return a - b;\n    });\n    return parts[3] <= 255;\n  }\n\n  if (version === '6') {\n    return !!IPv6AddressRegExp.test(str);\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.substr(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.substr(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    if (split[0] === '') {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n\n    var _auth$split = auth.split(':'),\n        _auth$split2 = _slicedToArray(_auth$split, 2),\n        user = _auth$split2[0],\n        password = _auth$split2[1];\n\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","import { SPACE } from '@udecode/plate-common';\n\nexport const getRtfImageHex = (imageData: string): string | null => {\n  const [, bliptagData = ''] = imageData.split('bliptag');\n  const bracketSplit = bliptagData.split('}');\n\n  if (bracketSplit.length < 2) {\n    return null;\n  }\n\n  const [beforeBracket, afterBracket] = bracketSplit;\n\n  if (bracketSplit.length > 2 && beforeBracket.includes('blipuid')) {\n    return afterBracket.split(SPACE).join('');\n  }\n\n  const spaceSplit = beforeBracket.split(SPACE);\n\n  if (spaceSplit.length < 2) {\n    return null;\n  }\n\n  return spaceSplit.slice(1).join('');\n};\n","export const getRtfImageMimeType = (imageData: string): string | null => {\n  const [bliptagMeta] = imageData.split('bliptag');\n\n  if (bliptagMeta.includes('pngblip')) {\n    return 'image/png';\n  }\n\n  if (bliptagMeta.includes('jpegblip')) {\n    return 'image/jpeg';\n  }\n\n  return null;\n};\n","import { CARRIAGE_RETURN, LINE_FEED, SPACE } from '@udecode/plate-common';\n\nconst END_OF_ID_SEQUENCE_CHARACTERS = [\n  '\\\\',\n  '{',\n  CARRIAGE_RETURN,\n  LINE_FEED,\n  SPACE,\n];\n\nexport const getRtfImageSpid = (\n  imageData: string,\n  spidPrefix: string\n): string | null => {\n  const indexes = END_OF_ID_SEQUENCE_CHARACTERS.map((character) =>\n    imageData.indexOf(character)\n  );\n  const foundIndexes = indexes.filter((index) => index !== -1);\n  const idLength = Math.min(imageData.length, ...foundIndexes);\n  const id = imageData.substring(0, idLength);\n  return id ? `${spidPrefix}${id}` : null;\n};\n","import { RtfImage } from '../types';\nimport { getRtfImageHex } from './getRtfImageHex';\nimport { getRtfImageMimeType } from './getRtfImageMimeType';\nimport { getRtfImageSpid } from './getRtfImageSpid';\n\nexport const getRtfImagesByType = (\n  rtf: string,\n  spidPrefix: string,\n  type: string\n): RtfImage[] => {\n  const [, ...images] = rtf.split(type);\n\n  return images.reduce<RtfImage[]>((rtfImages, image) => {\n    const [, imageData = ''] = image.split('shplid');\n    const spid = getRtfImageSpid(imageData, spidPrefix);\n    const mimeType = getRtfImageMimeType(imageData);\n    const hex = getRtfImageHex(imageData);\n\n    if (spid && mimeType && hex) {\n      rtfImages.push({ hex, mimeType, spid });\n    }\n\n    return rtfImages;\n  }, []);\n};\n","import { RtfImagesMap } from '../types';\nimport { getRtfImagesByType } from './getRtfImagesByType';\n\nexport const getRtfImagesMap = (rtf: string): RtfImagesMap => {\n  const rtfImagesMap: RtfImagesMap = {};\n\n  const shppictRtfImages = getRtfImagesByType(rtf, 'i', '\\\\shppict');\n  for (const shppictRtfImage of shppictRtfImages) {\n    rtfImagesMap[shppictRtfImage.spid] = shppictRtfImage;\n  }\n\n  const shpRtfImages = getRtfImagesByType(rtf, 's', '\\\\shp');\n  for (const shpRtfImage of shpRtfImages) {\n    rtfImagesMap[shpRtfImage.spid] = shpRtfImage;\n  }\n\n  return rtfImagesMap;\n};\n","import { getHtmlComments } from '@udecode/plate-common';\n\nexport const getVShapes = (document: Document): Record<string, string> => {\n  const comments = getHtmlComments(document);\n\n  return comments.reduce<Record<string, string>>((vShapesMap, comment) => {\n    try {\n      const xmlDocument = new DOMParser().parseFromString(comment, 'text/html');\n      const vShapes = Array.from(xmlDocument.getElementsByTagName('V:SHAPE'));\n\n      vShapes.forEach((vShape) => {\n        const { id } = vShape;\n        const spid = vShape.getAttribute('o:spid');\n\n        if (typeof id === 'string' && typeof spid === 'string') {\n          vShapesMap[id] = spid;\n        }\n      });\n    } catch (error) {\n      // Cannot parse as XML, we're not interested in this comment\n    }\n\n    return vShapesMap;\n  }, {});\n};\n","import { getVShapes } from './getVShapes';\n\nconst normalizeSpid = (spid: string): string => {\n  const [, , id] = spid.split('_');\n  return id;\n};\n\nexport const getVShapeSpid = (\n  document: Document,\n  element: Element\n): string | null => {\n  if (element.tagName === 'IMG') {\n    const vShapeId = element.getAttribute('v:shapes');\n    const vShapes = getVShapes(document);\n\n    if (!vShapeId) {\n      return null;\n    }\n\n    const vShapeSpid = vShapes[vShapeId];\n\n    if (vShapeSpid) {\n      return normalizeSpid(vShapeSpid);\n    }\n\n    if (\n      element.parentElement &&\n      element.parentElement.parentElement &&\n      element.parentElement.parentElement.innerHTML.indexOf('msEquation') >= 0\n    ) {\n      return null;\n    }\n\n    return normalizeSpid(vShapeId);\n  }\n\n  if (!element.parentElement) {\n    return null;\n  }\n\n  const spid = element.parentElement.getAttribute('o:spid');\n\n  if (spid) {\n    return normalizeSpid(spid);\n  }\n\n  return spid;\n};\n","import { hexToBase64, traverseHtmlElements } from '@udecode/plate-common';\nimport isURL from 'validator/lib/isURL';\nimport { getRtfImagesMap } from './getRtfImagesMap';\nimport { getVShapeSpid } from './getVShapeSpid';\n\n/**\n * Clean docx image elements.\n */\nexport const cleanDocxImageElements = (\n  document: Document,\n  rtf: string,\n  rootNode: Node\n): void => {\n  if (!rtf) {\n    return;\n  }\n\n  traverseHtmlElements(rootNode, (element) => {\n    if (!['IMG', 'V:IMAGEDATA'].includes(element.tagName)) {\n      return true;\n    }\n\n    if (element.tagName === 'IMG') {\n      const src = element.getAttribute('src');\n\n      if (!src || !src.startsWith('file://')) {\n        return true;\n      }\n\n      const alt = element.getAttribute('alt');\n\n      if (typeof alt === 'string' && isURL(alt, { require_protocol: true })) {\n        element.setAttribute('src', alt);\n        return true;\n      }\n    }\n\n    const vShapeSpid = getVShapeSpid(document, element);\n\n    if (!vShapeSpid) {\n      return true;\n    }\n\n    const rtfImagesMap = getRtfImagesMap(rtf);\n    const rtfImage = rtfImagesMap[vShapeSpid];\n\n    if (!rtfImage) {\n      // We fould some kind of vshape (perhaps a drawing) that we don't know\n      // how to recover from RTF. So we just skip it.\n      element.remove();\n      return true;\n    }\n\n    const dataUri = `data:${rtfImage.mimeType};base64,${hexToBase64(\n      rtfImage.hex\n    )}`;\n\n    if (element.tagName === 'IMG') {\n      element.setAttribute('src', dataUri);\n    } else if (element.parentNode && element.parentNode.parentNode) {\n      const imageElement = document.createElement('img');\n      imageElement.setAttribute('src', dataUri);\n      element.parentNode.parentNode.replaceChild(\n        imageElement,\n        element.parentNode\n      );\n    }\n    return true;\n  });\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Clean elements style mso-list to mso-list:Ignore\n */\nexport const cleanDocxListElements = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute) {\n      element.setAttribute(\n        'style',\n        styleAttribute.replace(/mso-list:\\s*Ignore/gim, 'mso-list:Ignore')\n      );\n    }\n\n    return true;\n  });\n};\n","import {\n  removeHtmlNodesBetweenComments,\n  traverseHtmlElements,\n} from '@udecode/plate-common';\n\nexport const getDocxListContentHtml = (rootElement: Element): string => {\n  const clonedElement = rootElement.cloneNode(true) as Element;\n\n  removeHtmlNodesBetweenComments(\n    clonedElement,\n    '[if !supportLists]',\n    '[endif]'\n  );\n\n  traverseHtmlElements(clonedElement, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute === 'mso-list:Ignore') {\n      element.remove();\n    }\n\n    return true;\n  });\n\n  return clonedElement.innerHTML;\n};\n","export const getDocxListIndent = (element: Element): number => {\n  const styleAttribute = element.getAttribute('style') || '';\n  const matches = styleAttribute.match(/level(\\d+)/im);\n\n  if (matches && matches.length >= 1) {\n    const [, level] = matches;\n    return parseInt(level, 10);\n  }\n\n  return 1;\n};\n","export const isDocxBookmark = (element: Element): boolean => {\n  const styleAttribute = element.getAttribute('style');\n  return (\n    (styleAttribute || '').startsWith('mso-bookmark') && !element.textContent\n  );\n};\n","export const isDocxList = (element: Element): boolean => {\n  const styleAttribute = element.getAttribute('style');\n\n  if (!styleAttribute) {\n    return false;\n  }\n\n  const hasMsoListInStyle = /mso-list:\\s*l/gim.test(styleAttribute);\n\n  if (!hasMsoListInStyle) {\n    return false;\n  }\n\n  const hasMsoListIgnoreChild = Boolean(\n    element.querySelector('[style=\"mso-list:Ignore\"]')\n  );\n\n  if (hasMsoListIgnoreChild) {\n    return true;\n  }\n\n  return element.outerHTML.includes('<!--[if !supportLists]-->');\n};\n","export const getDocxListNode = (element: Element): Node | null => {\n  return (\n    element.querySelector('[style=\"mso-list:Ignore\"]') ||\n    element.querySelector('span[lang]')\n  );\n};\n","import { isOlSymbol } from '@udecode/plate-common';\nimport { getDocxListNode } from './getDocxListNode';\n\nexport const isDocxOl = (element: Element): boolean => {\n  const listNode = getDocxListNode(element);\n\n  if (!listNode) {\n    return false;\n  }\n\n  return isOlSymbol(listNode.textContent || '');\n};\n","import { parseHtmlElement } from '@udecode/plate-common';\nimport { getDocxListContentHtml } from './getDocxListContentHtml';\nimport { getDocxListIndent } from './getDocxListIndent';\nimport { isDocxBookmark } from './isDocxBookmark';\nimport { isDocxList } from './isDocxList';\nimport { isDocxOl } from './isDocxOl';\n\ninterface Result {\n  list: Element | null;\n  nextSibling: Element | null;\n}\n\nexport const docxListToList = (element: Element): Result => {\n  const listLevel = getDocxListIndent(element);\n  let listHtml = '';\n  let nextSibling: Element | null = element;\n\n  while (nextSibling) {\n    if (isDocxBookmark(nextSibling)) {\n      nextSibling = nextSibling.nextElementSibling;\n      continue;\n    }\n\n    if (!isDocxList(nextSibling)) {\n      break;\n    }\n\n    const nextListLevel = getDocxListIndent(nextSibling);\n\n    if (nextListLevel < listLevel) {\n      // Lower level found. Current list is done.\n      break;\n    }\n\n    if (nextListLevel > listLevel) {\n      const nestedList = docxListToList(nextSibling);\n\n      if (nestedList.list) {\n        listHtml += nestedList.list.outerHTML;\n      }\n\n      nextSibling = nestedList.nextSibling;\n      continue;\n    }\n\n    listHtml += `<li>${getDocxListContentHtml(nextSibling)}</li>`;\n    const currentElement = nextSibling;\n    nextSibling = currentElement.nextElementSibling;\n    currentElement.remove();\n  }\n\n  const listTagName = isDocxOl(element) ? 'ol' : 'ul';\n  const list = parseHtmlElement(`<${listTagName}>${listHtml}</${listTagName}>`);\n\n  return { list, nextSibling };\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\nimport { docxListToList } from './docxListToList';\nimport { isDocxList } from './isDocxList';\n\nexport const cleanDocxListElementsToList = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute) {\n      element.setAttribute(\n        'style',\n        styleAttribute.replace(/mso-list:\\s*Ignore/gim, 'mso-list:Ignore')\n      );\n    }\n\n    return true;\n  });\n\n  traverseHtmlElements(rootNode, (element) => {\n    if (!isDocxList(element)) {\n      return true;\n    }\n\n    const { parentElement, previousSibling } = element;\n\n    if (!parentElement) {\n      return true;\n    }\n\n    const { list } = docxListToList(element);\n\n    if (!list) {\n      return true;\n    }\n\n    const beforeElement = previousSibling\n      ? previousSibling.nextSibling\n      : parentElement.firstChild;\n\n    if (beforeElement) {\n      parentElement.insertBefore(list, beforeElement);\n    } else {\n      parentElement.appendChild(list);\n    }\n\n    return false;\n  });\n};\n","import { replaceTagName, traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Replace p.MsoQuote elements with blockquote.\n */\nexport const cleanDocxQuotes = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (\n      element.parentNode &&\n      element.tagName === 'P' &&\n      element.classList.contains('MsoQuote')\n    ) {\n      replaceTagName(element, 'blockquote');\n    }\n\n    return true;\n  });\n};\n","import { SPACE, TAB } from '@udecode/plate-common';\n\nexport const generateSpaces = (count: number): string =>\n  Array.from({ length: count }, () => SPACE).join('');\n\nexport const generateTabs = (count: number): string =>\n  Array.from({ length: count }, () => TAB).join('');\n","import { generateSpaces } from './generateSpaces';\n\n/**\n * Replace the element with spaces if its style includes 'mso-spacerun: yes'.\n */\nexport const cleanDocxSpacerun = (element: Element): void => {\n  const styleAttribute = element.getAttribute('style');\n\n  if (\n    !(\n      styleAttribute &&\n      ['mso-spacerun:yes', 'mso-spacerun: yes'].includes(styleAttribute)\n    )\n  ) {\n    return;\n  }\n\n  const spacesCount = (element.textContent || '').length;\n  const replacementNode = document.createTextNode(generateSpaces(spacesCount));\n\n  if (element.parentNode) {\n    element.parentNode.replaceChild(replacementNode, element);\n  }\n};\n","import { generateTabs } from './generateSpaces';\n\n/**\n * Replace element with tabs if its style starts with 'mso-tab-count'.\n */\nexport const cleanDocxTabCount = (element: Element): void => {\n  const styleAttribute = element.getAttribute('style') || '';\n\n  if (!styleAttribute.startsWith('mso-tab-count:')) {\n    return;\n  }\n\n  const [, countString] = styleAttribute.split(':');\n  const count = parseInt(countString, 10);\n  const replacementNode = document.createTextNode(generateTabs(count));\n\n  if (element.parentNode) {\n    element.parentNode.replaceChild(replacementNode, element);\n  }\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\nimport { cleanDocxSpacerun } from './cleanDocxSpacerun';\nimport { cleanDocxTabCount } from './cleanDocxTabCount';\n\n/**\n * Clean docx spaceruns and tab counts.\n */\nexport const cleanDocxSpans = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.nodeName !== 'SPAN') {\n      return true;\n    }\n\n    cleanDocxSpacerun(element);\n    cleanDocxTabCount(element);\n\n    return true;\n  });\n};\n","const DOCX_INDENT_STEP = 36;\n\n/**\n * Convert a string to floating number.\n * Negative values are ignored.\n * Values starting by \".\" are replaced by \"0.\"\n */\nconst extractNumber = (str: string) => {\n  if (str[0] === '-') return 0;\n\n  let number = str.replace(/[^\\d.,]+/, '');\n\n  if (number[0] === '.') {\n    number = `0${number}`;\n  }\n  return parseFloat(number);\n};\n\nconst styleToIndent = (style: string, indentStep = DOCX_INDENT_STEP) => {\n  const indent = extractNumber(style);\n  if (indent) {\n    if (style.includes('in')) {\n      return Math.round((indent * 72) / indentStep);\n    }\n    return Math.round(indent / indentStep);\n  }\n  return 0;\n};\n\nexport const getDocxSpacing = (element: Element, cssProp: string): number => {\n  const el = element as HTMLElement;\n  const spacing = el.style[cssProp];\n\n  if (!spacing) return 0;\n\n  return styleToIndent(spacing) || 0;\n};\n\nexport const getDocxIndent = (element: Element) =>\n  getDocxSpacing(element, 'marginLeft');\n\nexport const getDocxTextIndent = (element: Element) =>\n  getDocxSpacing(element, 'textIndent');\n","import { ListStyleType } from '@udecode/plate-indent-list';\n\nexport const getTextListStyleType = (\n  text: string\n): ListStyleType | undefined => {\n  text = text.trimStart();\n\n  if (text.match(/^\\d+[\\\\.]/)?.[0]) {\n    if (text[0] === '0') {\n      return ListStyleType.DecimalLeadingZero;\n    }\n\n    return ListStyleType.Decimal;\n  }\n\n  if (text.match(/^[ivmcldx]+\\./)?.[0]) {\n    return ListStyleType.LowerRoman;\n  }\n\n  if (text.match(/^[a-z]+\\./)?.[0]) {\n    return ListStyleType.LowerAlpha;\n  }\n\n  if (text.match(/^[IVMCLDX]+\\./)?.[0]) {\n    return ListStyleType.UpperRoman;\n  }\n\n  if (text.match(/^[A-Z]+\\./)?.[0]) {\n    return ListStyleType.UpperAlpha;\n  }\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Check if the element contains docx content.\n * True if one element has:\n * - style including 'mso-'\n * - className including 'Mso'\n */\nexport const isDocxContent = (body: HTMLElement): boolean => {\n  let result = false;\n\n  traverseHtmlElements(body, (element) => {\n    const styleAttribute = element.getAttribute('style') || '';\n    const classList = Array.from(element.classList);\n\n    const isMsoElement =\n      styleAttribute.includes('mso-') ||\n      classList.some((className) => className.startsWith('Mso'));\n\n    result = result || isMsoElement;\n\n    return !result;\n  });\n\n  return result;\n};\n","import {\n  cleanHtmlBrElements,\n  cleanHtmlEmptyElements,\n  cleanHtmlFontElements,\n  cleanHtmlLinkElements,\n  cleanHtmlTextNodes,\n  copyBlockMarksToSpanChild,\n  postCleanHtml,\n  preCleanHtml,\n} from '@udecode/plate-common';\nimport {\n  cleanDocxBrComments,\n  cleanDocxEmptyParagraphs,\n  cleanDocxFootnotes,\n  cleanDocxImageElements,\n  cleanDocxListElements,\n  cleanDocxQuotes,\n  cleanDocxSpans,\n  isDocxContent,\n} from './utils';\n\nexport const cleanDocx = (html: string, rtf: string): string => {\n  const document = new DOMParser().parseFromString(\n    preCleanHtml(html),\n    'text/html'\n  );\n  const { body } = document;\n\n  if (!rtf && !isDocxContent(body)) {\n    return html;\n  }\n\n  cleanDocxFootnotes(body);\n  cleanDocxImageElements(document, rtf, body);\n  cleanHtmlEmptyElements(body);\n  cleanDocxEmptyParagraphs(body);\n  cleanDocxQuotes(body);\n  cleanDocxSpans(body);\n  cleanHtmlTextNodes(body);\n  cleanDocxBrComments(body);\n  cleanHtmlBrElements(body);\n  cleanHtmlLinkElements(body);\n  cleanHtmlFontElements(body);\n  cleanDocxListElements(body);\n  copyBlockMarksToSpanChild(body);\n\n  return postCleanHtml(body.innerHTML);\n};\n","import {\n  createPluginFactory,\n  DeserializeHtml,\n  KEY_DESERIALIZE_HTML,\n  PlatePlugin,\n} from '@udecode/plate-common';\nimport {\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n} from '@udecode/plate-heading';\nimport { KEY_INDENT, KEY_TEXT_INDENT } from '@udecode/plate-indent';\nimport { KEY_LIST_STYLE_TYPE, ListStyleType } from '@udecode/plate-indent-list';\nimport { ELEMENT_PARAGRAPH } from '@udecode/plate-paragraph';\nimport { cleanDocx } from '../docx-cleaner/cleanDocx';\nimport {\n  getDocxIndent,\n  getDocxTextIndent,\n} from '../docx-cleaner/utils/getDocxIndent';\nimport { getDocxListContentHtml } from '../docx-cleaner/utils/getDocxListContentHtml';\nimport { getDocxListIndent } from '../docx-cleaner/utils/getDocxListIndent';\nimport { getTextListStyleType } from '../docx-cleaner/utils/getTextListStyleType';\nimport { isDocxContent } from '../docx-cleaner/utils/isDocxContent';\nimport { isDocxList } from '../docx-cleaner/utils/isDocxList';\n\nexport const KEY_DESERIALIZE_DOCX = 'deserializeDocx';\n\nconst getListNode = (type: string): DeserializeHtml['getNode'] => (element) => {\n  const node: any = { type };\n\n  if (isDocxList(element)) {\n    node[KEY_INDENT] = getDocxListIndent(element);\n\n    const text = element.textContent ?? '';\n\n    node[KEY_LIST_STYLE_TYPE] =\n      getTextListStyleType(text) ?? ListStyleType.Disc;\n\n    element.innerHTML = getDocxListContentHtml(element);\n  } else {\n    const indent = getDocxIndent(element);\n    if (indent) {\n      node[KEY_INDENT] = indent;\n    }\n\n    const textIndent = getDocxTextIndent(element);\n    if (textIndent) {\n      node[KEY_TEXT_INDENT] = textIndent;\n    }\n  }\n\n  return node;\n};\n\nconst KEYS = [\n  ELEMENT_PARAGRAPH,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n];\n\nconst overrideByKey: Record<string, Partial<PlatePlugin>> = {};\n\nKEYS.forEach((key) => {\n  overrideByKey[key] = {\n    then: (editor, { type }) => ({\n      deserializeHtml: {\n        getNode: getListNode(type),\n      },\n    }),\n  };\n});\n\nexport const createDeserializeDocxPlugin = createPluginFactory({\n  key: KEY_DESERIALIZE_DOCX,\n  inject: {\n    pluginsByKey: {\n      [KEY_DESERIALIZE_HTML]: {\n        editor: {\n          insertData: {\n            transformData: (data, { dataTransfer }) => {\n              const rtf = dataTransfer.getData('text/rtf');\n\n              return cleanDocx(data, rtf);\n            },\n          },\n        },\n      },\n    },\n  },\n  overrideByKey: {\n    ...overrideByKey,\n    [ELEMENT_IMAGE]: {\n      editor: {\n        insertData: {\n          query: ({ dataTransfer }) => {\n            const data = dataTransfer.getData('text/html');\n            const { body } = new DOMParser().parseFromString(data, 'text/html');\n\n            return !isDocxContent(body);\n          },\n        },\n      },\n    },\n  },\n});\n"],"names":["cleanDocxBrComments","rootNode","traverseHtmlElements","element","tagName","nextSibling","isHtmlComment","data","removeHtmlNodesBetweenComments","isHtmlOpEmpty","nodeName","textContent","NO_BREAK_SPACE","isHtmlElementEmpty","children","length","firstElementChild","cleanDocxEmptyParagraphs","innerHTML","isDocxFootnote","classList","contains","extractFootnoteNumber","footnote","trim","replace","cleanDocxFootnotes","footnoteReplacement","document","createElement","parentElement","replaceChild","require$$0","require$$1","require$$2","require$$3","getRtfImageHex","imageData","bliptagData","split","bracketSplit","beforeBracket","afterBracket","includes","SPACE","join","spaceSplit","slice","getRtfImageMimeType","bliptagMeta","END_OF_ID_SEQUENCE_CHARACTERS","CARRIAGE_RETURN","LINE_FEED","getRtfImageSpid","spidPrefix","indexes","map","character","indexOf","foundIndexes","filter","index","idLength","Math","min","id","substring","getRtfImagesByType","rtf","type","images","reduce","rtfImages","image","spid","mimeType","hex","push","getRtfImagesMap","rtfImagesMap","shppictRtfImages","shppictRtfImage","shpRtfImages","shpRtfImage","getVShapes","comments","getHtmlComments","vShapesMap","comment","xmlDocument","DOMParser","parseFromString","vShapes","Array","from","getElementsByTagName","forEach","vShape","getAttribute","error","normalizeSpid","getVShapeSpid","vShapeId","vShapeSpid","cleanDocxImageElements","src","startsWith","alt","isURL","require_protocol","setAttribute","rtfImage","remove","dataUri","hexToBase64","parentNode","imageElement","cleanDocxListElements","styleAttribute","getDocxListContentHtml","rootElement","clonedElement","cloneNode","getDocxListIndent","matches","match","level","parseInt","isDocxBookmark","isDocxList","hasMsoListInStyle","test","hasMsoListIgnoreChild","Boolean","querySelector","outerHTML","getDocxListNode","isDocxOl","listNode","isOlSymbol","docxListToList","listLevel","listHtml","nextElementSibling","nextListLevel","nestedList","list","currentElement","listTagName","parseHtmlElement","cleanDocxListElementsToList","previousSibling","beforeElement","firstChild","insertBefore","appendChild","cleanDocxQuotes","replaceTagName","generateSpaces","count","generateTabs","TAB","cleanDocxSpacerun","spacesCount","replacementNode","createTextNode","cleanDocxTabCount","countString","cleanDocxSpans","DOCX_INDENT_STEP","extractNumber","str","number","parseFloat","styleToIndent","style","indentStep","indent","round","getDocxSpacing","cssProp","el","spacing","getDocxIndent","getDocxTextIndent","getTextListStyleType","text","trimStart","ListStyleType","DecimalLeadingZero","Decimal","LowerRoman","LowerAlpha","UpperRoman","UpperAlpha","isDocxContent","body","result","isMsoElement","some","className","cleanDocx","html","preCleanHtml","cleanHtmlEmptyElements","cleanHtmlTextNodes","cleanHtmlBrElements","cleanHtmlLinkElements","cleanHtmlFontElements","copyBlockMarksToSpanChild","postCleanHtml","KEY_DESERIALIZE_DOCX","getListNode","node","KEY_INDENT","KEY_LIST_STYLE_TYPE","Disc","textIndent","KEY_TEXT_INDENT","KEYS","ELEMENT_PARAGRAPH","ELEMENT_H1","ELEMENT_H2","ELEMENT_H3","ELEMENT_H4","ELEMENT_H5","ELEMENT_H6","overrideByKey","key","then","editor","deserializeHtml","getNode","createDeserializeDocxPlugin","createPluginFactory","inject","pluginsByKey","KEY_DESERIALIZE_HTML","insertData","transformData","dataTransfer","getData","ELEMENT_IMAGE","query"],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/index.js b/dist/index.js
index 8986008a7deb52c2ac628843a313ec0e73e61472..6d8c65f06cdcfaec4f59679f8f99a92c5f4d37b9 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -6,7 +6,6 @@ var plateCommon = require('@udecode/plate-common');
 var plateHeading = require('@udecode/plate-heading');
 var plateIndent = require('@udecode/plate-indent');
 var plateIndentList = require('@udecode/plate-indent-list');
-var plateMedia = require('@udecode/plate-media');
 var plateParagraph = require('@udecode/plate-paragraph');
 
 /**
@@ -1162,7 +1161,7 @@ const createDeserializeDocxPlugin = plateCommon.createPluginFactory({
     }
   },
   overrideByKey: { ...overrideByKey,
-    [plateMedia.ELEMENT_IMAGE]: {
+    ["img"]: {
       editor: {
         insertData: {
           query: ({
diff --git a/dist/index.js.map b/dist/index.js.map
index 960d5e03905270b24285eab8d9355a3b8aeb07ac..1178a899e00692d9cc7d2f1d6ed67edd2ed54aac 100644
--- a/dist/index.js.map
+++ b/dist/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sources":["../src/docx-cleaner/utils/cleanDocxBrComments.ts","../src/docx-cleaner/utils/cleanDocxEmptyParagraphs.ts","../src/docx-cleaner/utils/isDocxFootnote.ts","../src/docx-cleaner/utils/cleanDocxFootnotes.ts","../../../../node_modules/validator/lib/util/assertString.js","../../../../node_modules/validator/lib/util/merge.js","../../../../node_modules/validator/lib/isFQDN.js","../../../../node_modules/validator/lib/isIP.js","../../../../node_modules/validator/lib/isURL.js","../src/docx-cleaner/utils/getRtfImageHex.ts","../src/docx-cleaner/utils/getRtfImageMimeType.ts","../src/docx-cleaner/utils/getRtfImageSpid.ts","../src/docx-cleaner/utils/getRtfImagesByType.ts","../src/docx-cleaner/utils/getRtfImagesMap.ts","../src/docx-cleaner/utils/getVShapes.ts","../src/docx-cleaner/utils/getVShapeSpid.ts","../src/docx-cleaner/utils/cleanDocxImageElements.ts","../src/docx-cleaner/utils/cleanDocxListElements.ts","../src/docx-cleaner/utils/getDocxListContentHtml.ts","../src/docx-cleaner/utils/getDocxListIndent.ts","../src/docx-cleaner/utils/isDocxBookmark.ts","../src/docx-cleaner/utils/isDocxList.ts","../src/docx-cleaner/utils/getDocxListNode.ts","../src/docx-cleaner/utils/isDocxOl.ts","../src/docx-cleaner/utils/docxListToList.ts","../src/docx-cleaner/utils/cleanDocxListElementsToList.ts","../src/docx-cleaner/utils/cleanDocxQuotes.ts","../src/docx-cleaner/utils/generateSpaces.ts","../src/docx-cleaner/utils/cleanDocxSpacerun.ts","../src/docx-cleaner/utils/cleanDocxTabCount.ts","../src/docx-cleaner/utils/cleanDocxSpans.ts","../src/docx-cleaner/utils/getDocxIndent.ts","../src/docx-cleaner/utils/getTextListStyleType.ts","../src/docx-cleaner/utils/isDocxContent.ts","../src/docx-cleaner/cleanDocx.ts","../src/deserializer/createDeserializeDocxPlugin.ts"],"sourcesContent":["import {\n  isHtmlComment,\n  removeHtmlNodesBetweenComments,\n  traverseHtmlElements,\n} from '@udecode/plate-common';\n\n/**\n * Remove HTML nodes between comments in the next sibling after BR.\n */\nexport const cleanDocxBrComments = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName !== 'BR') {\n      return true;\n    }\n\n    if (\n      element.nextSibling &&\n      isHtmlComment(element.nextSibling) &&\n      element.nextSibling.data === '[if !supportLineBreakNewLine]'\n    ) {\n      removeHtmlNodesBetweenComments(\n        element.nextSibling,\n        '[if !supportLineBreakNewLine]',\n        '[endif]'\n      );\n    }\n\n    return false;\n  });\n};\n","import { NO_BREAK_SPACE, traverseHtmlElements } from '@udecode/plate-common';\n\nconst isHtmlOpEmpty = (element: Element): boolean =>\n  element.nodeName === 'O:P' && element.textContent === NO_BREAK_SPACE;\n\nconst isHtmlElementEmpty = (element: Element): boolean =>\n  element.children.length === 1 &&\n  element.firstElementChild !== null &&\n  (isHtmlOpEmpty(element.firstElementChild) ||\n    isHtmlElementEmpty(element.firstElementChild));\n\n/**\n * Remove paragraph innerHTML if its child is 'O:P' with NO_BREAK_SPACE.\n */\nexport const cleanDocxEmptyParagraphs = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName === 'P' && isHtmlElementEmpty(element)) {\n      element.innerHTML = '';\n    }\n\n    return true;\n  });\n};\n","/**\n * Is element a docx footnote.\n */\nexport const isDocxFootnote = (element: Element): boolean => {\n  return (\n    element.tagName === 'SPAN' &&\n    element.classList.contains('MsoFootnoteReference')\n  );\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\nimport { isDocxFootnote } from './isDocxFootnote';\n\n/**\n * Gets \"4\" from \"[4]\", \"A\" from \"[A]\", etc.\n */\nconst extractFootnoteNumber = (footnote: Element): string => {\n  return (footnote.textContent || '').trim().replace(/[[\\]]/g, '');\n};\n\n/**\n * Replace docx footnotes with sup element.\n */\nexport const cleanDocxFootnotes = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (isDocxFootnote(element)) {\n      const footnoteReplacement = document.createElement('sup');\n      footnoteReplacement.textContent = extractFootnoteNumber(element);\n\n      if (element.parentElement) {\n        element.parentElement.replaceChild(footnoteReplacement, element);\n      }\n\n      return true;\n    }\n\n    return true;\n  });\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  /* Remove the optional wildcard before checking validity */\n\n\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces\n\n\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n\n  if (version === '4') {\n    if (!IPv4AddressRegExp.test(str)) {\n      return false;\n    }\n\n    var parts = str.split('.').sort(function (a, b) {\n      return a - b;\n    });\n    return parts[3] <= 255;\n  }\n\n  if (version === '6') {\n    return !!IPv6AddressRegExp.test(str);\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.substr(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.substr(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    if (split[0] === '') {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n\n    var _auth$split = auth.split(':'),\n        _auth$split2 = _slicedToArray(_auth$split, 2),\n        user = _auth$split2[0],\n        password = _auth$split2[1];\n\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","import { SPACE } from '@udecode/plate-common';\n\nexport const getRtfImageHex = (imageData: string): string | null => {\n  const [, bliptagData = ''] = imageData.split('bliptag');\n  const bracketSplit = bliptagData.split('}');\n\n  if (bracketSplit.length < 2) {\n    return null;\n  }\n\n  const [beforeBracket, afterBracket] = bracketSplit;\n\n  if (bracketSplit.length > 2 && beforeBracket.includes('blipuid')) {\n    return afterBracket.split(SPACE).join('');\n  }\n\n  const spaceSplit = beforeBracket.split(SPACE);\n\n  if (spaceSplit.length < 2) {\n    return null;\n  }\n\n  return spaceSplit.slice(1).join('');\n};\n","export const getRtfImageMimeType = (imageData: string): string | null => {\n  const [bliptagMeta] = imageData.split('bliptag');\n\n  if (bliptagMeta.includes('pngblip')) {\n    return 'image/png';\n  }\n\n  if (bliptagMeta.includes('jpegblip')) {\n    return 'image/jpeg';\n  }\n\n  return null;\n};\n","import { CARRIAGE_RETURN, LINE_FEED, SPACE } from '@udecode/plate-common';\n\nconst END_OF_ID_SEQUENCE_CHARACTERS = [\n  '\\\\',\n  '{',\n  CARRIAGE_RETURN,\n  LINE_FEED,\n  SPACE,\n];\n\nexport const getRtfImageSpid = (\n  imageData: string,\n  spidPrefix: string\n): string | null => {\n  const indexes = END_OF_ID_SEQUENCE_CHARACTERS.map((character) =>\n    imageData.indexOf(character)\n  );\n  const foundIndexes = indexes.filter((index) => index !== -1);\n  const idLength = Math.min(imageData.length, ...foundIndexes);\n  const id = imageData.substring(0, idLength);\n  return id ? `${spidPrefix}${id}` : null;\n};\n","import { RtfImage } from '../types';\nimport { getRtfImageHex } from './getRtfImageHex';\nimport { getRtfImageMimeType } from './getRtfImageMimeType';\nimport { getRtfImageSpid } from './getRtfImageSpid';\n\nexport const getRtfImagesByType = (\n  rtf: string,\n  spidPrefix: string,\n  type: string\n): RtfImage[] => {\n  const [, ...images] = rtf.split(type);\n\n  return images.reduce<RtfImage[]>((rtfImages, image) => {\n    const [, imageData = ''] = image.split('shplid');\n    const spid = getRtfImageSpid(imageData, spidPrefix);\n    const mimeType = getRtfImageMimeType(imageData);\n    const hex = getRtfImageHex(imageData);\n\n    if (spid && mimeType && hex) {\n      rtfImages.push({ hex, mimeType, spid });\n    }\n\n    return rtfImages;\n  }, []);\n};\n","import { RtfImagesMap } from '../types';\nimport { getRtfImagesByType } from './getRtfImagesByType';\n\nexport const getRtfImagesMap = (rtf: string): RtfImagesMap => {\n  const rtfImagesMap: RtfImagesMap = {};\n\n  const shppictRtfImages = getRtfImagesByType(rtf, 'i', '\\\\shppict');\n  for (const shppictRtfImage of shppictRtfImages) {\n    rtfImagesMap[shppictRtfImage.spid] = shppictRtfImage;\n  }\n\n  const shpRtfImages = getRtfImagesByType(rtf, 's', '\\\\shp');\n  for (const shpRtfImage of shpRtfImages) {\n    rtfImagesMap[shpRtfImage.spid] = shpRtfImage;\n  }\n\n  return rtfImagesMap;\n};\n","import { getHtmlComments } from '@udecode/plate-common';\n\nexport const getVShapes = (document: Document): Record<string, string> => {\n  const comments = getHtmlComments(document);\n\n  return comments.reduce<Record<string, string>>((vShapesMap, comment) => {\n    try {\n      const xmlDocument = new DOMParser().parseFromString(comment, 'text/html');\n      const vShapes = Array.from(xmlDocument.getElementsByTagName('V:SHAPE'));\n\n      vShapes.forEach((vShape) => {\n        const { id } = vShape;\n        const spid = vShape.getAttribute('o:spid');\n\n        if (typeof id === 'string' && typeof spid === 'string') {\n          vShapesMap[id] = spid;\n        }\n      });\n    } catch (error) {\n      // Cannot parse as XML, we're not interested in this comment\n    }\n\n    return vShapesMap;\n  }, {});\n};\n","import { getVShapes } from './getVShapes';\n\nconst normalizeSpid = (spid: string): string => {\n  const [, , id] = spid.split('_');\n  return id;\n};\n\nexport const getVShapeSpid = (\n  document: Document,\n  element: Element\n): string | null => {\n  if (element.tagName === 'IMG') {\n    const vShapeId = element.getAttribute('v:shapes');\n    const vShapes = getVShapes(document);\n\n    if (!vShapeId) {\n      return null;\n    }\n\n    const vShapeSpid = vShapes[vShapeId];\n\n    if (vShapeSpid) {\n      return normalizeSpid(vShapeSpid);\n    }\n\n    if (\n      element.parentElement &&\n      element.parentElement.parentElement &&\n      element.parentElement.parentElement.innerHTML.indexOf('msEquation') >= 0\n    ) {\n      return null;\n    }\n\n    return normalizeSpid(vShapeId);\n  }\n\n  if (!element.parentElement) {\n    return null;\n  }\n\n  const spid = element.parentElement.getAttribute('o:spid');\n\n  if (spid) {\n    return normalizeSpid(spid);\n  }\n\n  return spid;\n};\n","import { hexToBase64, traverseHtmlElements } from '@udecode/plate-common';\nimport isURL from 'validator/lib/isURL';\nimport { getRtfImagesMap } from './getRtfImagesMap';\nimport { getVShapeSpid } from './getVShapeSpid';\n\n/**\n * Clean docx image elements.\n */\nexport const cleanDocxImageElements = (\n  document: Document,\n  rtf: string,\n  rootNode: Node\n): void => {\n  if (!rtf) {\n    return;\n  }\n\n  traverseHtmlElements(rootNode, (element) => {\n    if (!['IMG', 'V:IMAGEDATA'].includes(element.tagName)) {\n      return true;\n    }\n\n    if (element.tagName === 'IMG') {\n      const src = element.getAttribute('src');\n\n      if (!src || !src.startsWith('file://')) {\n        return true;\n      }\n\n      const alt = element.getAttribute('alt');\n\n      if (typeof alt === 'string' && isURL(alt, { require_protocol: true })) {\n        element.setAttribute('src', alt);\n        return true;\n      }\n    }\n\n    const vShapeSpid = getVShapeSpid(document, element);\n\n    if (!vShapeSpid) {\n      return true;\n    }\n\n    const rtfImagesMap = getRtfImagesMap(rtf);\n    const rtfImage = rtfImagesMap[vShapeSpid];\n\n    if (!rtfImage) {\n      // We fould some kind of vshape (perhaps a drawing) that we don't know\n      // how to recover from RTF. So we just skip it.\n      element.remove();\n      return true;\n    }\n\n    const dataUri = `data:${rtfImage.mimeType};base64,${hexToBase64(\n      rtfImage.hex\n    )}`;\n\n    if (element.tagName === 'IMG') {\n      element.setAttribute('src', dataUri);\n    } else if (element.parentNode && element.parentNode.parentNode) {\n      const imageElement = document.createElement('img');\n      imageElement.setAttribute('src', dataUri);\n      element.parentNode.parentNode.replaceChild(\n        imageElement,\n        element.parentNode\n      );\n    }\n    return true;\n  });\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Clean elements style mso-list to mso-list:Ignore\n */\nexport const cleanDocxListElements = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute) {\n      element.setAttribute(\n        'style',\n        styleAttribute.replace(/mso-list:\\s*Ignore/gim, 'mso-list:Ignore')\n      );\n    }\n\n    return true;\n  });\n};\n","import {\n  removeHtmlNodesBetweenComments,\n  traverseHtmlElements,\n} from '@udecode/plate-common';\n\nexport const getDocxListContentHtml = (rootElement: Element): string => {\n  const clonedElement = rootElement.cloneNode(true) as Element;\n\n  removeHtmlNodesBetweenComments(\n    clonedElement,\n    '[if !supportLists]',\n    '[endif]'\n  );\n\n  traverseHtmlElements(clonedElement, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute === 'mso-list:Ignore') {\n      element.remove();\n    }\n\n    return true;\n  });\n\n  return clonedElement.innerHTML;\n};\n","export const getDocxListIndent = (element: Element): number => {\n  const styleAttribute = element.getAttribute('style') || '';\n  const matches = styleAttribute.match(/level(\\d+)/im);\n\n  if (matches && matches.length >= 1) {\n    const [, level] = matches;\n    return parseInt(level, 10);\n  }\n\n  return 1;\n};\n","export const isDocxBookmark = (element: Element): boolean => {\n  const styleAttribute = element.getAttribute('style');\n  return (\n    (styleAttribute || '').startsWith('mso-bookmark') && !element.textContent\n  );\n};\n","export const isDocxList = (element: Element): boolean => {\n  const styleAttribute = element.getAttribute('style');\n\n  if (!styleAttribute) {\n    return false;\n  }\n\n  const hasMsoListInStyle = /mso-list:\\s*l/gim.test(styleAttribute);\n\n  if (!hasMsoListInStyle) {\n    return false;\n  }\n\n  const hasMsoListIgnoreChild = Boolean(\n    element.querySelector('[style=\"mso-list:Ignore\"]')\n  );\n\n  if (hasMsoListIgnoreChild) {\n    return true;\n  }\n\n  return element.outerHTML.includes('<!--[if !supportLists]-->');\n};\n","export const getDocxListNode = (element: Element): Node | null => {\n  return (\n    element.querySelector('[style=\"mso-list:Ignore\"]') ||\n    element.querySelector('span[lang]')\n  );\n};\n","import { isOlSymbol } from '@udecode/plate-common';\nimport { getDocxListNode } from './getDocxListNode';\n\nexport const isDocxOl = (element: Element): boolean => {\n  const listNode = getDocxListNode(element);\n\n  if (!listNode) {\n    return false;\n  }\n\n  return isOlSymbol(listNode.textContent || '');\n};\n","import { parseHtmlElement } from '@udecode/plate-common';\nimport { getDocxListContentHtml } from './getDocxListContentHtml';\nimport { getDocxListIndent } from './getDocxListIndent';\nimport { isDocxBookmark } from './isDocxBookmark';\nimport { isDocxList } from './isDocxList';\nimport { isDocxOl } from './isDocxOl';\n\ninterface Result {\n  list: Element | null;\n  nextSibling: Element | null;\n}\n\nexport const docxListToList = (element: Element): Result => {\n  const listLevel = getDocxListIndent(element);\n  let listHtml = '';\n  let nextSibling: Element | null = element;\n\n  while (nextSibling) {\n    if (isDocxBookmark(nextSibling)) {\n      nextSibling = nextSibling.nextElementSibling;\n      continue;\n    }\n\n    if (!isDocxList(nextSibling)) {\n      break;\n    }\n\n    const nextListLevel = getDocxListIndent(nextSibling);\n\n    if (nextListLevel < listLevel) {\n      // Lower level found. Current list is done.\n      break;\n    }\n\n    if (nextListLevel > listLevel) {\n      const nestedList = docxListToList(nextSibling);\n\n      if (nestedList.list) {\n        listHtml += nestedList.list.outerHTML;\n      }\n\n      nextSibling = nestedList.nextSibling;\n      continue;\n    }\n\n    listHtml += `<li>${getDocxListContentHtml(nextSibling)}</li>`;\n    const currentElement = nextSibling;\n    nextSibling = currentElement.nextElementSibling;\n    currentElement.remove();\n  }\n\n  const listTagName = isDocxOl(element) ? 'ol' : 'ul';\n  const list = parseHtmlElement(`<${listTagName}>${listHtml}</${listTagName}>`);\n\n  return { list, nextSibling };\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\nimport { docxListToList } from './docxListToList';\nimport { isDocxList } from './isDocxList';\n\nexport const cleanDocxListElementsToList = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute) {\n      element.setAttribute(\n        'style',\n        styleAttribute.replace(/mso-list:\\s*Ignore/gim, 'mso-list:Ignore')\n      );\n    }\n\n    return true;\n  });\n\n  traverseHtmlElements(rootNode, (element) => {\n    if (!isDocxList(element)) {\n      return true;\n    }\n\n    const { parentElement, previousSibling } = element;\n\n    if (!parentElement) {\n      return true;\n    }\n\n    const { list } = docxListToList(element);\n\n    if (!list) {\n      return true;\n    }\n\n    const beforeElement = previousSibling\n      ? previousSibling.nextSibling\n      : parentElement.firstChild;\n\n    if (beforeElement) {\n      parentElement.insertBefore(list, beforeElement);\n    } else {\n      parentElement.appendChild(list);\n    }\n\n    return false;\n  });\n};\n","import { replaceTagName, traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Replace p.MsoQuote elements with blockquote.\n */\nexport const cleanDocxQuotes = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (\n      element.parentNode &&\n      element.tagName === 'P' &&\n      element.classList.contains('MsoQuote')\n    ) {\n      replaceTagName(element, 'blockquote');\n    }\n\n    return true;\n  });\n};\n","import { SPACE, TAB } from '@udecode/plate-common';\n\nexport const generateSpaces = (count: number): string =>\n  Array.from({ length: count }, () => SPACE).join('');\n\nexport const generateTabs = (count: number): string =>\n  Array.from({ length: count }, () => TAB).join('');\n","import { generateSpaces } from './generateSpaces';\n\n/**\n * Replace the element with spaces if its style includes 'mso-spacerun: yes'.\n */\nexport const cleanDocxSpacerun = (element: Element): void => {\n  const styleAttribute = element.getAttribute('style');\n\n  if (\n    !(\n      styleAttribute &&\n      ['mso-spacerun:yes', 'mso-spacerun: yes'].includes(styleAttribute)\n    )\n  ) {\n    return;\n  }\n\n  const spacesCount = (element.textContent || '').length;\n  const replacementNode = document.createTextNode(generateSpaces(spacesCount));\n\n  if (element.parentNode) {\n    element.parentNode.replaceChild(replacementNode, element);\n  }\n};\n","import { generateTabs } from './generateSpaces';\n\n/**\n * Replace element with tabs if its style starts with 'mso-tab-count'.\n */\nexport const cleanDocxTabCount = (element: Element): void => {\n  const styleAttribute = element.getAttribute('style') || '';\n\n  if (!styleAttribute.startsWith('mso-tab-count:')) {\n    return;\n  }\n\n  const [, countString] = styleAttribute.split(':');\n  const count = parseInt(countString, 10);\n  const replacementNode = document.createTextNode(generateTabs(count));\n\n  if (element.parentNode) {\n    element.parentNode.replaceChild(replacementNode, element);\n  }\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\nimport { cleanDocxSpacerun } from './cleanDocxSpacerun';\nimport { cleanDocxTabCount } from './cleanDocxTabCount';\n\n/**\n * Clean docx spaceruns and tab counts.\n */\nexport const cleanDocxSpans = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.nodeName !== 'SPAN') {\n      return true;\n    }\n\n    cleanDocxSpacerun(element);\n    cleanDocxTabCount(element);\n\n    return true;\n  });\n};\n","const DOCX_INDENT_STEP = 36;\n\n/**\n * Convert a string to floating number.\n * Negative values are ignored.\n * Values starting by \".\" are replaced by \"0.\"\n */\nconst extractNumber = (str: string) => {\n  if (str[0] === '-') return 0;\n\n  let number = str.replace(/[^\\d.,]+/, '');\n\n  if (number[0] === '.') {\n    number = `0${number}`;\n  }\n  return parseFloat(number);\n};\n\nconst styleToIndent = (style: string, indentStep = DOCX_INDENT_STEP) => {\n  const indent = extractNumber(style);\n  if (indent) {\n    if (style.includes('in')) {\n      return Math.round((indent * 72) / indentStep);\n    }\n    return Math.round(indent / indentStep);\n  }\n  return 0;\n};\n\nexport const getDocxSpacing = (element: Element, cssProp: string): number => {\n  const el = element as HTMLElement;\n  const spacing = el.style[cssProp];\n\n  if (!spacing) return 0;\n\n  return styleToIndent(spacing) || 0;\n};\n\nexport const getDocxIndent = (element: Element) =>\n  getDocxSpacing(element, 'marginLeft');\n\nexport const getDocxTextIndent = (element: Element) =>\n  getDocxSpacing(element, 'textIndent');\n","import { ListStyleType } from '@udecode/plate-indent-list';\n\nexport const getTextListStyleType = (\n  text: string\n): ListStyleType | undefined => {\n  text = text.trimStart();\n\n  if (text.match(/^\\d+[\\\\.]/)?.[0]) {\n    if (text[0] === '0') {\n      return ListStyleType.DecimalLeadingZero;\n    }\n\n    return ListStyleType.Decimal;\n  }\n\n  if (text.match(/^[ivmcldx]+\\./)?.[0]) {\n    return ListStyleType.LowerRoman;\n  }\n\n  if (text.match(/^[a-z]+\\./)?.[0]) {\n    return ListStyleType.LowerAlpha;\n  }\n\n  if (text.match(/^[IVMCLDX]+\\./)?.[0]) {\n    return ListStyleType.UpperRoman;\n  }\n\n  if (text.match(/^[A-Z]+\\./)?.[0]) {\n    return ListStyleType.UpperAlpha;\n  }\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Check if the element contains docx content.\n * True if one element has:\n * - style including 'mso-'\n * - className including 'Mso'\n */\nexport const isDocxContent = (body: HTMLElement): boolean => {\n  let result = false;\n\n  traverseHtmlElements(body, (element) => {\n    const styleAttribute = element.getAttribute('style') || '';\n    const classList = Array.from(element.classList);\n\n    const isMsoElement =\n      styleAttribute.includes('mso-') ||\n      classList.some((className) => className.startsWith('Mso'));\n\n    result = result || isMsoElement;\n\n    return !result;\n  });\n\n  return result;\n};\n","import {\n  cleanHtmlBrElements,\n  cleanHtmlEmptyElements,\n  cleanHtmlFontElements,\n  cleanHtmlLinkElements,\n  cleanHtmlTextNodes,\n  copyBlockMarksToSpanChild,\n  postCleanHtml,\n  preCleanHtml,\n} from '@udecode/plate-common';\nimport {\n  cleanDocxBrComments,\n  cleanDocxEmptyParagraphs,\n  cleanDocxFootnotes,\n  cleanDocxImageElements,\n  cleanDocxListElements,\n  cleanDocxQuotes,\n  cleanDocxSpans,\n  isDocxContent,\n} from './utils';\n\nexport const cleanDocx = (html: string, rtf: string): string => {\n  const document = new DOMParser().parseFromString(\n    preCleanHtml(html),\n    'text/html'\n  );\n  const { body } = document;\n\n  if (!rtf && !isDocxContent(body)) {\n    return html;\n  }\n\n  cleanDocxFootnotes(body);\n  cleanDocxImageElements(document, rtf, body);\n  cleanHtmlEmptyElements(body);\n  cleanDocxEmptyParagraphs(body);\n  cleanDocxQuotes(body);\n  cleanDocxSpans(body);\n  cleanHtmlTextNodes(body);\n  cleanDocxBrComments(body);\n  cleanHtmlBrElements(body);\n  cleanHtmlLinkElements(body);\n  cleanHtmlFontElements(body);\n  cleanDocxListElements(body);\n  copyBlockMarksToSpanChild(body);\n\n  return postCleanHtml(body.innerHTML);\n};\n","import {\n  createPluginFactory,\n  DeserializeHtml,\n  KEY_DESERIALIZE_HTML,\n  PlatePlugin,\n} from '@udecode/plate-common';\nimport {\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n} from '@udecode/plate-heading';\nimport { KEY_INDENT, KEY_TEXT_INDENT } from '@udecode/plate-indent';\nimport { KEY_LIST_STYLE_TYPE, ListStyleType } from '@udecode/plate-indent-list';\nimport { ELEMENT_IMAGE } from '@udecode/plate-media';\nimport { ELEMENT_PARAGRAPH } from '@udecode/plate-paragraph';\nimport { cleanDocx } from '../docx-cleaner/cleanDocx';\nimport {\n  getDocxIndent,\n  getDocxTextIndent,\n} from '../docx-cleaner/utils/getDocxIndent';\nimport { getDocxListContentHtml } from '../docx-cleaner/utils/getDocxListContentHtml';\nimport { getDocxListIndent } from '../docx-cleaner/utils/getDocxListIndent';\nimport { getTextListStyleType } from '../docx-cleaner/utils/getTextListStyleType';\nimport { isDocxContent } from '../docx-cleaner/utils/isDocxContent';\nimport { isDocxList } from '../docx-cleaner/utils/isDocxList';\n\nexport const KEY_DESERIALIZE_DOCX = 'deserializeDocx';\n\nconst getListNode = (type: string): DeserializeHtml['getNode'] => (element) => {\n  const node: any = { type };\n\n  if (isDocxList(element)) {\n    node[KEY_INDENT] = getDocxListIndent(element);\n\n    const text = element.textContent ?? '';\n\n    node[KEY_LIST_STYLE_TYPE] =\n      getTextListStyleType(text) ?? ListStyleType.Disc;\n\n    element.innerHTML = getDocxListContentHtml(element);\n  } else {\n    const indent = getDocxIndent(element);\n    if (indent) {\n      node[KEY_INDENT] = indent;\n    }\n\n    const textIndent = getDocxTextIndent(element);\n    if (textIndent) {\n      node[KEY_TEXT_INDENT] = textIndent;\n    }\n  }\n\n  return node;\n};\n\nconst KEYS = [\n  ELEMENT_PARAGRAPH,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n];\n\nconst overrideByKey: Record<string, Partial<PlatePlugin>> = {};\n\nKEYS.forEach((key) => {\n  overrideByKey[key] = {\n    then: (editor, { type }) => ({\n      deserializeHtml: {\n        getNode: getListNode(type),\n      },\n    }),\n  };\n});\n\nexport const createDeserializeDocxPlugin = createPluginFactory({\n  key: KEY_DESERIALIZE_DOCX,\n  inject: {\n    pluginsByKey: {\n      [KEY_DESERIALIZE_HTML]: {\n        editor: {\n          insertData: {\n            transformData: (data, { dataTransfer }) => {\n              const rtf = dataTransfer.getData('text/rtf');\n\n              return cleanDocx(data, rtf);\n            },\n          },\n        },\n      },\n    },\n  },\n  overrideByKey: {\n    ...overrideByKey,\n    [ELEMENT_IMAGE]: {\n      editor: {\n        insertData: {\n          query: ({ dataTransfer }) => {\n            const data = dataTransfer.getData('text/html');\n            const { body } = new DOMParser().parseFromString(data, 'text/html');\n\n            return !isDocxContent(body);\n          },\n        },\n      },\n    },\n  },\n});\n"],"names":["cleanDocxBrComments","rootNode","traverseHtmlElements","element","tagName","nextSibling","isHtmlComment","data","removeHtmlNodesBetweenComments","isHtmlOpEmpty","nodeName","textContent","NO_BREAK_SPACE","isHtmlElementEmpty","children","length","firstElementChild","cleanDocxEmptyParagraphs","innerHTML","isDocxFootnote","classList","contains","extractFootnoteNumber","footnote","trim","replace","cleanDocxFootnotes","footnoteReplacement","document","createElement","parentElement","replaceChild","require$$0","require$$1","require$$2","require$$3","getRtfImageHex","imageData","bliptagData","split","bracketSplit","beforeBracket","afterBracket","includes","SPACE","join","spaceSplit","slice","getRtfImageMimeType","bliptagMeta","END_OF_ID_SEQUENCE_CHARACTERS","CARRIAGE_RETURN","LINE_FEED","getRtfImageSpid","spidPrefix","indexes","map","character","indexOf","foundIndexes","filter","index","idLength","Math","min","id","substring","getRtfImagesByType","rtf","type","images","reduce","rtfImages","image","spid","mimeType","hex","push","getRtfImagesMap","rtfImagesMap","shppictRtfImages","shppictRtfImage","shpRtfImages","shpRtfImage","getVShapes","comments","getHtmlComments","vShapesMap","comment","xmlDocument","DOMParser","parseFromString","vShapes","Array","from","getElementsByTagName","forEach","vShape","getAttribute","error","normalizeSpid","getVShapeSpid","vShapeId","vShapeSpid","cleanDocxImageElements","src","startsWith","alt","isURL","require_protocol","setAttribute","rtfImage","remove","dataUri","hexToBase64","parentNode","imageElement","cleanDocxListElements","styleAttribute","getDocxListContentHtml","rootElement","clonedElement","cloneNode","getDocxListIndent","matches","match","level","parseInt","isDocxBookmark","isDocxList","hasMsoListInStyle","test","hasMsoListIgnoreChild","Boolean","querySelector","outerHTML","getDocxListNode","isDocxOl","listNode","isOlSymbol","docxListToList","listLevel","listHtml","nextElementSibling","nextListLevel","nestedList","list","currentElement","listTagName","parseHtmlElement","cleanDocxListElementsToList","previousSibling","beforeElement","firstChild","insertBefore","appendChild","cleanDocxQuotes","replaceTagName","generateSpaces","count","generateTabs","TAB","cleanDocxSpacerun","spacesCount","replacementNode","createTextNode","cleanDocxTabCount","countString","cleanDocxSpans","DOCX_INDENT_STEP","extractNumber","str","number","parseFloat","styleToIndent","style","indentStep","indent","round","getDocxSpacing","cssProp","el","spacing","getDocxIndent","getDocxTextIndent","getTextListStyleType","text","trimStart","ListStyleType","DecimalLeadingZero","Decimal","LowerRoman","LowerAlpha","UpperRoman","UpperAlpha","isDocxContent","body","result","isMsoElement","some","className","cleanDocx","html","preCleanHtml","cleanHtmlEmptyElements","cleanHtmlTextNodes","cleanHtmlBrElements","cleanHtmlLinkElements","cleanHtmlFontElements","copyBlockMarksToSpanChild","postCleanHtml","KEY_DESERIALIZE_DOCX","getListNode","node","KEY_INDENT","KEY_LIST_STYLE_TYPE","Disc","textIndent","KEY_TEXT_INDENT","KEYS","ELEMENT_PARAGRAPH","ELEMENT_H1","ELEMENT_H2","ELEMENT_H3","ELEMENT_H4","ELEMENT_H5","ELEMENT_H6","overrideByKey","key","then","editor","deserializeHtml","getNode","createDeserializeDocxPlugin","createPluginFactory","inject","pluginsByKey","KEY_DESERIALIZE_HTML","insertData","transformData","dataTransfer","getData","ELEMENT_IMAGE","query"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sources":["../src/docx-cleaner/utils/cleanDocxBrComments.ts","../src/docx-cleaner/utils/cleanDocxEmptyParagraphs.ts","../src/docx-cleaner/utils/isDocxFootnote.ts","../src/docx-cleaner/utils/cleanDocxFootnotes.ts","../../../../node_modules/validator/lib/util/assertString.js","../../../../node_modules/validator/lib/util/merge.js","../../../../node_modules/validator/lib/isFQDN.js","../../../../node_modules/validator/lib/isIP.js","../../../../node_modules/validator/lib/isURL.js","../src/docx-cleaner/utils/getRtfImageHex.ts","../src/docx-cleaner/utils/getRtfImageMimeType.ts","../src/docx-cleaner/utils/getRtfImageSpid.ts","../src/docx-cleaner/utils/getRtfImagesByType.ts","../src/docx-cleaner/utils/getRtfImagesMap.ts","../src/docx-cleaner/utils/getVShapes.ts","../src/docx-cleaner/utils/getVShapeSpid.ts","../src/docx-cleaner/utils/cleanDocxImageElements.ts","../src/docx-cleaner/utils/cleanDocxListElements.ts","../src/docx-cleaner/utils/getDocxListContentHtml.ts","../src/docx-cleaner/utils/getDocxListIndent.ts","../src/docx-cleaner/utils/isDocxBookmark.ts","../src/docx-cleaner/utils/isDocxList.ts","../src/docx-cleaner/utils/getDocxListNode.ts","../src/docx-cleaner/utils/isDocxOl.ts","../src/docx-cleaner/utils/docxListToList.ts","../src/docx-cleaner/utils/cleanDocxListElementsToList.ts","../src/docx-cleaner/utils/cleanDocxQuotes.ts","../src/docx-cleaner/utils/generateSpaces.ts","../src/docx-cleaner/utils/cleanDocxSpacerun.ts","../src/docx-cleaner/utils/cleanDocxTabCount.ts","../src/docx-cleaner/utils/cleanDocxSpans.ts","../src/docx-cleaner/utils/getDocxIndent.ts","../src/docx-cleaner/utils/getTextListStyleType.ts","../src/docx-cleaner/utils/isDocxContent.ts","../src/docx-cleaner/cleanDocx.ts","../src/deserializer/createDeserializeDocxPlugin.ts"],"sourcesContent":["import {\n  isHtmlComment,\n  removeHtmlNodesBetweenComments,\n  traverseHtmlElements,\n} from '@udecode/plate-common';\n\n/**\n * Remove HTML nodes between comments in the next sibling after BR.\n */\nexport const cleanDocxBrComments = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName !== 'BR') {\n      return true;\n    }\n\n    if (\n      element.nextSibling &&\n      isHtmlComment(element.nextSibling) &&\n      element.nextSibling.data === '[if !supportLineBreakNewLine]'\n    ) {\n      removeHtmlNodesBetweenComments(\n        element.nextSibling,\n        '[if !supportLineBreakNewLine]',\n        '[endif]'\n      );\n    }\n\n    return false;\n  });\n};\n","import { NO_BREAK_SPACE, traverseHtmlElements } from '@udecode/plate-common';\n\nconst isHtmlOpEmpty = (element: Element): boolean =>\n  element.nodeName === 'O:P' && element.textContent === NO_BREAK_SPACE;\n\nconst isHtmlElementEmpty = (element: Element): boolean =>\n  element.children.length === 1 &&\n  element.firstElementChild !== null &&\n  (isHtmlOpEmpty(element.firstElementChild) ||\n    isHtmlElementEmpty(element.firstElementChild));\n\n/**\n * Remove paragraph innerHTML if its child is 'O:P' with NO_BREAK_SPACE.\n */\nexport const cleanDocxEmptyParagraphs = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName === 'P' && isHtmlElementEmpty(element)) {\n      element.innerHTML = '';\n    }\n\n    return true;\n  });\n};\n","/**\n * Is element a docx footnote.\n */\nexport const isDocxFootnote = (element: Element): boolean => {\n  return (\n    element.tagName === 'SPAN' &&\n    element.classList.contains('MsoFootnoteReference')\n  );\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\nimport { isDocxFootnote } from './isDocxFootnote';\n\n/**\n * Gets \"4\" from \"[4]\", \"A\" from \"[A]\", etc.\n */\nconst extractFootnoteNumber = (footnote: Element): string => {\n  return (footnote.textContent || '').trim().replace(/[[\\]]/g, '');\n};\n\n/**\n * Replace docx footnotes with sup element.\n */\nexport const cleanDocxFootnotes = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (isDocxFootnote(element)) {\n      const footnoteReplacement = document.createElement('sup');\n      footnoteReplacement.textContent = extractFootnoteNumber(element);\n\n      if (element.parentElement) {\n        element.parentElement.replaceChild(footnoteReplacement, element);\n      }\n\n      return true;\n    }\n\n    return true;\n  });\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  /* Remove the optional wildcard before checking validity */\n\n\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces\n\n\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n\n  if (version === '4') {\n    if (!IPv4AddressRegExp.test(str)) {\n      return false;\n    }\n\n    var parts = str.split('.').sort(function (a, b) {\n      return a - b;\n    });\n    return parts[3] <= 255;\n  }\n\n  if (version === '6') {\n    return !!IPv6AddressRegExp.test(str);\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.substr(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.substr(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    if (split[0] === '') {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n\n    var _auth$split = auth.split(':'),\n        _auth$split2 = _slicedToArray(_auth$split, 2),\n        user = _auth$split2[0],\n        password = _auth$split2[1];\n\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","import { SPACE } from '@udecode/plate-common';\n\nexport const getRtfImageHex = (imageData: string): string | null => {\n  const [, bliptagData = ''] = imageData.split('bliptag');\n  const bracketSplit = bliptagData.split('}');\n\n  if (bracketSplit.length < 2) {\n    return null;\n  }\n\n  const [beforeBracket, afterBracket] = bracketSplit;\n\n  if (bracketSplit.length > 2 && beforeBracket.includes('blipuid')) {\n    return afterBracket.split(SPACE).join('');\n  }\n\n  const spaceSplit = beforeBracket.split(SPACE);\n\n  if (spaceSplit.length < 2) {\n    return null;\n  }\n\n  return spaceSplit.slice(1).join('');\n};\n","export const getRtfImageMimeType = (imageData: string): string | null => {\n  const [bliptagMeta] = imageData.split('bliptag');\n\n  if (bliptagMeta.includes('pngblip')) {\n    return 'image/png';\n  }\n\n  if (bliptagMeta.includes('jpegblip')) {\n    return 'image/jpeg';\n  }\n\n  return null;\n};\n","import { CARRIAGE_RETURN, LINE_FEED, SPACE } from '@udecode/plate-common';\n\nconst END_OF_ID_SEQUENCE_CHARACTERS = [\n  '\\\\',\n  '{',\n  CARRIAGE_RETURN,\n  LINE_FEED,\n  SPACE,\n];\n\nexport const getRtfImageSpid = (\n  imageData: string,\n  spidPrefix: string\n): string | null => {\n  const indexes = END_OF_ID_SEQUENCE_CHARACTERS.map((character) =>\n    imageData.indexOf(character)\n  );\n  const foundIndexes = indexes.filter((index) => index !== -1);\n  const idLength = Math.min(imageData.length, ...foundIndexes);\n  const id = imageData.substring(0, idLength);\n  return id ? `${spidPrefix}${id}` : null;\n};\n","import { RtfImage } from '../types';\nimport { getRtfImageHex } from './getRtfImageHex';\nimport { getRtfImageMimeType } from './getRtfImageMimeType';\nimport { getRtfImageSpid } from './getRtfImageSpid';\n\nexport const getRtfImagesByType = (\n  rtf: string,\n  spidPrefix: string,\n  type: string\n): RtfImage[] => {\n  const [, ...images] = rtf.split(type);\n\n  return images.reduce<RtfImage[]>((rtfImages, image) => {\n    const [, imageData = ''] = image.split('shplid');\n    const spid = getRtfImageSpid(imageData, spidPrefix);\n    const mimeType = getRtfImageMimeType(imageData);\n    const hex = getRtfImageHex(imageData);\n\n    if (spid && mimeType && hex) {\n      rtfImages.push({ hex, mimeType, spid });\n    }\n\n    return rtfImages;\n  }, []);\n};\n","import { RtfImagesMap } from '../types';\nimport { getRtfImagesByType } from './getRtfImagesByType';\n\nexport const getRtfImagesMap = (rtf: string): RtfImagesMap => {\n  const rtfImagesMap: RtfImagesMap = {};\n\n  const shppictRtfImages = getRtfImagesByType(rtf, 'i', '\\\\shppict');\n  for (const shppictRtfImage of shppictRtfImages) {\n    rtfImagesMap[shppictRtfImage.spid] = shppictRtfImage;\n  }\n\n  const shpRtfImages = getRtfImagesByType(rtf, 's', '\\\\shp');\n  for (const shpRtfImage of shpRtfImages) {\n    rtfImagesMap[shpRtfImage.spid] = shpRtfImage;\n  }\n\n  return rtfImagesMap;\n};\n","import { getHtmlComments } from '@udecode/plate-common';\n\nexport const getVShapes = (document: Document): Record<string, string> => {\n  const comments = getHtmlComments(document);\n\n  return comments.reduce<Record<string, string>>((vShapesMap, comment) => {\n    try {\n      const xmlDocument = new DOMParser().parseFromString(comment, 'text/html');\n      const vShapes = Array.from(xmlDocument.getElementsByTagName('V:SHAPE'));\n\n      vShapes.forEach((vShape) => {\n        const { id } = vShape;\n        const spid = vShape.getAttribute('o:spid');\n\n        if (typeof id === 'string' && typeof spid === 'string') {\n          vShapesMap[id] = spid;\n        }\n      });\n    } catch (error) {\n      // Cannot parse as XML, we're not interested in this comment\n    }\n\n    return vShapesMap;\n  }, {});\n};\n","import { getVShapes } from './getVShapes';\n\nconst normalizeSpid = (spid: string): string => {\n  const [, , id] = spid.split('_');\n  return id;\n};\n\nexport const getVShapeSpid = (\n  document: Document,\n  element: Element\n): string | null => {\n  if (element.tagName === 'IMG') {\n    const vShapeId = element.getAttribute('v:shapes');\n    const vShapes = getVShapes(document);\n\n    if (!vShapeId) {\n      return null;\n    }\n\n    const vShapeSpid = vShapes[vShapeId];\n\n    if (vShapeSpid) {\n      return normalizeSpid(vShapeSpid);\n    }\n\n    if (\n      element.parentElement &&\n      element.parentElement.parentElement &&\n      element.parentElement.parentElement.innerHTML.indexOf('msEquation') >= 0\n    ) {\n      return null;\n    }\n\n    return normalizeSpid(vShapeId);\n  }\n\n  if (!element.parentElement) {\n    return null;\n  }\n\n  const spid = element.parentElement.getAttribute('o:spid');\n\n  if (spid) {\n    return normalizeSpid(spid);\n  }\n\n  return spid;\n};\n","import { hexToBase64, traverseHtmlElements } from '@udecode/plate-common';\nimport isURL from 'validator/lib/isURL';\nimport { getRtfImagesMap } from './getRtfImagesMap';\nimport { getVShapeSpid } from './getVShapeSpid';\n\n/**\n * Clean docx image elements.\n */\nexport const cleanDocxImageElements = (\n  document: Document,\n  rtf: string,\n  rootNode: Node\n): void => {\n  if (!rtf) {\n    return;\n  }\n\n  traverseHtmlElements(rootNode, (element) => {\n    if (!['IMG', 'V:IMAGEDATA'].includes(element.tagName)) {\n      return true;\n    }\n\n    if (element.tagName === 'IMG') {\n      const src = element.getAttribute('src');\n\n      if (!src || !src.startsWith('file://')) {\n        return true;\n      }\n\n      const alt = element.getAttribute('alt');\n\n      if (typeof alt === 'string' && isURL(alt, { require_protocol: true })) {\n        element.setAttribute('src', alt);\n        return true;\n      }\n    }\n\n    const vShapeSpid = getVShapeSpid(document, element);\n\n    if (!vShapeSpid) {\n      return true;\n    }\n\n    const rtfImagesMap = getRtfImagesMap(rtf);\n    const rtfImage = rtfImagesMap[vShapeSpid];\n\n    if (!rtfImage) {\n      // We fould some kind of vshape (perhaps a drawing) that we don't know\n      // how to recover from RTF. So we just skip it.\n      element.remove();\n      return true;\n    }\n\n    const dataUri = `data:${rtfImage.mimeType};base64,${hexToBase64(\n      rtfImage.hex\n    )}`;\n\n    if (element.tagName === 'IMG') {\n      element.setAttribute('src', dataUri);\n    } else if (element.parentNode && element.parentNode.parentNode) {\n      const imageElement = document.createElement('img');\n      imageElement.setAttribute('src', dataUri);\n      element.parentNode.parentNode.replaceChild(\n        imageElement,\n        element.parentNode\n      );\n    }\n    return true;\n  });\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Clean elements style mso-list to mso-list:Ignore\n */\nexport const cleanDocxListElements = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute) {\n      element.setAttribute(\n        'style',\n        styleAttribute.replace(/mso-list:\\s*Ignore/gim, 'mso-list:Ignore')\n      );\n    }\n\n    return true;\n  });\n};\n","import {\n  removeHtmlNodesBetweenComments,\n  traverseHtmlElements,\n} from '@udecode/plate-common';\n\nexport const getDocxListContentHtml = (rootElement: Element): string => {\n  const clonedElement = rootElement.cloneNode(true) as Element;\n\n  removeHtmlNodesBetweenComments(\n    clonedElement,\n    '[if !supportLists]',\n    '[endif]'\n  );\n\n  traverseHtmlElements(clonedElement, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute === 'mso-list:Ignore') {\n      element.remove();\n    }\n\n    return true;\n  });\n\n  return clonedElement.innerHTML;\n};\n","export const getDocxListIndent = (element: Element): number => {\n  const styleAttribute = element.getAttribute('style') || '';\n  const matches = styleAttribute.match(/level(\\d+)/im);\n\n  if (matches && matches.length >= 1) {\n    const [, level] = matches;\n    return parseInt(level, 10);\n  }\n\n  return 1;\n};\n","export const isDocxBookmark = (element: Element): boolean => {\n  const styleAttribute = element.getAttribute('style');\n  return (\n    (styleAttribute || '').startsWith('mso-bookmark') && !element.textContent\n  );\n};\n","export const isDocxList = (element: Element): boolean => {\n  const styleAttribute = element.getAttribute('style');\n\n  if (!styleAttribute) {\n    return false;\n  }\n\n  const hasMsoListInStyle = /mso-list:\\s*l/gim.test(styleAttribute);\n\n  if (!hasMsoListInStyle) {\n    return false;\n  }\n\n  const hasMsoListIgnoreChild = Boolean(\n    element.querySelector('[style=\"mso-list:Ignore\"]')\n  );\n\n  if (hasMsoListIgnoreChild) {\n    return true;\n  }\n\n  return element.outerHTML.includes('<!--[if !supportLists]-->');\n};\n","export const getDocxListNode = (element: Element): Node | null => {\n  return (\n    element.querySelector('[style=\"mso-list:Ignore\"]') ||\n    element.querySelector('span[lang]')\n  );\n};\n","import { isOlSymbol } from '@udecode/plate-common';\nimport { getDocxListNode } from './getDocxListNode';\n\nexport const isDocxOl = (element: Element): boolean => {\n  const listNode = getDocxListNode(element);\n\n  if (!listNode) {\n    return false;\n  }\n\n  return isOlSymbol(listNode.textContent || '');\n};\n","import { parseHtmlElement } from '@udecode/plate-common';\nimport { getDocxListContentHtml } from './getDocxListContentHtml';\nimport { getDocxListIndent } from './getDocxListIndent';\nimport { isDocxBookmark } from './isDocxBookmark';\nimport { isDocxList } from './isDocxList';\nimport { isDocxOl } from './isDocxOl';\n\ninterface Result {\n  list: Element | null;\n  nextSibling: Element | null;\n}\n\nexport const docxListToList = (element: Element): Result => {\n  const listLevel = getDocxListIndent(element);\n  let listHtml = '';\n  let nextSibling: Element | null = element;\n\n  while (nextSibling) {\n    if (isDocxBookmark(nextSibling)) {\n      nextSibling = nextSibling.nextElementSibling;\n      continue;\n    }\n\n    if (!isDocxList(nextSibling)) {\n      break;\n    }\n\n    const nextListLevel = getDocxListIndent(nextSibling);\n\n    if (nextListLevel < listLevel) {\n      // Lower level found. Current list is done.\n      break;\n    }\n\n    if (nextListLevel > listLevel) {\n      const nestedList = docxListToList(nextSibling);\n\n      if (nestedList.list) {\n        listHtml += nestedList.list.outerHTML;\n      }\n\n      nextSibling = nestedList.nextSibling;\n      continue;\n    }\n\n    listHtml += `<li>${getDocxListContentHtml(nextSibling)}</li>`;\n    const currentElement = nextSibling;\n    nextSibling = currentElement.nextElementSibling;\n    currentElement.remove();\n  }\n\n  const listTagName = isDocxOl(element) ? 'ol' : 'ul';\n  const list = parseHtmlElement(`<${listTagName}>${listHtml}</${listTagName}>`);\n\n  return { list, nextSibling };\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\nimport { docxListToList } from './docxListToList';\nimport { isDocxList } from './isDocxList';\n\nexport const cleanDocxListElementsToList = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute) {\n      element.setAttribute(\n        'style',\n        styleAttribute.replace(/mso-list:\\s*Ignore/gim, 'mso-list:Ignore')\n      );\n    }\n\n    return true;\n  });\n\n  traverseHtmlElements(rootNode, (element) => {\n    if (!isDocxList(element)) {\n      return true;\n    }\n\n    const { parentElement, previousSibling } = element;\n\n    if (!parentElement) {\n      return true;\n    }\n\n    const { list } = docxListToList(element);\n\n    if (!list) {\n      return true;\n    }\n\n    const beforeElement = previousSibling\n      ? previousSibling.nextSibling\n      : parentElement.firstChild;\n\n    if (beforeElement) {\n      parentElement.insertBefore(list, beforeElement);\n    } else {\n      parentElement.appendChild(list);\n    }\n\n    return false;\n  });\n};\n","import { replaceTagName, traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Replace p.MsoQuote elements with blockquote.\n */\nexport const cleanDocxQuotes = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (\n      element.parentNode &&\n      element.tagName === 'P' &&\n      element.classList.contains('MsoQuote')\n    ) {\n      replaceTagName(element, 'blockquote');\n    }\n\n    return true;\n  });\n};\n","import { SPACE, TAB } from '@udecode/plate-common';\n\nexport const generateSpaces = (count: number): string =>\n  Array.from({ length: count }, () => SPACE).join('');\n\nexport const generateTabs = (count: number): string =>\n  Array.from({ length: count }, () => TAB).join('');\n","import { generateSpaces } from './generateSpaces';\n\n/**\n * Replace the element with spaces if its style includes 'mso-spacerun: yes'.\n */\nexport const cleanDocxSpacerun = (element: Element): void => {\n  const styleAttribute = element.getAttribute('style');\n\n  if (\n    !(\n      styleAttribute &&\n      ['mso-spacerun:yes', 'mso-spacerun: yes'].includes(styleAttribute)\n    )\n  ) {\n    return;\n  }\n\n  const spacesCount = (element.textContent || '').length;\n  const replacementNode = document.createTextNode(generateSpaces(spacesCount));\n\n  if (element.parentNode) {\n    element.parentNode.replaceChild(replacementNode, element);\n  }\n};\n","import { generateTabs } from './generateSpaces';\n\n/**\n * Replace element with tabs if its style starts with 'mso-tab-count'.\n */\nexport const cleanDocxTabCount = (element: Element): void => {\n  const styleAttribute = element.getAttribute('style') || '';\n\n  if (!styleAttribute.startsWith('mso-tab-count:')) {\n    return;\n  }\n\n  const [, countString] = styleAttribute.split(':');\n  const count = parseInt(countString, 10);\n  const replacementNode = document.createTextNode(generateTabs(count));\n\n  if (element.parentNode) {\n    element.parentNode.replaceChild(replacementNode, element);\n  }\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\nimport { cleanDocxSpacerun } from './cleanDocxSpacerun';\nimport { cleanDocxTabCount } from './cleanDocxTabCount';\n\n/**\n * Clean docx spaceruns and tab counts.\n */\nexport const cleanDocxSpans = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.nodeName !== 'SPAN') {\n      return true;\n    }\n\n    cleanDocxSpacerun(element);\n    cleanDocxTabCount(element);\n\n    return true;\n  });\n};\n","const DOCX_INDENT_STEP = 36;\n\n/**\n * Convert a string to floating number.\n * Negative values are ignored.\n * Values starting by \".\" are replaced by \"0.\"\n */\nconst extractNumber = (str: string) => {\n  if (str[0] === '-') return 0;\n\n  let number = str.replace(/[^\\d.,]+/, '');\n\n  if (number[0] === '.') {\n    number = `0${number}`;\n  }\n  return parseFloat(number);\n};\n\nconst styleToIndent = (style: string, indentStep = DOCX_INDENT_STEP) => {\n  const indent = extractNumber(style);\n  if (indent) {\n    if (style.includes('in')) {\n      return Math.round((indent * 72) / indentStep);\n    }\n    return Math.round(indent / indentStep);\n  }\n  return 0;\n};\n\nexport const getDocxSpacing = (element: Element, cssProp: string): number => {\n  const el = element as HTMLElement;\n  const spacing = el.style[cssProp];\n\n  if (!spacing) return 0;\n\n  return styleToIndent(spacing) || 0;\n};\n\nexport const getDocxIndent = (element: Element) =>\n  getDocxSpacing(element, 'marginLeft');\n\nexport const getDocxTextIndent = (element: Element) =>\n  getDocxSpacing(element, 'textIndent');\n","import { ListStyleType } from '@udecode/plate-indent-list';\n\nexport const getTextListStyleType = (\n  text: string\n): ListStyleType | undefined => {\n  text = text.trimStart();\n\n  if (text.match(/^\\d+[\\\\.]/)?.[0]) {\n    if (text[0] === '0') {\n      return ListStyleType.DecimalLeadingZero;\n    }\n\n    return ListStyleType.Decimal;\n  }\n\n  if (text.match(/^[ivmcldx]+\\./)?.[0]) {\n    return ListStyleType.LowerRoman;\n  }\n\n  if (text.match(/^[a-z]+\\./)?.[0]) {\n    return ListStyleType.LowerAlpha;\n  }\n\n  if (text.match(/^[IVMCLDX]+\\./)?.[0]) {\n    return ListStyleType.UpperRoman;\n  }\n\n  if (text.match(/^[A-Z]+\\./)?.[0]) {\n    return ListStyleType.UpperAlpha;\n  }\n};\n","import { traverseHtmlElements } from '@udecode/plate-common';\n\n/**\n * Check if the element contains docx content.\n * True if one element has:\n * - style including 'mso-'\n * - className including 'Mso'\n */\nexport const isDocxContent = (body: HTMLElement): boolean => {\n  let result = false;\n\n  traverseHtmlElements(body, (element) => {\n    const styleAttribute = element.getAttribute('style') || '';\n    const classList = Array.from(element.classList);\n\n    const isMsoElement =\n      styleAttribute.includes('mso-') ||\n      classList.some((className) => className.startsWith('Mso'));\n\n    result = result || isMsoElement;\n\n    return !result;\n  });\n\n  return result;\n};\n","import {\n  cleanHtmlBrElements,\n  cleanHtmlEmptyElements,\n  cleanHtmlFontElements,\n  cleanHtmlLinkElements,\n  cleanHtmlTextNodes,\n  copyBlockMarksToSpanChild,\n  postCleanHtml,\n  preCleanHtml,\n} from '@udecode/plate-common';\nimport {\n  cleanDocxBrComments,\n  cleanDocxEmptyParagraphs,\n  cleanDocxFootnotes,\n  cleanDocxImageElements,\n  cleanDocxListElements,\n  cleanDocxQuotes,\n  cleanDocxSpans,\n  isDocxContent,\n} from './utils';\n\nexport const cleanDocx = (html: string, rtf: string): string => {\n  const document = new DOMParser().parseFromString(\n    preCleanHtml(html),\n    'text/html'\n  );\n  const { body } = document;\n\n  if (!rtf && !isDocxContent(body)) {\n    return html;\n  }\n\n  cleanDocxFootnotes(body);\n  cleanDocxImageElements(document, rtf, body);\n  cleanHtmlEmptyElements(body);\n  cleanDocxEmptyParagraphs(body);\n  cleanDocxQuotes(body);\n  cleanDocxSpans(body);\n  cleanHtmlTextNodes(body);\n  cleanDocxBrComments(body);\n  cleanHtmlBrElements(body);\n  cleanHtmlLinkElements(body);\n  cleanHtmlFontElements(body);\n  cleanDocxListElements(body);\n  copyBlockMarksToSpanChild(body);\n\n  return postCleanHtml(body.innerHTML);\n};\n","import {\n  createPluginFactory,\n  DeserializeHtml,\n  KEY_DESERIALIZE_HTML,\n  PlatePlugin,\n} from '@udecode/plate-common';\nimport {\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n} from '@udecode/plate-heading';\nimport { KEY_INDENT, KEY_TEXT_INDENT } from '@udecode/plate-indent';\nimport { KEY_LIST_STYLE_TYPE, ListStyleType } from '@udecode/plate-indent-list';\nimport { ELEMENT_PARAGRAPH } from '@udecode/plate-paragraph';\nimport { cleanDocx } from '../docx-cleaner/cleanDocx';\nimport {\n  getDocxIndent,\n  getDocxTextIndent,\n} from '../docx-cleaner/utils/getDocxIndent';\nimport { getDocxListContentHtml } from '../docx-cleaner/utils/getDocxListContentHtml';\nimport { getDocxListIndent } from '../docx-cleaner/utils/getDocxListIndent';\nimport { getTextListStyleType } from '../docx-cleaner/utils/getTextListStyleType';\nimport { isDocxContent } from '../docx-cleaner/utils/isDocxContent';\nimport { isDocxList } from '../docx-cleaner/utils/isDocxList';\n\nexport const KEY_DESERIALIZE_DOCX = 'deserializeDocx';\n\nconst getListNode = (type: string): DeserializeHtml['getNode'] => (element) => {\n  const node: any = { type };\n\n  if (isDocxList(element)) {\n    node[KEY_INDENT] = getDocxListIndent(element);\n\n    const text = element.textContent ?? '';\n\n    node[KEY_LIST_STYLE_TYPE] =\n      getTextListStyleType(text) ?? ListStyleType.Disc;\n\n    element.innerHTML = getDocxListContentHtml(element);\n  } else {\n    const indent = getDocxIndent(element);\n    if (indent) {\n      node[KEY_INDENT] = indent;\n    }\n\n    const textIndent = getDocxTextIndent(element);\n    if (textIndent) {\n      node[KEY_TEXT_INDENT] = textIndent;\n    }\n  }\n\n  return node;\n};\n\nconst KEYS = [\n  ELEMENT_PARAGRAPH,\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n];\n\nconst overrideByKey: Record<string, Partial<PlatePlugin>> = {};\n\nKEYS.forEach((key) => {\n  overrideByKey[key] = {\n    then: (editor, { type }) => ({\n      deserializeHtml: {\n        getNode: getListNode(type),\n      },\n    }),\n  };\n});\n\nexport const createDeserializeDocxPlugin = createPluginFactory({\n  key: KEY_DESERIALIZE_DOCX,\n  inject: {\n    pluginsByKey: {\n      [KEY_DESERIALIZE_HTML]: {\n        editor: {\n          insertData: {\n            transformData: (data, { dataTransfer }) => {\n              const rtf = dataTransfer.getData('text/rtf');\n\n              return cleanDocx(data, rtf);\n            },\n          },\n        },\n      },\n    },\n  },\n  overrideByKey: {\n    ...overrideByKey,\n    [ELEMENT_IMAGE]: {\n      editor: {\n        insertData: {\n          query: ({ dataTransfer }) => {\n            const data = dataTransfer.getData('text/html');\n            const { body } = new DOMParser().parseFromString(data, 'text/html');\n\n            return !isDocxContent(body);\n          },\n        },\n      },\n    },\n  },\n});\n"],"names":["cleanDocxBrComments","rootNode","traverseHtmlElements","element","tagName","nextSibling","isHtmlComment","data","removeHtmlNodesBetweenComments","isHtmlOpEmpty","nodeName","textContent","NO_BREAK_SPACE","isHtmlElementEmpty","children","length","firstElementChild","cleanDocxEmptyParagraphs","innerHTML","isDocxFootnote","classList","contains","extractFootnoteNumber","footnote","trim","replace","cleanDocxFootnotes","footnoteReplacement","document","createElement","parentElement","replaceChild","require$$0","require$$1","require$$2","require$$3","getRtfImageHex","imageData","bliptagData","split","bracketSplit","beforeBracket","afterBracket","includes","SPACE","join","spaceSplit","slice","getRtfImageMimeType","bliptagMeta","END_OF_ID_SEQUENCE_CHARACTERS","CARRIAGE_RETURN","LINE_FEED","getRtfImageSpid","spidPrefix","indexes","map","character","indexOf","foundIndexes","filter","index","idLength","Math","min","id","substring","getRtfImagesByType","rtf","type","images","reduce","rtfImages","image","spid","mimeType","hex","push","getRtfImagesMap","rtfImagesMap","shppictRtfImages","shppictRtfImage","shpRtfImages","shpRtfImage","getVShapes","comments","getHtmlComments","vShapesMap","comment","xmlDocument","DOMParser","parseFromString","vShapes","Array","from","getElementsByTagName","forEach","vShape","getAttribute","error","normalizeSpid","getVShapeSpid","vShapeId","vShapeSpid","cleanDocxImageElements","src","startsWith","alt","isURL","require_protocol","setAttribute","rtfImage","remove","dataUri","hexToBase64","parentNode","imageElement","cleanDocxListElements","styleAttribute","getDocxListContentHtml","rootElement","clonedElement","cloneNode","getDocxListIndent","matches","match","level","parseInt","isDocxBookmark","isDocxList","hasMsoListInStyle","test","hasMsoListIgnoreChild","Boolean","querySelector","outerHTML","getDocxListNode","isDocxOl","listNode","isOlSymbol","docxListToList","listLevel","listHtml","nextElementSibling","nextListLevel","nestedList","list","currentElement","listTagName","parseHtmlElement","cleanDocxListElementsToList","previousSibling","beforeElement","firstChild","insertBefore","appendChild","cleanDocxQuotes","replaceTagName","generateSpaces","count","generateTabs","TAB","cleanDocxSpacerun","spacesCount","replacementNode","createTextNode","cleanDocxTabCount","countString","cleanDocxSpans","DOCX_INDENT_STEP","extractNumber","str","number","parseFloat","styleToIndent","style","indentStep","indent","round","getDocxSpacing","cssProp","el","spacing","getDocxIndent","getDocxTextIndent","getTextListStyleType","text","trimStart","ListStyleType","DecimalLeadingZero","Decimal","LowerRoman","LowerAlpha","UpperRoman","UpperAlpha","isDocxContent","body","result","isMsoElement","some","className","cleanDocx","html","preCleanHtml","cleanHtmlEmptyElements","cleanHtmlTextNodes","cleanHtmlBrElements","cleanHtmlLinkElements","cleanHtmlFontElements","copyBlockMarksToSpanChild","postCleanHtml","KEY_DESERIALIZE_DOCX","getListNode","node","KEY_INDENT","KEY_LIST_STYLE_TYPE","Disc","textIndent","KEY_TEXT_INDENT","KEYS","ELEMENT_PARAGRAPH","ELEMENT_H1","ELEMENT_H2","ELEMENT_H3","ELEMENT_H4","ELEMENT_H5","ELEMENT_H6","overrideByKey","key","then","editor","deserializeHtml","getNode","createDeserializeDocxPlugin","createPluginFactory","inject","pluginsByKey","KEY_DESERIALIZE_HTML","insertData","transformData","dataTransfer","getData","ELEMENT_IMAGE","query"],"mappings":"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"}
\ No newline at end of file
diff --git a/package.json b/package.json
index 84b9efa06cd63fc81e28c1b437d4434ccaf3b7bb..10eb65cafe40f18c2b2d075a0fe8046d1e1ce269 100644
--- a/package.json
+++ b/package.json
@@ -23,7 +23,6 @@
     "@udecode/plate-heading": "21.5.0",
     "@udecode/plate-indent": "21.5.0",
     "@udecode/plate-indent-list": "21.5.0",
-    "@udecode/plate-media": "21.5.0",
     "@udecode/plate-paragraph": "21.5.0",
     "@udecode/plate-table": "21.5.0",
     "validator": "^13.7.0"
