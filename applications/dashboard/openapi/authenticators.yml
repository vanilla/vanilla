openapi: 3.0.2
info:
    description: API access to your community.
    title: Vanilla API
    version: "2.0"
servers:
    - url: /api/v2
paths:
    /authenticators:
        get:
            summary: List the authenticators.
            tags:
                - Authenticators
            parameters:
                - name: type
                  description: Filter by one or more authenticator types.
                  in: query
                  schema:
                      type: array
                      items:
                          type: string
                      format: form
                - $ref: "../../dashboard/openapi/parameters.yml#/components/parameters/Page"
                - name: limit
                  in: query
                  description: >
                      Maximum number of items to be included in the response. See [Pagination](https://docs.vanillaforums.com/apiv2/#pagination).
                  schema:
                      type: integer
                      default: 10
                      minimum: 1
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/AuthenticatorFragment"
        post:
            x-hidden: true
            summary: Post new authenticator.
            tags:
                - Authenticators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthenticatorPostSchema"
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthenticatorFragment"
                    description: Success
                "403":
                    $ref: "responses.yml#/components/responses/PermissionError"
    "/authenticators/{id}":
        parameters:
            - name: id
              in: path
              description: The ID of the authenticator to look up.
              required: true
              schema:
                  type: integer
        delete:
            summary: Delete an authenticator.
            tags:
                - Authenticators
            responses:
                "204":
                    description: Success
        get:
            summary: Get a single authenticator.
            tags:
                - Authenticators
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthenticatorFragment"
        patch:
            summary: Update an authenticator.
            tags:
                - Authenticators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthenticatorPatchSchema"
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthenticatorFragment"
                "403":
                    $ref: "responses.yml#/components/responses/PermissionError"
                "404":
                    $ref: "responses.yml#/components/responses/NotFound"
components:
    schemas:
        AuthenticatorFragment:
            type: object
            properties:
                authenticatorID:
                    type: integer
                    description: The authenticator's ID.
                name:
                    type: string
                    description: A human readible name for the authenticator.
                type:
                    type: string
                    description: The type of authenticator
                    example: oauth2
                clientID:
                    type: string
                default:
                    type: boolean
                active:
                    type: boolean
                    example: true
                visible:
                    type: boolean
                isOidc:
                    type: boolean
                    default: false
                markVerified:
                    type: boolean
                    default: false
                urls:
                    $ref: "#/components/schemas/AuthenticatorUrlSchema"
            required:
                - authenticatorID
                - name
                - type
                - clientID
                - default
                - active
                - visible
        AuthenticationTypeService:
            # Schemas will be generated dynamically at runtime.
            description: Authentication types configuration attributes.
            oneOf: []
        AuthenticatorPostSchema:
            type: object
            properties:
                name:
                    type: string
                    description: A human readable name for the authenticator.
                type:
                    type: string
                    description: The type of authenticator
                    example: oauth2
                clientID:
                    type: string
                default:
                    type: boolean
                    default: false
                active:
                    type: boolean
                    default: false
                    example: true
                visible:
                    type: boolean
                    default: false
                secret:
                    type: string
                urls:
                    $ref: "#/components/schemas/AuthenticatorUrlSchema"
                authenticatorConfig:
                    $ref: "#/components/schemas/AuthenticationTypeService"
            required:
                - name
                - type
        AuthenticatorPatchSchema:
            type: object
            properties:
                default:
                    type: boolean
                    default: false
                active:
                    type: boolean
                    default: false
                    example: true
                visible:
                    type: boolean
                    default: false
                urls:
                    $ref: "#/components/schemas/AuthenticatorUrlSchema"
                authenticatorConfig:
                    $ref: "#/components/schemas/AuthenticationTypeService"
        AuthenticatorUrlSchema:
            type: object
            properties:
                signInUrl:
                    nullable: true
                    format: uri
                    type: string
                signOutUrl:
                    nullable: true
                    format: uri
                    type: string
                authenticateUrl:
                    nullable: true
                    format: uri
                    type: string
                registerUrl:
                    nullable: true
                    format: uri
                    type: string
                passwordUrl:
                    nullable: true
                    format: uri
                    type: string
                profileUrl:
                    nullable: true
                    format: uri
                    type: string
