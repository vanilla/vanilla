.richEditor {
    position: relative;
    display: block;
    padding-left: $richEditor_leftPadding;
    font-size: $richEditor-font_size;
}

.richEditor-frame.InputBox {
    position: relative;
    background: $richEditor-bg_color;
    height: auto;
    padding: 0;
}

.richEditor-menu {
    display: inline-block;
    position: relative;

    &.FlyoutMenu { // Temporary
        position: relative;
        top: auto;
        left: auto;
        right: auto;
        bottom: auto;
        display: block;
        float: none;
    }
}

@keyframes fadein {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

.richEditorParagraphMenu {
    position: absolute;
    top: $richEditor-pilcrow_offset;
    left: -6px;
    transform: translateX(-100%);
    height: $richEditor-icon_size;
    width: $richEditor-icon_size;
    z-index: 1;
    animation: fadein $richEditor-pilcrowAnimation_duration ease;
    animation-iteration-count: 1;
}

.richEditor-text {
    position: relative;
    min-height: $richEditor_minHeight;
    padding: $richEditor_padding;
    outline-color: transparent;
    white-space: pre-wrap !important; // Needed for spaces around embed blots to work properly!

    &:focus {
        outline: {
            offset: $richEditor-text_offset;
            style: solid;
            width: $richEditor-outline_width;
            color: $richEditor-outline_color;
        }
    }
}

.ql-clipboard {
    @include sr-only();
}

.richEditor-menuItems {
    position: relative;
    display: flex;
    align-items: flex-start;
    justify-content: flex-start;
    flex-wrap: nowrap;
    list-style: none;
    padding: 0;
    //width: calc(100% - #{2 * $richEditor-border_width});
    margin: {
        top: 0;
        right: 0;
        left: -$richEditor-border_width;
        bottom: -$richEditor-border_width;
    }

    .richEditor-menuItem {
        display: block;
        padding: 0;
        margin: 0;

        .richEditor-button,
        &.richEditor-button {
            width: $richEditor-menuButton_size;
            font-size: #{$richEditor-menuButton_size * 24 / 39};
            line-height: $richEditor-menuButton_size;

            &.emojiChar-ðŸ‡ºðŸ‡³ {
                font-size: 14px;
            }
        }

        &.isRightAligned {
            margin-left: auto;
        }
    }
}

// button reset
.richEditor-nextInput,
.atMentionList-suggestion,
.iconButton,
.richEditor-button {
    @include singleLineEllipsis;
    position: relative;
    appearance: none;
    border: 0;
    padding: 0;
    background: none;
    width: 100%;
    text-align: left;
}


.richEditor-button {
    display: block;
    height: $richEditor-icon_size;
    width: $richEditor-icon_size;
    user-select: none;
    cursor: pointer;


    &.richEditor-formatButton,
    &.richEditor-embedButton {
        height: $richEditor-menuButton_size;
        color: inherit;
    }

    &.emojiGroup {
        width: $richEditor-icon_size;
        height: $richEditor-icon_size;
    }

    &:not(:disabled) {
        cursor: pointer;
    }

    &:hover {
        background: $richEditor-hover_bg;
    }

    &:focus {
        z-index: 2;
        @include editorButtonFocusStyles;

        .Close-x,
        .richEditorButton-icon {
            opacity: 1;
        }
    }

    &.isActive {
        @include editorButtonActiveStyles;
    }

    &.richEditor-embedButton {
        &:focus {
            @include editorButtonFocusStyles($richEditor-embedButton_offset);
        }
    }

    &.richEditor-formatButton {
        &:focus {
            @include editorButtonFocusStyles($richEditor-paragraphMenuButton_offset);
        }
    }
}

.richEditor-menuWideItem,
.richEditor-menuItem {
    display: block;
    padding: 0;
    margin: 0;

    .richEditor-button,
    &.richEditor-button {
        width: $richEditor-menuButton_size;
        font-size: #{$richEditor-menuButton_size * 24 / 39};
        line-height: $richEditor-menuButton_size;

        &.emojiChar-ðŸ‡ºðŸ‡³ {
            font-size: 14px;
        }
    }

    &.isRightAligned {
        margin-left: auto;
    }
}

.richEditor-nextInput {
    height: $richEditor-menuButton_size;
    line-height: $richEditor-menuButton_size;
    font-size: $richEditor-embedMenuWideButton_fontSize;
    color: inherit;
    padding: {
        left: $richEditor-embedMenuWideButton_padding;
        right: $richEditor-embedMenuWideButton_padding;
    }
}

.richEditor-upload {
    display: none !important;
}

.richEditor-embedBar {
    display: block;
    width: 100%;
    padding: $richEditor-embedMenu_padding;
}

.richEditorButton-icon {
    display: block;
    margin: auto;
    height: $richEditor-icon_size;
    width: $richEditor-icon_size;
    opacity: $richEditor-icon_opacity;
}

.Close-x {
    display: block;
    opacity: $richEditor-icon_opacity;
    cursor: pointer;
}

// Link Menu
.insertLink.FlyoutMenu {
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    max-width: $richEditor-insertLink_width;
    width: 100%;
    padding: {
        left: 5px;
    }
}

.richEditor-close.Close {
    position: relative;
    display: block;
    width: $richEditor-menuButton_size;
    height: $richEditor-menuButton_size;
    line-height: $richEditor-menuButton_size;
    top: auto;
    right: auto;
    text-align: center;
    user-select: none;
    background: transparent;
    cursor: pointer;

    &:focus {
        @include editorButtonFocusStyles;
    }
}

.insertLink-input.InputBox {
  border: 0 !important;
  margin-bottom: 0 !important;
  flex-grow: 1;
  max-width: calc(100% - #{$richEditor-menuButton_size})
}

// Insert Media
.insertPopover {
    position: relative;
    overflow: hidden;
    z-index: 6;

    .InputBox {
        width: 100%;
        box-sizing: border-box;
    }

    .richEditor-close {
        position: absolute;
        top: 0;
        right: 0;
    }

    .Footer {
        display: flex;
    }
}

.insertPopover-header {
    padding: {
        top: $richEditor-insertPopover_paddingVertical;
        bottom: $richEditor-insertPopover_paddingVertical;
        left: $richEditor-insertPopover_paddingHorizontal;
        right: $richEditor-insertPopover_paddingHorizontal;
    }
}

.insertPopover-footer {
    padding: {
        bottom: $richEditor-insertPopover_paddingVertical;
        left: $richEditor-insertPopover_paddingHorizontal;
        right: $richEditor-insertPopover_paddingHorizontal;
    }
}

.popover-title {
    @include longWordEllipsis;
    margin: 0;
    max-width: calc(100% - #{$richEditor-menuButton_size});
    min-height: #{$richEditor-menuButton_size - $richEditor-insertPopover_paddingVertical};

    &:focus {
        outline: 0;
    }
}

.insertMedia-footer {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    padding: {
        left: $richEditor-insertPopover_paddingHorizontal;
        right: $richEditor-insertPopover_paddingHorizontal;
        bottom: $richEditor-insertPopover_paddingVertical;
    }
}

.insertMedia-help {
    margin-right: auto;
    font-size: 12px;
}

.insertMedia-insert {
    margin-bottom: 3px;
}

.insertPopover-body {
    margin-bottom: $richEditor-insertPopover_paddingHorizontal;
    padding: {
        left: $richEditor-insertPopover_paddingHorizontal;
        right: $richEditor-insertPopover_paddingHorizontal;
    }
}

.insertEmoji-body {
    max-height: $richEditor-insertPopover_maxHeight;
    height: $richEditor-insertPopover_height;
}

.content-wrapper {
    height: 100%;
}

.embedDialogue {
    position: relative;
}

.richEditor-menu.insertPopover {
    position: absolute;
    bottom: 100%;
    left: 0;
}

.popover-title {
    font-size: 100%;
}

.richEditor-insertEmoji {
    width: $richEditor-menuButton_size;
    height: $richEditor-menuButton_size;
    font-size: $richEditor-icon_size;
    text-align: center;
    overflow: hidden;

    &:focus {
        outline-offset: $richEditor-emojiOutline_offset;
    }
}

.richEditor ~ .TextBoxWrapper {
    display: none;
}

// Nub styles
.richEditor-nubPosition {
    position: absolute;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    overflow: hidden;
    width: $richEditor-nub_width * 2;
    height: $richEditor-nub_width * 2;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    transform: translateX(-50%);
    margin-top: -$richEditor-menu_borderWidth;
}

.richEditor-nub {
    position: relative;
    display: block;
    width: $richEditor-nub_width;
    height: $richEditor-nub_width;
    border: {
        top: $richEditor-menu_borderWidth solid #999;
        right: $richEditor-menu_borderWidth solid #999;
    }
    box-shadow: 0 0 5px 1px #eee;
    box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.2);
    background: $richEditor-bg_color;
}

// Orientation specific styles

.richEditor-toolbarContainer {
    &.isUp {
        transform: translateY(-$richEditor-menu_offset);

        .richEditor-nubPosition {
            top: 100%;
        }

        .richEditor-nub {
            transform: translateY(-50%) rotate(135deg);
        }
    }

    &.isDown {
        transform: translateY($richEditor-menu_offset);

        .richEditor-nubPosition {
            bottom: 100%;
        }

        .richEditor-nubPosition {
            align-items: flex-end;
            transform: translateY(-50%) translateX(-50%);
            margin-top: $richEditor-menu_borderWidth;
        }
        .richEditor-nub {
            transform: translateY(50%) rotate(-45deg);
        }
    }
}

.richEditor-paragraphToolbarContainer {
    position: absolute;

    .richEditor-nubPosition {
        left: 2px;
    }

    &.isUp {
        bottom: 100%;

        .richEditor-nubPosition {
            top: 100%;
            transform: none;
        }
    }

    &.isDown {
        top: 100%;

        .richEditor-nubPosition {
            bottom: 100%;
            transform: translateY($richEditor-menu_borderWidth);
        }
    }
}

.blockquote {
    display: block;
    margin: 0;
    padding: {
        top: 0;
        left: 18px;
        right: 0;
        bottom: 0;
    };
    padding: 3px 3px 3px 18px;
    border-left: solid #D8D8D8 6px;
    box-sizing: border-box;
    width: 100%;
    vertical-align: middle;
    border-left: solid #D8D8D8 6px;
    color: $embedded-quote_fg;
}

// Code
.userContent code,
.code {
    display: inline-block;
    font-size: $richEditor-code_fontSize;
    vertical-align: middle;
    line-height: 1em;
    box-sizing: border-box;
    font-family: monospace;
    background: transparent;
    margin: 0;
    border: {
        radius: $richEditor-inlineCode_borderRadius;
        width: 1px;
        style: solid;
        color: $richEditor-inlineCode_borderColor;
    }
    padding: {
        top: $richEditor-inlineCode_verticalPadding;
        bottom: $richEditor-inlineCode_verticalPadding;
        left: $richEditor-inlineCode_horizontalPadding;
        right: $richEditor-inlineCode_horizontalPadding;
    }
}

.code.isBlock {
    display: block;
    overflow-x: auto;
    border: 0;
    word-wrap: normal;
    line-height: 1.4;
    white-space: pre;
    border-radius: 0;
    background: none;
    padding: 12px;
    font-size: $richEditor-pilcrow_fontSize;
    background-color: $richEditor-code_bg;
}

.userContent {
    > * {
        &:not(:last-child) {
            margin-bottom: .6em;

            + h1,
            + h2,
            + h3,
            + h4,
            + h5,
            + h6
            {
                margin-top: #{$richEditor-font_size * .6};
            }
        }

        &:first-child {
            margin-top: 0 !important;
        }
    }

    &,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    span,
    div,
    td,
    th,
    code,
    a,
    p
    {
        word-break: break-all;
        word-break: break-word;
        text-overflow: ellipsis;
        line-height: $richEditor-lineHeight;
    }

    code {
        text-overflow: initial;
    }
}

.emoji { // old emoji support
    width: 20px;
    height: 20px;
    vertical-align: -.232em;
}

.richEditor-button {
    user-select: none;
    cursor: pointer;

}

// Emoji Groups

.emojiGroups {
    display: flex;
    flex-wrap: nowrap;
    justify-content: space-between;
    padding-left: $richEditor-emojiGroup_paddingLeft;
}

.emojiGroup {
    color: $richEditor-emojiCategory_color;

    &.isSelected {
        @include editorButtonActiveStyles;
    }

    + .emojiGroup {
        margin-left: 10px;
    }
}

.emojiGroup-icon {
    display: block;
    position: relative;
    margin: 0;
    padding: 0;
    width: $richEditor-icon_size;
    size: $richEditor-icon_size;
}


// @mentions
.atMentionList {
    position: absolute;
    width: $richEditor-atMention_width;
}

.atMentionList-items {
    &.MenuItems {
        display: block;
        padding: $richEditor-atMentionUser_paddingVertical 0;
    }

    &.isHidden {
        display: none;
    }
}

.atMentionList-item {
    &.isActive {
        .atMentionList-suggestion {
            background-color: $richEditor-focus_bg;
        }
    }
}

.atMentionList-suggestion {
    width: 100%;
    cursor: pointer;
}

.atMentionList-user,
.atMentionList-noResults {
    display: flex;
    align-items: center;
    width: 100%;
    box-sizing: border-box;
    overflow: hidden;
    line-height: $richEditor-atMentionAvatar_width;
    padding: {
        top: $richEditor-atMentionUser_paddingVertical;
        right: $richEditor-atMentionUser_paddingHorizontal;
        bottom: $richEditor-atMentionUser_paddingVertical;
        left: $richEditor-atMentionUser_paddingHorizontal;
    }
}

.atMentionList-photoWrap {
    margin-right: $richEditor-atMentionAvatar_margin;
}

.atMentionList-photo {
    width: $richEditor-atMentionAvatar_width;
    height: $richEditor-atMentionAvatar_width;
}

.atMentionList-userName {
    display: block;
    flex-grow: 1;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    max-width: calc(100% - #{$richEditor-atMentionAvatar_margin + $richEditor-atMentionAvatar_width});
}

.atMentionList-mark {
    padding: 0;
    font-weight: $richEditor-atMentionMark_weight;
}

.atMentionList-photo {
    display: block;
}

// Rendered link
.atMention  {
    color: inherit;
    font-weight: $richEditor-atMentionLink_weight;
}

// Only allow selection of the entire mention at once in the editor.
.richEditor .atMention {
    user-select: all;
}

// Hide Preview

body.hasRichEditor {
    #Form_Preview {
        display: none;
    }
}

// Handle gutter for paragraph menu
@include mediaQuery-richEditor_notMobile {
    body.hasRichEditor {
        // New Discussions
        &.Section-PostDiscussion {
            #DiscussionForm {
                select {
                    max-width: 100%;
                }

                .FormWrapper {
                    padding: {
                        left: $richEditor-pilcrow_gutter;
                    }

                    .richEditor {
                        padding-left: 0;
                    }
                }
            }
        }


        // Comment
        .CommentForm {
            .CommentFormWrap {
                .Form-HeaderWrap {
                    display: none;
                }

                .FormWrapper {
                    padding-left: 0;
                }
            }


            .richEditor {
                padding: {
                    left: $richEditor-pilcrow_gutter;
                }

                .richEditor {
                    padding-left: 0;
                }
            }
        }

        // Activity
        .DataListWrap {
            .FormWrapper.FormWrapper-Condensed {
                padding-left: 0;
            }
        }

        // New Message
        #MessageForm,
        #ConversationForm {
            .Form-HeaderWrap {
                display: none;
            }

            .FormWrapper {
                padding-left: $richEditor-pilcrow_gutter;

                .richEditor {
                    padding-left: 0;
                }
            }
        }
    }
}


// Mobile
body.isMobile {
    @include richEditorMobileStyles();
}

@include mediaQuery-richEditor_mobile {
    @include richEditorMobileStyles();
}
