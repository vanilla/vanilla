openapi: 3.0.2
info:
x-resourceEvents:
    discussion:
        x-addon: "vanilla"
        name: "Discussion"
        type: "discussion"
paths:
    /discussions:
        get:
            parameters:
                - name: discussionID
                  description: Filter by a range or CSV of discussion IDs.
                  in: query
                  schema:
                      $ref: "#/components/schemas/RangeExpression"
                - description: Filter by a category.
                  in: query
                  name: categoryID
                  schema:
                      type: integer
                - $ref: "#/components/parameters/DateInserted"
                - $ref: "#/components/parameters/DateUpdated"
                - $ref: "#/components/parameters/DateLastComment"
                - description: |-
                      Filter discussions by site section ID (ex. subcommunity).
                      The subcommunity ID or folder can be used if you use [smart IDs](https://success.vanillaforums.com/kb/articles/46-smart-ids).
                      The query looks like:

                      ```
                      siteSectionID=$subcommunityID:{id|folder}
                      ```
                  example: "$subcommunityID:en"
                  in: query
                  name: siteSectionID
                  schema:
                      type: string
                - description: Filter by discussion type.
                  in: query
                  name: type
                  schema:
                      type: string
                  x-filter:
                      field: d.Type
                - description: Filter questions by status (accepted, answered, unanswered).
                  in: query
                  name: status
                  schema:
                      type: string
                  x-filter:
                      field: d.QnA
                - description: >
                      Only fetch discussions from followed categories. Pinned
                      discussions are mixed in.
                  in: query
                  name: followed
                  required: true
                  schema:
                      default: false
                      type: boolean
                - description: >
                      Whether or not to include pinned discussions. If true, only
                      return pinned discussions. Cannot be used with the pinOrder
                      parameter.
                  in: query
                  name: pinned
                  schema:
                      type: boolean
                - description: >
                      If including pinned posts, in what order should they be
                      integrated? When "first", discussions pinned to a specific category
                      will only be affected if the discussion's category is passed as the
                      categoryID parameter. Cannot be used with the pinned parameter.

                      Must be one of: "first", "mixed".
                  in: query
                  name: pinOrder
                  schema:
                      type: string
                      default: first
                      enum:
                          - first
                          - mixed
                - $ref: "#/components/parameters/Page"
                - description: >
                      Desired number of items per page. **Note that you may not get the exact number of records back as specified
                      with the limit unless you also specify pinOrder=mixed**. This is an optimization for pinned
                      (i.e. announcement) discussion handling.
                  in: query
                  name: limit
                  schema:
                      type: integer
                      default: 30
                      maximum: 100
                      minimum: 1
                - name: sort
                  description: Sort the results.
                  in: query
                  schema:
                      type: string
                      enum:
                          - dateLastComment
                          - dateInserted
                          - discussionID
                          - -dateLastComment
                          - -dateInserted
                          - -discussionID
                - description: |
                      Filter by author.
                  in: query
                  name: insertUserID
                  schema:
                      type: integer
                  x-filter:
                      field: d.InsertUserID
                - $ref: "#/components/parameters/DiscussionExpand"
                - description: The group the discussion is in.
                  in: query
                  name: groupID
                  schema:
                      type: integer
                  allowEmptyValue: true
                - description: Filter by resolved status.
                  in: query
                  name: resolved
                  schema:
                      type: boolean
                  x-filter:
                      field: d.Resolved
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                items:
                                    $ref: "#/components/schemas/Discussion"
                                type: array
                    description: Success
            tags:
                - Discussions
            summary: List discussions.
        post:
            responses:
                "201":
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/Discussion"
                    description: Success
            tags:
                - Discussions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DiscussionPost"
                required: true
            summary: Add a discussion.
    /discussions/bookmarked:
        get:
            parameters:
                - $ref: "#/components/parameters/Page"
                - description: |
                      Desired number of items per page.
                  in: query
                  name: limit
                  schema:
                      type: integer
                      default: 30
                      maximum: 100
                      minimum: 1
                - $ref: "#/components/parameters/DiscussionExpand"
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                items:
                                    $ref: "#/components/schemas/Discussion"
                                type: array
                    description: Success
            tags:
                - Discussions
            summary: Get a list of the current user's bookmarked discussions.
    /discussions/idea:
        x-addon: ideation
        post:
            responses:
                "201":
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/Discussion"
                    description: Success
            tags:
                - Discussions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DiscussionPost"
                required: true
            summary: Add an idea.
    /discussions/question:
        x-addon: qna
        post:
            responses:
                "201":
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/Discussion"
                    description: Success
            tags:
                - Discussions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DiscussionPost"
                required: true
            summary: Add a discussion.
    /discussions/search:
        get:
            parameters:
                - description: |
                      The numeric ID of a category to limit search results to.
                  in: query
                  name: categoryID
                  schema:
                      type: integer
                - description: >
                      Limit results to those in followed categories. Cannot be used
                      with the categoryID parameter.
                  in: query
                  name: followed
                  schema:
                      type: boolean
                - description: |
                      Search terms.
                  in: query
                  name: query
                  required: true
                  schema:
                      minLength: 1
                      type: string
                - $ref: "#/components/parameters/Page"
                - description: |
                      Desired number of items per page.
                  in: query
                  name: limit
                  schema:
                      type: integer
                      default: 30
                      maximum: 100
                      minimum: 1
                - $ref: "#/components/parameters/DiscussionExpand"
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                items:
                                    $ref: "#/components/schemas/Discussion"
                                type: array
                    description: Success
            tags:
                - Discussions
            summary: Search discussions.
    "/discussions/{id}":
        delete:
            parameters:
                - description: |
                      The discussion ID.
                  in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                - $ref: "#/components/parameters/DiscussionExpand"
            responses:
                "202":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/TrackingSlipResponse"
                "204":
                    description: Success
                "403":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/PermissionError"
                "408":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/LongRunnerResponse"
            tags:
                - Discussions
            summary: Delete a discussion.
        get:
            parameters:
                - description: |
                      The discussion ID.
                  in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                - $ref: "#/components/parameters/DiscussionExpand"
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/Discussion"
                    description: Success
            tags:
                - Discussions
            summary: Get a discussion.
        patch:
            parameters:
                - description: The discussion ID.
                  in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/Discussion"
                    description: Success
            tags:
                - Discussions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/DiscussionPatch"
                required: true
            summary: Update a discussion.
    "/discussions/list":
        delete:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            description: An array of discussion IDs.
                            properties:
                                discussionIDs:
                                    type: array
                                    items:
                                        type: integer
                                    example: [2452, 14253, 14124]
            responses:
                "202":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/TrackingSlipResponse"
                "204":
                    description: Success
                "403":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/PermissionError"
                "408":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/LongRunnerResponse"
            tags:
                - Discussions
            summary: Delete a list of discussions.
    "/discussions/move":
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            description: An array of discussion IDs.
                            properties:
                                discussionIDs:
                                    type: array
                                    items:
                                        type: integer
                                categoryID:
                                    description: The category ID to move discussions into.
                                    type: integer
                                addRedirects:
                                    description: If a redirect discussion needs to be created.
                                    type: boolean
            responses:
                "200":
                    description: Success
                "202":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/TrackingSlipResponse"
                "403":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/PermissionError"
                "408":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/LongRunnerResponse"
            tags:
                - Discussions
            summary: Move a list of discussions.
    "/discussions/close":
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            description: An array of discussion IDs.
                            properties:
                                discussionIDs:
                                    type: array
                                    items:
                                        type: integer
                                closed:
                                    description: Whether to close (true) or open (false) this set of discussions.
                                    type: boolean
            responses:
                "200":
                    description: Success
                "202":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/TrackingSlipResponse"
                "403":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/PermissionError"
                "408":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/LongRunnerResponse"
            tags:
                - Discussions
            summary: Close/open a list of discussions.
    "/discussions/merge":
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                discussionIDs:
                                    description: An array of discussion IDs to merge together.
                                    type: array
                                    items:
                                        type: integer
                                    example: [2052, 2053, 5602]
                                destinationDiscussionID:
                                    description: The discussionID that everything will be merged into.
                                    type: integer
                                    example: 2052
                                addRedirects:
                                    description: If a redirect discussion needs to be created.
                                    type: boolean
                                    example: true
            responses:
                "200":
                    description: Success
                "202":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/TrackingSlipResponse"
                "403":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/PermissionError"
                "408":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/LongRunnerResponse"
            tags:
                - Discussions
            summary: Merge discussions.
    "/discussions/{id}/bookmark":
        put:
            parameters:
                - description: The discussion ID.
                  in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                properties:
                                    bookmarked:
                                        description: The current bookmark value.
                                        type: boolean
                                required:
                                    - bookmarked
                                type: object
                    description: Success
            tags:
                - Discussions
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                bookmarked:
                                    description: Pass true to bookmark or false to remove bookmark.
                                    type: boolean
                            required:
                                - bookmarked
                            type: object
                required: true
            summary: Bookmark a discussion.
    "/discussions/{id}/edit":
        get:
            parameters:
                - description: |
                      The discussion ID.
                  in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                - $ref: "#/components/parameters/DiscussionExpand"
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/DiscussionGetEdit"
                    description: Success
            tags:
                - Discussions
            summary: Get a discussion for editing.
    "/discussions/{id}/type":
        put:
            parameters:
                - description: The discussion ID.
                  in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/Discussion"
                    description: Success
            tags:
                - Discussions
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                type:
                                    description: record type to convert to.
                                    type: string
                            required:
                                - recordType
                            type: object
                required: true
            summary: Change a discussion type.
    "/discussions/{id}/idea":
        x-addon: ideation
        patch:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                properties:
                                    statusID:
                                        description: Idea status ID.
                                        type: integer
                                    statusNotes:
                                        description: >-
                                            Notes on a status change. Notes will persist until
                                            overwritten.
                                        minLength: 1
                                        nullable: true
                                        type: string
                                required:
                                    - statusID
                                    - statusNotes
                                type: object
                    description: Success
            tags:
                - Discussions
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                statusID:
                                    description: Idea status ID.
                                    type: integer
                                statusNotes:
                                    description: >-
                                        Notes on a status change. Notes will persist until
                                        overwritten.
                                    minLength: 1
                                    nullable: true
                                    type: string
                            required:
                                - statusID
                                - statusNotes
                            type: object
                required: true
            summary: Update idea metadata on a discussion.
    "/discussions/{id}/quote":
        get:
            parameters:
                - description: |
                      The discussion ID.
                  in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                - $ref: "#/components/parameters/DiscussionExpand"
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                properties:
                                    bodyRaw:
                                        description: >-
                                            The raw body of the discussion. This can be an array of
                                            rich operations or a string for other formats
                                        minLength: 1
                                        type: string
                                        x-todo: "tpye: array"
                                    dateInserted:
                                        description: When the discussion was created.
                                        format: date-time
                                        type: string
                                    dateUpdated:
                                        description: When the discussion was last updated.
                                        format: date-time
                                        nullable: true
                                        type: string
                                    discussionID:
                                        description: The ID of the discussion.
                                        type: integer
                                    format:
                                        $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/Format"
                                    insertUser:
                                        $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                                    name:
                                        description: The title of the discussion
                                        minLength: 1
                                        type: string
                                    url:
                                        description: The full URL to the discussion.
                                        minLength: 1
                                        type: string
                                required:
                                    - discussionID
                                    - name
                                    - bodyRaw
                                    - dateInserted
                                    - dateUpdated
                                    - insertUser
                                    - url
                                    - format
                                type: object
                    description: Success
            tags:
                - Discussions
    "/discussions/{id}/reactions":
        x-addon: reactions
        get:
            parameters:
                - description: |
                      The discussion ID.
                  in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                - description: Filter to a specific reaction type by using its URL code.
                  in: query
                  name: type
                  required: true
                  schema:
                      minLength: 1
                      type: string
                  allowEmptyValue: true
                - $ref: "#/components/parameters/Page"
                - description: |
                      Desired number of items per page.
                  in: query
                  name: limit
                  schema:
                      type: integer
                      default: 30
                      maximum: 100
                      minimum: 1
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                items:
                                    properties:
                                        dateInserted:
                                            format: date-time
                                            type: string
                                        reactionType:
                                            properties:
                                                class:
                                                    minLength: 1
                                                    type: string
                                                name:
                                                    minLength: 1
                                                    type: string
                                                tagID:
                                                    type: integer
                                                urlcode:
                                                    minLength: 1
                                                    type: string
                                            required:
                                                - tagID
                                                - urlcode
                                                - name
                                                - class
                                            type: object
                                        recordID:
                                            type: integer
                                        recordType:
                                            minLength: 1
                                            type: string
                                        tagID:
                                            type: integer
                                        user:
                                            $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                                        userID:
                                            type: integer
                                    required:
                                        - recordType
                                        - recordID
                                        - tagID
                                        - userID
                                        - dateInserted
                                        - user
                                        - reactionType
                                    type: object
                                type: array
                    description: Success
            tags:
                - Discussions
            summary: Get reactions to a discussion.
        post:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                items:
                                    properties:
                                        class:
                                            minLength: 1
                                            type: string
                                        count:
                                            type: integer
                                        name:
                                            minLength: 1
                                            type: string
                                        tagID:
                                            type: integer
                                        urlcode:
                                            minLength: 1
                                            type: string
                                    required:
                                        - tagID
                                        - urlcode
                                        - name
                                        - class
                                        - count
                                    type: object
                                type: array
                    description: Success
            tags:
                - Discussions
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                reactionType:
                                    description: URL code of a reaction type.
                                    minLength: 1
                                    type: string
                            required:
                                - reactionType
                            type: object
                required: true
            summary: React to a discussion.
    "/discussions/{id}/reactions/{userID}":
        x-addon: reactions
        delete:
            parameters:
                - description: |
                      The discussion ID.
                  in: path
                  name: id
                  required: true
                  schema:
                      type: integer
                - description: |
                      The target user ID.
                  in: path
                  name: userID
                  required: true
                  schema:
                      type: integer
                - $ref: "#/components/parameters/DiscussionExpand"
            responses:
                "204":
                    description: Success
            tags:
                - Discussions
            summary: Remove a user's reaction.
    "/discussions/{id}/reactions/":
        x-addon: reactions
        delete:
            parameters:
                - description: |
                      The discussion ID.
                  in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                "204":
                    description: Success
            tags:
                - Discussions
            summary: Remove user's own reaction.
    "/discussions/{id}/canonical-url":
        put:
            parameters:
                - description: The discussion ID.
                  in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/Discussion"
                    description: Success
                "404":
                    description: Not Found
                "400":
                    description: Bad Request
            tags:
                - Discussions
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                canonicalUrl:
                                    description: Canonical url for discussion.
                                    type: string
                            required:
                                - canonicalUrl
                            type: object
                required: true
            summary: Set custom canonical url for a discussion.
        delete:
            parameters:
                - description: The discussion ID.
                  in: path
                  name: id
                  required: true
                  schema:
                      type: integer
            responses:
                "204":
                    description: Success
                "404":
                    description: Not Found
            tags:
                - Discussions
            summary: Remove custom canonical url for a discussion.
    /discussions/{id}/tags:
        parameters:
            - name: id
              description: The discussion ID
              in: path
              required: true
              schema:
                  type: integer
        put:
            summary: Set the tags on a discussion.
            tags:
                - Discussions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TagReference"
            responses:
                "200":
                    description: Success.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/TagFragment"
                "401":
                    $ref: "#/components/responses/PermissionError"
                "404":
                    $ref: "#/components/responses/NotFound"
        post:
            summary: Add tags to a discussion.
            tags:
                - Discussions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TagReference"
            responses:
                "200":
                    description: Success.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/TagFragment"
                "401":
                    $ref: "#/components/responses/PermissionError"
                "404":
                    $ref: "#/components/responses/NotFound"
components:
    parameters:
        DateLastComment:
            name: dateLastComment
            in: query
            description: >
                Filter by the date of the last comment or the original discussion date if it has no comments. See [date filters](https://docs.vanillaforums.com/help/apiv2/date-filters/).
            schema:
                format: date-filter
                type: string
        DiscussionExpand:
            name: expand
            description: >
                Expand associated records using one or more valid field names. A value of "all" will expand all expandable fields.
            in: query
            schema:
                type: array
                items:
                    type: string
                    enum:
                        - all
                        - category
                        - insertUser
                        - lastUser
                        - lastPost
                        - lastPost.body
                        - lastPost.insertUser
                        - reactions
                        - tagsIDs
                        - tags
            style: form
    schemas:
        CategoryFragment:
            properties:
                categoryID:
                    description: The ID of the category.
                    type: integer
                name:
                    description: The name of the category.
                    minLength: 1
                    type: string
                url:
                    description: Full URL to the category.
                    minLength: 1
                    type: string
            required:
                - categoryID
                - name
                - url
            type: object
        Discussion:
            properties:
                attributes:
                    properties:
                        idea:
                            properties:
                                status:
                                    properties:
                                        name:
                                            description: Label for the status.
                                            minLength: 1
                                            type: string
                                        state:
                                            description: The open/closed state of an idea.
                                            enum:
                                                - open
                                                - closed
                                            minLength: 1
                                            type: string
                                    required:
                                        - name
                                        - state
                                    type: object
                                statusID:
                                    description: Unique numeric ID of a status.
                                    type: integer
                                statusNotes:
                                    description: Status update notes.
                                    minLength: 1
                                    nullable: true
                                    type: string
                                type:
                                    description: "Voting type for this idea: up-only or up and down."
                                    enum:
                                        - up
                                        - up-down
                                    minLength: 1
                                    type: string
                            required:
                                - statusNotes
                                - statusID
                                - status
                                - type
                            type: object
                            x-addon: ideation
                    type: object
                body:
                    description: The body of the discussion.
                    minLength: 1
                    type: string
                bookmarked:
                    description: Whether or not the discussion is bookmarked by the current user.
                    type: boolean
                category:
                    $ref: "#/components/schemas/CategoryFragment"
                categoryID:
                    description: The category the discussion is in.
                    type: integer
                closed:
                    description: Whether the discussion is closed or open.
                    type: boolean
                countComments:
                    description: The number of comments on the discussion.
                    type: integer
                countUnread:
                    description: The number of unread comments.
                    type: integer
                countViews:
                    description: The number of views on the discussion.
                    type: integer
                dateInserted:
                    description: When the discussion was created.
                    format: date-time
                    type: string
                dateUpdated:
                    description: When the discussion was last updated.
                    format: date-time
                    nullable: true
                    type: string
                dateLastComment:
                    description: The date of the last comment or the original discussion date if it has no comments.
                    type: string
                    format: date-time
                discussionID:
                    description: The ID of the discussion.
                    type: integer
                groupID:
                    x-addon: groups
                    description: The group the discussion is in.
                    nullable: true
                    type: integer
                image:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/MainImage"
                insertUser:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                insertUserID:
                    description: The user that created the discussion.
                    type: integer
                lastPost:
                    $ref: "#/components/schemas/PostFragment"
                lastUserID:
                    type: integer
                    description: The last user to post in the discussion.
                lastUser:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                name:
                    description: The title of the discussion.
                    minLength: 1
                    type: string
                pinLocation:
                    description: >-
                        The location for the discussion, if pinned. "category" are pinned to
                        their own category. "recent" are pinned to the recent discussions
                        list, as well as their own category.
                    enum:
                        - category
                        - recent
                    minLength: 1
                    nullable: true
                    type: string
                pinned:
                    description: Whether or not the discussion has been pinned.
                    type: boolean
                reactions:
                    items:
                        properties:
                            class:
                                minLength: 1
                                type: string
                            count:
                                type: integer
                            name:
                                minLength: 1
                                type: string
                            tagID:
                                type: integer
                            urlcode:
                                minLength: 1
                                type: string
                        required:
                            - tagID
                            - urlcode
                            - name
                            - class
                            - count
                        type: object
                    type: array
                    x-addon: reactions
                score:
                    description: Total points associated with this post.
                    nullable: true
                    type: integer
                sink:
                    description: Whether or not the discussion has been sunk.
                    type: boolean
                type:
                    description: The type of this discussion if any.
                    minLength: 1
                    nullable: true
                    type: string
                unread:
                    description: Whether or not the discussion should have an unread indicator.
                    type: boolean
                url:
                    description: The full URL to the discussion.
                    type: string
                resolved:
                    x-addon: resolved2
                    description: Whether or not the discussion should has been resolved.
                    type: boolean
            required:
                - discussionID
                - type
                - name
                - body
                - categoryID
                - dateInserted
                - dateUpdated
                - insertUserID
                - pinLocation
                - closed
                - sink
                - countComments
                - countViews
                - score
                - bookmarked
                - unread
                - attributes
            type: object
        DiscussionGetEdit:
            properties:
                body:
                    description: The body of the discussion.
                    minLength: 1
                    type: string
                categoryID:
                    description: The category the discussion is in.
                    type: integer
                closed:
                    description: Whether the discussion is closed or open.
                    type: boolean
                discussionID:
                    description: The ID of the discussion.
                    type: integer
                format:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/Format"
                groupID:
                    x-addon: groups
                    description: The group the discussion is in.
                    nullable: true
                    type: integer
                name:
                    description: The title of the discussion.
                    minLength: 1
                    type: string
                pinLocation:
                    description: |
                        The location for the discussion, if pinned. "category" are pinned to their own category.
                        "recent" are pinned to the recent discussions list, as well as their own category.
                    enum:
                        - category
                        - recent
                    minLength: 1
                    nullable: true
                    type: string
                pinned:
                    description: Whether or not the discussion has been pinned.
                    type: boolean
                sink:
                    description: Whether or not the discussion has been sunk.
                    type: boolean
            required:
                - discussionID
                - name
                - body
                - format
                - categoryID
                - sink
                - closed
                - pinned
                - pinLocation
            type: object
        DiscussionPost:
            properties:
                body:
                    description: The body of the discussion.
                    minLength: 1
                    type: string
                categoryID:
                    description: The category the discussion is in.
                    type: integer
                closed:
                    description: Whether the discussion is closed or open.
                    type: boolean
                format:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/Format"
                groupID:
                    x-addon: groups
                    description: The group the discussion is in.
                    nullable: true
                    type: integer
                name:
                    description: The title of the discussion.
                    minLength: 1
                    type: string
                pinLocation:
                    description: >-
                        The location for the discussion, if pinned. "category" are pinned to
                        their own category. "recent" are pinned to the recent discussions
                        list, as well as their own category.
                    enum:
                        - category
                        - recent
                    minLength: 1
                    nullable: true
                    type: string
                pinned:
                    description: Whether or not the discussion has been pinned.
                    type: boolean
                sink:
                    description: Whether or not the discussion has been sunk.
                    type: boolean
                resolved:
                    x-addon: resolved2
                    description: Whether or not the discussion should has been resolved.
                    type: boolean
            required:
                - name
                - body
                - format
            type: object
        DiscussionPatch:
            properties:
                body:
                    description: The body of the discussion.
                    minLength: 1
                    type: string
                categoryID:
                    description: The category the discussion is in.
                    type: integer
                closed:
                    description: Whether the discussion is closed or open.
                    type: boolean
                format:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/Format"
                groupID:
                    x-addon: groups
                    description: The group the discussion is in.
                    nullable: true
                    type: integer
                name:
                    description: The title of the discussion.
                    minLength: 1
                    type: string
                pinLocation:
                    description: >-
                        The location for the discussion, if pinned. "category" are pinned to
                        their own category. "recent" are pinned to the recent discussions
                        list, as well as their own category.
                    enum:
                        - category
                        - recent
                    minLength: 1
                    nullable: true
                    type: string
                pinned:
                    description: Whether or not the discussion has been pinned.
                    type: boolean
                sink:
                    description: Whether or not the discussion has been sunk.
                    type: boolean
                resolved:
                    x-addon: resolved2
                    description: Whether or not the discussion should has been resolved.
                    type: boolean
            type: object
        PostFragment:
            properties:
                discussionID:
                    description: The discussion ID of the post.
                    type: integer
                commentID:
                    description: "The comment ID of the post, if any."
                    type: integer
                name:
                    description: The title of the post.
                    minLength: 1
                    type: string
                body:
                    description: The HTML formatted body of the post.
                    type: string
                url:
                    description: The URL of the post.
                    minLength: 1
                    type: string
                dateInserted:
                    description: The date of the post.
                    format: date-time
                    type: string
                insertUser:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                insertUserID:
                    description: The author of the post.
                    type: integer
            required:
                - name
                - url
                - dateInserted
                - insertUserID
            type: object
