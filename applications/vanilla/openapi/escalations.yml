openapi: 3.0.2
info:
x-resourceEvents:
    escalation:
        x-addon: "vanilla"
        name: "Escalation"
        type: "cmdEscalation"
paths:
    /escalations:
        post:
            tags: ["Reports & Escalations"]
            summary: Create an Escalation
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/EscalationInsert"
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Escalation"

        get:
            tags:
                - Reports & Escalations
            summary: Get a list of escalations
            parameters:
                - name: escalationID
                  description: Filter by a range or CSV of discussion escalationIDs.
                  in: query
                  schema:
                      $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/RangeExpression"
                - name: recordType
                  in: query
                  schema:
                      type: string
                      enum: ["discussion", "comment"]
                - name: recordID
                  description: Filter by a range or CSV of discussion recordIDs.
                  in: query
                  schema:
                      $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/RangeExpression"
                - name: placeRecordType
                  in: query
                  schema:
                      type: string
                      enum: ["category"]
                - name: placeRecordID
                  description: Filter by a range or CSV of category placeRecordIDs.
                  in: query
                  schema:
                      $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/RangeExpression"
                - name: status
                  description: Filter by one or more statuses (CSV & array supported).
                  in: query
                  schema:
                      type: array
                      items:
                          type: string
                          enum:
                              - open
                              - in-progress
                              - on-hold
                              - external-zendesk
                              - done
                - name: assignedUserID
                  description: Filter by a range or CSV of assigned userIDs.
                  in: query
                  schema:
                      $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/RangeExpression"
                - name: recordUserID
                  description: Filter by a range or CSV of users who created the content that was escalated.
                  in: query
                  schema:
                      $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/RangeExpression"
                - name: recordUserRoleID
                  description: Filter by a range or CSV of users' roles who created the content that was escalated.
                  in: query
                  schema:
                      $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/RangeExpression"
                - name: reportReasonID
                  description: Filter by a report reason. Multiple reasonIDs can be passed in a CSV or array.
                  in: query
                  schema:
                      type: string
                - $ref: "../../dashboard/openapi/parameters.yml#/components/parameters/Page"
                - description: |
                      Desired number of items per page.
                  in: query
                  name: limit
                  schema:
                      type: integer
                      default: 100
                      maximum: 500
                      minimum: 1
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Escalation"
    /escalations/:escalationID:
        get:
            tags:
                - Reports & Escalations
            summary: Get an escalation
            parameters:
                - name: escalationID
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Escalation"
        patch:
            tags:
                - Reports & Escalations
            summary: Update an escalation
            parameters:
                - name: escalationID
                  in: path
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/EscalationPatch"
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Escalation"
    /escalations/lookup-assignee:
        get:
            summary: Search for users that could be assigned to an escalation by full or partial name matching.
            parameters:
                - name: escalationID
                  description: If passed will filter to potential assignees for this specific escalation.
                  in: query
                  required: true
                  schema:
                      type: integer
                - description: >
                      Filter for username. Supports full or partial matching with
                      appended wildcard (e.g. User*).
                  in: query
                  name: name
                  required: true
                  schema:
                      minLength: 1
                      type: string
                - description: |
                      Page number. See [Pagination](https://docs.vanillaforums.com/apiv2/#pagination).
                  in: query
                  name: page
                  schema:
                      type: integer
                      default: 1
                      minimum: 1
                - description: |
                      Desired number of items per page.
                  in: query
                  name: limit
                  schema:
                      type: integer
                      default: 30
                      maximum: 100
                      minimum: 1
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                items:
                                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                                type: array
                    description: Success
            tags:
                - Reports & Escalations
components:
    schemas:
        EscalationPatch:
            type: object
            properties:
                # Remove / Restore the post.
                recordIsLive:
                    type: boolean
                    description: If false, remove the post from the frontend.
                assignedUserID:
                    type: integer
                    description: ID of the user to assign the escalation to. The user must have the "post.moderate" permission in the records category. -4 indicates "unassigned".
                status:
                    type: string
                    description: Status of the escalation.
                    enum:
                        - open
                        - in-progress
                        - on-hold
                        - external-zendesk
                        - done
        EscalationInsert:
            type: object
            properties:
                name:
                    description: Name for the escalation.
                    type: string
                status:
                    type: string
                    description: Status of the escalation.
                    enum:
                        - open
                        - in-progress
                        - on-hold
                        - external-zendesk
                        - done
                assignedUserID:
                    description: ID of the user assigned to the escalation. -4 indicates "unassigned".
                    type: integer
                recordType:
                    description: Type of record being reported.
                    type: string
                    enum: ["discussion", "comment"]
                recordID:
                    description: ID of the record being reported.
                    type: integer

                # Use an existing report.
                reportID:
                    description: ID of the report being escalated.
                    type: integer

                # Used if creating a report inline.
                reportReasonIDs:
                    description: One or more reasons for the report. Used if reportID is not provided.
                    type: array
                    items:
                        type: string
                    example: ["spam", "abuse"]
                noteBody:
                    description: Additional information about the report.
                    type: string
                noteFormat:
                    description: Format of the note field.
                    type: string

                # Delete the post at the same time
                recordIsLive:
                    type: boolean
                    description: If false, remove the post from the frontend.

                initialCommentBody:
                    type: string
                    description: Create an initial comment on the escalation.
                initialCommentFormat:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/Format"
            required:
                - name
                - recordType
                - recordID
        Escalation:
            type: object
            properties:
                # Information about the record
                name:
                    description: Title of the escalation.
                    type: string
                url:
                    description: HTML url of the escalation.
                    type: string
                    format: uri
                status:
                    type: string
                    description: Status of the escalation.
                    enum:
                        - open
                        - in-progress
                        - on-hold
                        - external-zendesk
                        - done
                assignedUserID:
                    description: ID of the user assigned to the escalation. -4 indicates "unassigned".
                    type: integer
                assignedUser:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                recordType:
                    description: Type of record being reported.
                    type: string
                    enum: ["discussion", "comment"]
                recordID:
                    description: ID of the record being reported.
                    type: integer
                recordUrl:
                    description: URL of the record being reported.
                    type: string
                recordIsLive:
                    description: Whether the record still exists.
                    type: boolean
                recordWasEdited:
                    description: Whether the record was edited after the report was made.
                    type: boolean
                placeRecordType:
                    description: Type of record the reported record is placed in.
                    type: string
                    enum: ["category"]
                placeRecordID:
                    description: ID of the record the reported record is placed in.
                    type: integer
                placeRecordName:
                    description: Name of the record the reported record is placed in.
                    type: string
                placeRecordUrl:
                    description: URL of the record the reported record is placed in.
                    type: string
                    format: uri

                # Triage contents
                reportReasons:
                    description: Full report reasons
                    type: array
                    items:
                        $ref: "./reports.yml#/components/schemas/ReportReasonFragment"
                countReports:
                    description: The number of reports made about this record.
                    type: integer
                countReportUsers:
                    description: The number of unique users who have reported this record.
                    type: integer
                reportUserIDs:
                    description: The IDs of the users who have reported this record.
                    type: array
                    items:
                        type: integer
                reportUsers:
                    description: The users who have reported this record.
                    type: array
                    items:
                        $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                dateLastReport:
                    description: The date of the most recent report made about this record.
                    type: string
                    format: date-time
            required:
                - name
                - status
                - recordType
                - recordID
                - recordName
                - recordUrl
                - recordIsLive
                - recordWasEdited
                - recordUserID
                - recordDateInserted
                - placeRecordType
                - placeRecordID
                - reportReasons
                - countReportUsers
                - countReports
                - reportUserIDs
                - reportUsers
