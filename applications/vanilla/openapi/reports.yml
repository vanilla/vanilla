openapi: 3.0.2
info:
x-resourceEvents:
    report:
        x-addon: "vanilla"
        name: "Report"
        type: "report"
paths:
    /reports:
        post:
            tags: ["Reports & Escalations"]
            summary: Create a report
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ReportInsert"
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Report"

        get:
            tags:
                - Reports & Escalations
            summary: Get a list of reports
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Report"
            parameters:
                - name: recordType
                  in: query
                  schema:
                      type: string
                      enum: ["discussion", "comment"]
                - name: reportReasonID
                  description: Filter by a report reason. Multiple reasonIDs can be passed in a CSV or array.
                  in: query
                  schema:
                      type: string
                - name: recordID
                  description: Filter by a range or CSV of discussion recordIDs.
                  in: query
                  schema:
                      $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/RangeExpression"
                - name: placeRecordType
                  in: query
                  schema:
                      type: string
                      enum: ["category"]
                - name: placeRecordID
                  description: Filter by a range or CSV of category placeRecordIDs.
                  in: query
                  schema:
                      $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/RangeExpression"
                - name: insertUserID
                  description: Filter by a range or CSV of users that made the report.
                  in: query
                  schema:
                      $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/RangeExpression"
                - name: insertUserRoleID
                  description: Filter by a range or CSV of users' roles that made the report.
                  in: query
                  schema:
                      $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/RangeExpression"
                - name: recordUserID
                  description: Filter by a range or CSV of users who's content was reported.
                  in: query
                  schema:
                      $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/RangeExpression"
                - name: status
                  description: Filter by one or more statuses (CSV & array supported).
                  in: query
                  schema:
                      type: array
                      default:
                          - new
                      items:
                          type: string
                          enum:
                              - new
                              - escalated
                              - dismissed
                - $ref: "../../dashboard/openapi/parameters.yml#/components/parameters/Page"
                - description: |
                      Desired number of items per page.
                  in: query
                  name: limit
                  schema:
                      type: integer
                      default: 100
                      maximum: 500
                      minimum: 1
    /reports/:reportID/approve-record:
        parameters:
            - name: reportID
              in: path
              required: true
              schema:
                  type: integer
        patch:
            tags:
                - Reports & Escalations
            summary: Approve a pending or removed post that was premoderated.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                verifyRecordUser:
                                    type: boolean
                                    description: If true mark the user as verified.
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Report"
    /reports/:reportID/reject-record:
        parameters:
            - name: reportID
              in: path
              required: true
              schema:
                  type: integer
        patch:
            tags:
                - Reports & Escalations
            summary: Reject a pending or live post that was premoderated and ensure it is deleted.
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Report"
    /reports/:reportID/dismiss:
        parameters:
            - name: reportID
              in: path
              required: true
              schema:
                  type: integer
        post:
            tags:
                - Reports & Escalations
            summary: Dismiss a user's report.
            responses:
                "204":
                    description: No Content
    /report-reasons:
        get:
            tags:
                - Reports & Escalations
            summary: Get a list of report reasons for the current sessioned user. `community.manage` permission grants permission to all reasons.
            parameters:
                - name: includeDeleted
                  description: Allow selecting deleted reports. Requires `moderation.manage` permission.
                  in: query
                  schema:
                      type: boolean
                      default: false
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/ReportReason"
        post:
            tags:
                - Reports & Escalations
            summary: Create a report reason
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ReportReasonPost"
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ReportReason"
                "409":
                    description: Conflict. Returned if the reportReasonID already exists.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: "Report reason already exists."
                                    code:
                                        type: number
                                        example: 409
                                    conflictingReason:
                                        $ref: "#/components/schemas/ReportReason"
    /report-reasons/:reportReasonID:
        get:
            tags:
                - Reports & Escalations
            summary: Get a report reason if you have permission for it.
            parameters:
                - name: reportReasonID
                  in: path
                  required: true
                  schema:
                      type: integer
                - name: includeDeleted
                  description: Allow selecting deleted reports. Requires `moderation.manage` permission.
                  in: query
                  schema:
                      type: boolean
                      default: false
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ReportReason"
                "404":
                    description: Not Found. Also returned if there is no permission to not leak reasonIDs.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: "Report reason not found."
        patch:
            tags:
                - Reports & Escalations
            summary: Update a report reason
            parameters:
                - name: reportReasonID
                  in: path
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ReportReasonPost"
            responses:
                "201":
                    description: Updated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ReportReason"
        delete:
            tags:
                - Reports & Escalations
            summary: Delete a report reason. If the report has already been used, the reason will be marked as deleted but still exist in the underyling system for usage when viewing existing reports.
            parameters:
                - name: reportID
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                "204":
                    description: No Content
    /report-reasons/sorts:
        put:
            tags:
                - Reports & Escalations
            summary: Update the sort order of report reasons
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            description: Mapping of reportReasonID to new sorts.
                            example:
                                "spam": 1
                                "abuse": 2
                                "sexual-content": 3
            responses:
                "204":
                    description: No Content
    /reports/:reportID:
        get:
            tags:
                - Reports & Escalations
            summary: Get a report
            parameters:
                - name: reportID
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Report"
    /reports/automation:
        get:
            tags:
                - Reports & Escalations
            summary: List of Posts that where reported set number of times.
            parameters:
                - name: countReports
                  in: query
                  required: true
                  schema:
                      type: integer
                      default: 1
                - name: reportReasonID
                  in: query
                  required: false
                  schema:
                      type: string
                - name: placeRecordID
                  description: Filter by a range or CSV of category placeRecordIDs.
                  in: query
                  schema:
                      $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/RangeExpression"
                - name: includeSubcategories
                  description: Include reports from subcategories.
                  in: query
                  schema:
                      type: boolean
                      default: false
                - $ref: "../../dashboard/openapi/parameters.yml#/components/parameters/Page"
                - description: |
                      Desired number of items per page.
                  in: query
                  name: limit
                  schema:
                      type: integer
                      default: 100
                      maximum: 500
                      minimum: 1
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/ReportCounter"
components:
    schemas:
        ReportReasonFragment:
            type: object
            properties:
                reportReasonID:
                    type: string
                name:
                    type: string
                description:
                    type: string
                sort:
                    type: integer
                reportID:
                    type: integer
                deleted:
                    type: boolean
            required: ["reportReasonID", "name", "description", "sort", "deleted"]
        ReportReason:
            type: object
            properties:
                reportReasonID:
                    type: string
                name:
                    type: string
                description:
                    type: string
                dateInserted:
                    type: string
                    format: date-time
                dateUpdated:
                    type: string
                    format: date-time
                insertUserID:
                    type: integer
                updateUserID:
                    type: integer
                sort:
                    type: integer
                roleIDs:
                    type: array
                    items:
                        type: integer
                roles:
                    type: array
                    items:
                        type: object
                        properties:
                            roleID:
                                type: integer
                            name:
                                type: string
                deleted:
                    type: boolean
                countReports:
                    type: integer
                    description: The number of reports that have used this reason. Only available with `community.manage` permission.
            required:
                - reportReasonID
                - name
                - description
                - dateInserted
                - insertUserID
                - sort
                - deleted
        ReportReasonPost:
            type: object
            properties:
                reportReasonID:
                    type: string
                name:
                    type: string
                description:
                    type: string
                sort:
                    type: integer
                roleIDs:
                    type: array
                    items:
                        type: integer
            required:
                - reportReasonID
                - name
                - description
                - roleIDs
        ReportReasonPatch:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                sort:
                    type: integer
                roleIDs:
                    type: array
                    items:
                        type: integer
        ReportInsert:
            type: object
            properties:
                recordType:
                    description: Type of record being reported.
                    type: string
                    enum: ["discussion", "comment"]
                recordID:
                    description: ID of the record being reported.
                    type: integer
                reportReasonIDs:
                    description: One or more reasons for the report.
                    type: array
                    items:
                        type: string
                    example: ["spam", "abuse"]
                noteBody:
                    description: Additional information about the report.
                    type: string
                noteFormat:
                    description: Format of the note field.
                    type: string
            required:
                - recordType
                - recordID
                - reportReasonIDs
                - noteBody
                - noteFormat
        TriageRecord:
            type: object
            properties:
                # Information about the record
                recordType:
                    description: Type of record being reported.
                    type: string
                    enum: ["discussion", "comment"]
                recordID:
                    description: ID of the record being reported.
                    type: integer
                recordName:
                    description: Name of the record being reported.
                    type: string
                recordHtml:
                    description: Rendered HTML contents of the reported record.
                    type: string
                recordExcerpt:
                    description: Excerpt of the reported record.
                    type: string
                recordUrl:
                    description: URL of the record being reported.
                    type: string
                recordIsLive:
                    description: Whether the record still exists.
                    type: boolean
                recordWasEdited:
                    description: Whether the record was edited after the report was made.
                    type: boolean
                placeRecordType:
                    description: Type of record the reported record is placed in.
                    type: string
                    enum: ["category"]
                placeRecordID:
                    description: ID of the record the reported record is placed in.
                    type: integer
                placeRecordName:
                    description: Name of the record the reported record is placed in.
                    type: string
                placeRecordUrl:
                    description: URL of the record the reported record is placed in.
                    type: string
                    format: uri
                recordUserID:
                    description: ID of the user who made the reported record.
                    type: integer
                recordUser:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                recordDateInserted:
                    type: string
                    format: date-time
                recordDateUpdated:
                    type: string
                    format: date-time

                # Triage contents
                reportReasons:
                    description: Full report reasons
                    type: array
                    items:
                        $ref: "#/components/schemas/ReportReasonFragment"
                countReports:
                    description: The number of reports made about this record.
                    type: integer
                countReportUsers:
                    description: The number of unique users who have reported this record.
                    type: integer
                reportUserIDs:
                    description: The IDs of the users who have reported this record.
                    type: array
                    items:
                        type: integer
                reportUsers:
                    description: The users who have reported this record.
                    type: array
                    items:
                        $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                dateLastReport:
                    description: The date of the most recent report made about this record.
                    type: string
                    format: date-time
            required:
                - recordType
                - recordID
                - recordName
                - recordHtml
                - recordUrl
                - recordIsLive
                - recordWasEdited
                - recordUserID
                - recordDateInserted
                - placeRecordType
                - placeRecordID
                - reportReasons
                - countReportUsers
                - countReports
                - reportUserIDs
                - reportUsers
        ReportMeta:
            type: object
            properties:
                reportsReasons:
                    type: array
                    description: Report reasons.
                    items:
                        $ref: "#/components/schemas/ReportReasonFragment"
                reportUserIDs:
                    description: User IDs that have reported this post.
                    type: array
                    items:
                        type: integer
                reportUsers:
                    description: Users that have reported this post.
                    type: array
                    items:
                        $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                countReportUsers:
                    description: The number of users that have reported this post.
                    type: number
                dateLastReport:
                    description: The date of the last report on the post.
                    type: string
                    format: date-time
                countReports:
                    type: integer
                    default: 0
                    description: The number of reports on the post.
        ReportCounter:
            type: object
            properties:
                # Information about the record
                recordType:
                    description: Type of record being reported.
                    type: string
                    enum: ["discussion", "comment"]
                recordID:
                    description: ID of the record being reported.
                    type: integer
                recordName:
                    description: Name of the record being reported.
                    type: string
                recordHtml:
                    description: Rendered HTML contents of the reported record.
                    type: string
                placeRecordType:
                    description: Type of record the reported record is placed in.
                    type: string
                    enum: ["category"]
                placeRecordID:
                    description: ID of the record the reported record is placed in.
                    type: integer
                placeRecordName:
                    description: Name of the record the reported record is placed in.
                    type: string

                # Report contents
                reportReasons:
                    description: Full report reasons
                    type: array
                    items:
                        $ref: "#/components/schemas/ReportReasonFragment"
            required:
                - recordType
                - recordID
                - recordName
                - recordHtml
                - placeRecordType
                - placeRecordID
                - placeRecordName
                - reportReasonIDs

        Report:
            type: object
            properties:
                reportID:
                    type: integer

                # Information about the record
                recordType:
                    description: Type of record being reported.
                    type: string
                    enum: ["discussion", "comment"]
                recordID:
                    description: ID of the record being reported.
                    type: integer
                recordName:
                    description: Name of the record being reported.
                    type: string
                recordHtml:
                    description: Rendered HTML contents of the reported record.
                    type: string
                recordExcerpt:
                    description: Excerpt of the reported record.
                    type: string
                recordUrl:
                    description: URL of the record being reported.
                    type: string
                recordIsLive:
                    description: Whether the record still exists.
                    type: boolean
                recordWasEdited:
                    description: Whether the record was edited after the report was made.
                    type: boolean
                placeRecordType:
                    description: Type of record the reported record is placed in.
                    type: string
                    enum: ["category"]
                placeRecordID:
                    description: ID of the record the reported record is placed in.
                    type: integer
                placeRecordName:
                    description: Name of the record the reported record is placed in.
                    type: string
                placeRecordUrl:
                    description: URL of the record the reported record is placed in.
                    type: string
                    format: uri
                recordUserID:
                    description: ID of the user who made the reported record.
                    type: integer
                recordUser:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                recordDateInserted:
                    type: string
                    format: date-time
                recordDateUpdated:
                    type: string
                    format: date-time
                isPending:
                    description: Whether the reported content is a pending post (Eg. premoderation report).
                    type: boolean
                isPendingUpdate:
                    description: Whether the reported content is a pending update for a post that was live.
                    type: boolean

                # Report contents
                reportReasons:
                    description: Full report reasons
                    type: array
                    items:
                        $ref: "#/components/schemas/ReportReasonFragment"
                noteHtml:
                    type: string
                    description: Additional information about the report in HTML format.

                # User Info
                insertUserID:
                    description: ID of the user making the report.
                    type: integer
                insertUser:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                reportedUserID:
                    description: ID of the user being reported.
                    type: integer
                reportedUser:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"

                updateUserID:
                    description: ID of the user who last updated the report.
                    type: integer
                updateUser:
                    $ref: "../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment"
                dateInserted:
                    description: Date the report was made.
                    type: string
                    format: date-time
                dateUpdated:
                    description: Date the report was last updated.
                    type: string
                    format: date-time
            required:
                - reportID
                - recordType
                - recordID
                - recordName
                - recordHtml
                - recordUrl
                - recordIsLive
                - recordWasEdited
                - recordUserID
                - recordDateInserted
                - placeRecordType
                - placeRecordID
                - reportReasonIDs
                - insertUserID
                - reportedUserID
                - updateUserID
                - dateInserted
                - dateUpdated
                - noteHtml
