openapi: 3.0.2
info:
paths:
    /tags:
        get:
            parameters:
                - name: query
                  description: The search term to find a tag.
                  in: query
                  schema:
                      type: string
                - name: tagID
                  description: The ID of the tag to find.
                  in: query
                  schema:
                      type: array
                      items:
                          type: integer
                  style: form
                - name: type
                  description: The type of tags to list.
                  in: query
                  schema:
                      type: array
                      items:
                          type: string
                  style: form
                - name: parentID
                  description: ID of parent to filter results.
                  in: query
                  schema:
                      type: array
                      items:
                          type: integer
                  style: form
                - name: excludeNoCountDiscussion
                  description: Filter results by tagged discussion
                  in: query
                  schema:
                      type: boolean
                  style: form
                - $ref: "../../dashboard/openapi/parameters.yml#/components/parameters/Page"
                - description: Desired number of tags per page.
                  in: query
                  name: limit
                  schema:
                      type: integer
                      default: 20
                      minimum: 1
            responses:
                "200":
                    content:
                        "application/json":
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/LegacyTag"
                    description: Success
            tags:
                - Tags
            summary: List tags.
        post:
            summary: Add a tag.
            tags:
                - Tags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Tag"
            responses:
                "200":
                    description: Success.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Tag"
                "401":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/PermissionError"
                "404":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/NotFound"
    /tags/{id}:
        parameters:
            - name: id
              description: The ID of the tag.
              in: path
              required: true
              schema:
                  type: integer
        get:
            summary: Get a single tag.
            tags:
                - Tags
            responses:
                "200":
                    description: Success.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Tag"
                "401":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/PermissionError"
                "404":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/NotFound"
        patch:
            summary: Update a tag.
            tags:
                - Tags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Tag"
            responses:
                "200":
                    description: Success.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Tag"
                "401":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/PermissionError"
                "404":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/NotFound"
        delete:
            summary: Delete a tag.
            tags:
                - Tags
            responses:
                "204":
                    description: Success.
                "401":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/PermissionError"
                "404":
                    $ref: "../../dashboard/openapi/responses.yml#/components/responses/NotFound"
                "409":
                    description: Tag isn't empty.
                    content:
                        application/json:
                            schema:
                                $ref: "../../dashboard/openapi/responses.yml#/components/schemas/BasicError"
components:
    schemas:
        TagFragment:
            description: A tag that can be applied to content.
            type: object
            properties:
                tagID:
                    type: integer
                    description: The ID of the tag.
                    readOnly: true
                urlcode:
                    type: string
                    description: The URL slug of the tag.
                name:
                    type: string
                    nullable: true
                    description: The full name of the tag.
            required:
                - tagID
                - urlcode
                - name
        Tag:
            description: A full tag.
            allOf:
                - $ref: "#/components/schemas/TagFragment"
                - type: object
                  properties:
                      parentTagID:
                          type: integer
                          description: The parent ID of the tag.
                          nullable: true
                      type:
                          type: string
                          nullable: true
                          default: null
                          description: The tag type.
                - $ref: "../../dashboard/openapi/columns.yaml#/components/schemas/InsertInfo"

        LegacyTag:
            description: A backwards compatible tag.
            allOf:
                - $ref: "#/components/schemas/TagFragment"
                - type: object
                  properties:
                      id:
                          type: integer
                          description: The ID of the tag.
                          deprecated: true
                      urlCode:
                          description: The url-code of the tag.
                          type: string
                          deprecated: true
                      parentTagID:
                          type: integer
                          description: The parent ID of the tag.
                          nullable: true
                      url:
                          type: string
                          description: URL to view items tagged with this tag.
                  required:
                      - id
                      - urlCode
                      - parentTagID
        TagReference:
            description: A reference to a tag for assignment to other items.
            type: object
            properties:
                tagIDs:
                    type: array
                    items:
                        type: integer
                    description: You can specify the name of the tag.
                urlcodes:
                    type: array
                    items:
                        type: string
                    description: You can also specify the url code of the tag.
