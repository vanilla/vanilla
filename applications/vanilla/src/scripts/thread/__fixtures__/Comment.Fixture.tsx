/**
 * @author Maneesh Chiba <mchiba@higherlogic.com>
 * @copyright 2009-2024 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

import { UserFixture } from "@library/features/__fixtures__/User.fixture";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { ReactNode } from "react";
import { render } from "@testing-library/react";
import React from "react";
import { ICoreStoreState } from "@library/redux/reducerRegistry";
import { IComment } from "@dashboard/@types/api/comment";
import { CurrentUserContextProvider } from "@library/features/users/userHooks";
import { TestReduxProvider } from "@library/__tests__/TestReduxProvider";

export class CommentFixture {
    public static mockComment: IComment = {
        commentID: 999999,
        discussionID: 999999,
        insertUser: UserFixture.createMockUser({ userID: 1 }),
        insertUserID: 1,
        dateInserted: "2020-10-06T15:30:44+00:00",
        dateUpdated: "2020-10-06T15:30:44+00:00",
        score: 999,
        url: "https://vanillaforums.com/discussion/comment/999999#Comment_999999",
        attributes: {},
        body: "This content is generated by users on the site. You can't update it here.",
        name: "This content is generated by users on the site. You can't update it here.",
    };

    public static comment(partial: Partial<IComment>): IComment {
        return {
            ...this.mockComment,
            ...partial,
        };
    }

    public static wrapInProvider = async (children: ReactNode, enableNetworkRequests?: boolean) => {
        const queryClient = new QueryClient({
            defaultOptions: {
                queries: {
                    enabled: enableNetworkRequests ?? false,
                    retry: false,
                },
            },
        });

        render(
            <TestReduxProvider>
                <CurrentUserContextProvider currentUser={this.mockComment.insertUser}>
                    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>
                </CurrentUserContextProvider>
            </TestReduxProvider>,
        );
        await vi.dynamicImportSettled();
    };
}
