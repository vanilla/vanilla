# Example App formatted message
# 2023-01-25T17:59:40.337872+00:00 947025d3702c php: $json:{"tags":["uncaught","source-exceptionHandler","throwable","Gdn_UserException"],"event":null,"channel":"channel-php","targetUserID":null,"targetName":"anonymous","userID":0,"username":"anonymous","timers":null,"data":[],"_schema":"v2","site":{"version":"2023.002-SNAPSHOT","siteID":-1,"accountID":-1},"request":{"hostname":"dev.vanilla.localhost","method":"GET","path":"/demo","protocol":"http","url":"http://dev.vanilla.localhost/demo","clientIP":"192.168.96.1","requestID":"0a06a304-9cda-11ed-ada5-0242c0a86006","country":null},"message":"Table 'vanilla_dev.GDN_Permission' doesn't exist","level":"error","stacktrace":"/library/database/class.sqldriver.php (2015)\n/library/database/class.mysqldriver.php (241)\n/library/database/class.mysqldriver.php (211)\n/unknown (0)\n/library/Vanilla/Models/ModelCache.php (166)\n/vendor/symfony/cache/Traits/ContractsTrait.php (54)\n/vendor/symfony/cache/Traits/ContractsTrait.php (100)\n/vendor/symfony/cache-contracts/CacheTrait.php (72)\n/vendor/symfony/cache/Traits/ContractsTrait.php (107)\n/vendor/symfony/cache-contracts/CacheTrait.php (35)\n/library/Vanilla/Models/ModelCache.php (170)\n/library/database/class.mysqldriver.php (215)\n/library/core/class.schema.php (64)\n/library/core/class.schema.php (36)\n/library/core/class.model.php (287)\n/applications/dashboard/models/class.permissionmodel.php (89)\n/applications/dashboard/models/class.permissionmodel.php (77)\n/library/core/class.session.php (473)\n/library/core/class.auth.php (66)\n/bootstrap.php (651)\n/index.php (23)"}

# Example early or fatal
# 2023-01-27T17:19:33.331743+00:00 e807653c3450 php: PHP Fatal error:  Uncaught Error: Using $this when not in object context in /srv/vanilla-repositories/vanilla/docker/bootstrap.docker.php:28#012Stack trace:#012#0 /srv/vanilla-repositories/vanilla/docker/bootstrap.docker.queue.php(3): require_once()#012#1 /srv/vanilla-repositories/vanilla/bootstrap.php(543): require_once('/srv/vanilla-re...')#012#2 [internal function]: {closure}(Object(Garden\Container\Container), Object(Vanilla\AddonManager), Object(Gdn_Request))#012#3 /srv/vanilla-repositories/vanilla/vendor/vanilla/garden-container/src/Container.php(318): call_user_func_array(Object(Closure), Array)#012#4 /srv/vanilla-repositories/vanilla/bootstrap.php(626): Garden\Container\Container->call(Object(Closure))#012#5 /srv/vanilla-repositories/vanilla/index.php(23): require_once('/srv/vanilla-re...')#012#6 {main}#012  thrown in /srv/vanilla-repositories/vanilla/docker/bootstrap.docker.php on line 28

# 2023-01-30T22:49:56.818232+00:00 3732f36e3f61 php: PHP Parse error:  syntax error, unexpected token "require_once" in /srv/vanilla-repositories/vanilla/index.php on line 19

###################################################
# VANILLA SYSLOG FILTER (product log into syslog) #
###################################################

input {
    udp {
        port => 10514
        tags => ["vanilla_syslog"]
    }
}

filter {
    if "vanilla_syslog" in [tags] {

        grok {
            match => {
                "message" => "(?:%{SYSLOGTIMESTAMP:[syslog][timestamp]}|%{TIMESTAMP_ISO8601:[syslog][timestamp]}) %{SYSLOGHOST:[syslog][host]} %{DATA:[syslog][source]}: ?%{GREEDYDATA:[syslog][message]}"
            }
            remove_field => ["message"]
            tag_on_failure => ["_failure_match"]
        }

        if [syslog][source] == "rsyslogd" {
            drop {}
        }

        grok {
            match => {
                "[syslog][message]" => "(?<logformat>\$%{WORD})?:?%{GREEDYDATA:[syslog][message]}"
            }
            overwrite => [ "[syslog][message]" ]
        }

        date {
            locale => "en"
            timezone => "UTC"
            match => [ "[syslog][timestamp]", "MMM d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
        }

        json {
            skip_on_invalid_json => true
            source => "[syslog][message]"
            target => "[vanilla]"
            remove_field => "[syslog][message]"
            add_tag => [ "_success_match" ]
            tag_on_failure => [ "_failure_json" ]
        }

        mutate {
            remove_field => "[event]"
            add_field => {
                "[@metadata][index_name]" => "vanilla"
            }
            merge => {
                "[tags]" => "[vanilla][tags]"
            }
        }

        if [vanilla][_schema] == "v2" {
            mutate {
                rename => {
                    "[vanilla][service]" => "[service]"
                    "[vanilla][message]" => "[message]"
                    "[vanilla][channel]" => "[channel]"
                    "[vanilla][level]" => "[level]"
                    "[vanilla][event]" => "[event]"
                    "[vanilla][site]" => "[site]"
                    "[vanilla][request]" => "[request]"
                    "[vanilla][data]" => "[data]"
                    "[vanilla][stacktrace]" => "[stacktrace]"
                    "[vanilla][trace]" => "[stacktrace]"
                    "[vanilla][level_name]" => "[level]"
                }
            }
            mutate {
                lowercase => [ "[level]" ]
            }
        } else {
            mutate {
                add_field => {
                    "[channel]" => "system"
                    "[level]" => "error"
                }
                rename => {
                    "[syslog][message]" => "[message]"
                }
            }
        }

        # Finish up siteID

        if ![site][siteID] {
            mutate {
                add_field => {
                    "[site][siteID]" => 0
                }
            }
        }

        mutate {
            remove_field => [ "[syslog]", "[vanilla][tags]" ]
        }
    }
}
