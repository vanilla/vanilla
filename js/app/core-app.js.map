{"version":3,"sources":["webpack:///webpack/bootstrap a618ebf69bf80da0106c","webpack:///external \"lib_core_app\"","webpack:///delegated ../vanilla-cli/src/NodeTools/node_modules/webpack/buildin/global.js from dll-reference lib_core_app","webpack:///./node_modules/lodash/isObject.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./src/scripts/app/core-app.js","webpack:///./src/scripts/emoji-utility.js","webpack:///./node_modules/twemoji/2/twemoji.npm.js","webpack:///delegated ./src/scripts/utility.ts from dll-reference lib_core_app","webpack:///./src/scripts/app/user-content.js","webpack:///delegated ./src/scripts/dom.ts from dll-reference lib_core_app","webpack:///./node_modules/lodash/debounce.js","webpack:///./node_modules/lodash/now.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/shave/dist/shave.es.js","webpack:///delegated ./src/scripts/application.ts from dll-reference lib_core_app"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","lib_core_app","value","type","freeGlobal","freeSelf","self","root","Function","Symbol","_emojiUtility","_userContent","onReady","parseDomForEmoji","setupEmbeds","setupSpoilers","isEmojiSupported","browserSupportsEmoji","parseEmoji","emojiChar","_twemoji2","default","parse","emojiOptions","domNode","arguments","length","undefined","document","body","utility","className","size","testChar","canvas","createElement","getContext","offset","window","devicePixelRatio","ctx","fillStyle","textBaseline","font","fillText","getImageData","data","emojiSupported","log","global","location","twemoji","createText","text","clean","createTextNode","replace","UFE0Fg","escapeHTML","rescaper","replacer","grabAllTextNodes","node","allText","subnode","nodeType","childNodes","push","shouldntBeParsed","test","nodeName","toLowerCase","grabTheRightIcon","rawText","toCodePoint","indexOf","U200D","escaper","returnNull","callback","String","re","unicodeSurrogates","sep","r","charCodeAt","toString","join","base","ext","convert","fromCodePoint","codepoint","code","parseInt","fromCharCode","onerror","this","parentNode","replaceChild","alt","what","how","str","options","attrib","attrname","ret","iconId","src","concat","attributes","modified","fragment","match","index","img","createDocumentFragment","nodeValue","exec","appendChild","slice","Image","setAttribute","hasAttribute","icon","folder","toSizeSquaredAsset","lastIndex","result","&","<",">","'","\"","protocol","truncateEmbeds","querySelectorAll","forEach","el","untruncatedText","_dom","getData","innerHTML","setData","truncateTextBasedOnMaxHeight","excerpt","maxHeight","getComputedStyle","_shave2","handlePlayVideo","HTMLElement","closest","dataset","url","handleToggleSpoiler","classList","toggle","delegateEvent","addEventListener","_debounce2","isObject","now","toNumber","FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","func","wait","invokeFunc","time","args","lastArgs","thisArg","lastThis","lastInvokeTime","apply","shouldInvoke","timeSinceLastCall","lastCallTime","maxing","maxWait","timerExpired","trailingEdge","timerId","setTimeout","timeWaiting","remainingWait","trailing","debounced","isInvoking","leading","leadingEdge","TypeError","cancel","clearTimeout","flush","Date","isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","other","valueOf","isBinary","baseGetTag","isObjectLike","symbolTag","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","objectProto","nativeObjectToString","isOwn","tag","unmasked","e","__webpack_exports__","target","opts","Error","els","character","classname","spaces","charHtml","styles","style","span","querySelector","textProp","textContent","removeChild","fullText","words","split","heightStyle","height","maxHeightStyle","offsetHeight","pivot","insertAdjacentHTML","diff"],"mappings":"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","file":"app/core-app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a618ebf69bf80da0106c","module.exports = lib_core_app;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib_core_app\"\n// module id = 0\n// module chunks = 0","module.exports = (__webpack_require__(0))(158);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ../vanilla-cli/src/NodeTools/node_modules/webpack/buildin/global.js from dll-reference lib_core_app\n// module id = 1\n// module chunks = 0","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isObject.js\n// module id = 2\n// module chunks = 0","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_root.js\n// module id = 3\n// module chunks = 0","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_Symbol.js\n// module id = 4\n// module chunks = 0","/**\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license GPLv2\n */\n\nimport { parseDomForEmoji } from \"@core/emoji-utility\";\nimport { setupEmbeds, setupSpoilers } from \"@core/app/user-content\";\n\nimport { onReady } from \"@core/application\";\n\nonReady(() => {\n    parseDomForEmoji();\n    setupEmbeds();\n    setupSpoilers();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/app/core-app.js","/**\n * @author Stéphane LaFlèche <stephane.l@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license GPLv2\n */\nimport twemoji from \"twemoji\";\nimport * as utility from \"@core/utility\";\n\nconst emojiOptions = {\n    className: \"fallBackEmoji\",\n    size: \"72x72\",\n};\n\n// Test Char for Emoji 5.0\nconst testChar = '\\uD83E\\uDD96'; // U+1F996 T-Rex -> update test character with new emoji version support.\n\nfunction emojiSupported() {\n    if (process.env.NODE_ENV !== 'test') { // Test environment\n        const canvas = document.createElement('canvas');\n        if (canvas.getContext && canvas.getContext('2d')) {\n            const pixelRatio = window.devicePixelRatio || 1;\n            const offset = 12 * pixelRatio;\n            const ctx = canvas.getContext('2d');\n            ctx.fillStyle = '#f00';\n            ctx.textBaseline = 'top';\n            ctx.font = '32px Arial';\n            ctx.fillText(testChar, 0, 0);\n            return ctx.getImageData(offset, offset, 1, 1).data[0] !== 0;\n        } else {\n            return false;\n        }\n    } else {\n        return true;\n    }\n}\n\nconst browserSupportsEmoji = emojiSupported();\n\nutility.log(\"Emoji Supported: \", browserSupportsEmoji);\n\nexport function isEmojiSupported() {\n    return browserSupportsEmoji;\n}\n\n/**\n * Returns either native emoji or fallback image\n *\n * @param {emojiChar} Emoji Character\n * @returns {string} - The emoji\n */\nexport function parseEmoji(emojiChar) {\n    if(browserSupportsEmoji) {\n        return emojiChar;\n    }\n    return twemoji.parse(emojiChar, emojiOptions);\n}\n\n/**\n * Replace emojis in DOM element with images if unsupported\n *\n * @param {domNode} Element to search in\n * @returns {null} - The emoji\n */\n\nexport function parseDomForEmoji(domNode = document.body) {\n    if(browserSupportsEmoji) {\n        return;\n    }\n    twemoji.parse(domNode, emojiOptions);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/emoji-utility.js","var location = global.location || {};\n/*jslint indent: 2, browser: true, bitwise: true, plusplus: true */\nvar twemoji = (function (\n  /*! Copyright Twitter Inc. and other contributors. Licensed under MIT *//*\n    https://github.com/twitter/twemoji/blob/gh-pages/LICENSE\n  */\n\n  // WARNING:   this file is generated automatically via\n  //            `node twemoji-generator.js`\n  //            please update its `createTwemoji` function\n  //            at the bottom of the same file instead.\n\n) {\n  'use strict';\n\n  /*jshint maxparams:4 */\n\n  var\n    // the exported module object\n    twemoji = {\n\n\n    /////////////////////////\n    //      properties     //\n    /////////////////////////\n\n      // default assets url, by default will be Twitter Inc. CDN\n      base: 'https://twemoji.maxcdn.com/2/',\n\n      // default assets file extensions, by default '.png'\n      ext: '.png',\n\n      // default assets/folder size, by default \"72x72\"\n      // available via Twitter CDN: 72\n      size: '72x72',\n\n      // default class name, by default 'emoji'\n      className: 'emoji',\n\n      // basic utilities / helpers to convert code points\n      // to JavaScript surrogates and vice versa\n      convert: {\n\n        /**\n         * Given an HEX codepoint, returns UTF16 surrogate pairs.\n         *\n         * @param   string  generic codepoint, i.e. '1F4A9'\n         * @return  string  codepoint transformed into utf16 surrogates pair,\n         *          i.e. \\uD83D\\uDCA9\n         *\n         * @example\n         *  twemoji.convert.fromCodePoint('1f1e8');\n         *  // \"\\ud83c\\udde8\"\n         *\n         *  '1f1e8-1f1f3'.split('-').map(twemoji.convert.fromCodePoint).join('')\n         *  // \"\\ud83c\\udde8\\ud83c\\uddf3\"\n         */\n        fromCodePoint: fromCodePoint,\n\n        /**\n         * Given UTF16 surrogate pairs, returns the equivalent HEX codepoint.\n         *\n         * @param   string  generic utf16 surrogates pair, i.e. \\uD83D\\uDCA9\n         * @param   string  optional separator for double code points, default='-'\n         * @return  string  utf16 transformed into codepoint, i.e. '1F4A9'\n         *\n         * @example\n         *  twemoji.convert.toCodePoint('\\ud83c\\udde8\\ud83c\\uddf3');\n         *  // \"1f1e8-1f1f3\"\n         *\n         *  twemoji.convert.toCodePoint('\\ud83c\\udde8\\ud83c\\uddf3', '~');\n         *  // \"1f1e8~1f1f3\"\n         */\n        toCodePoint: toCodePoint\n      },\n\n\n    /////////////////////////\n    //       methods       //\n    /////////////////////////\n\n      /**\n       * User first: used to remove missing images\n       * preserving the original text intent when\n       * a fallback for network problems is desired.\n       * Automatically added to Image nodes via DOM\n       * It could be recycled for string operations via:\n       *  $('img.emoji').on('error', twemoji.onerror)\n       */\n      onerror: function onerror() {\n        if (this.parentNode) {\n          this.parentNode.replaceChild(createText(this.alt, false), this);\n        }\n      },\n\n      /**\n       * Main method/logic to generate either <img> tags or HTMLImage nodes.\n       *  \"emojify\" a generic text or DOM Element.\n       *\n       * @overloads\n       *\n       * String replacement for `innerHTML` or server side operations\n       *  twemoji.parse(string);\n       *  twemoji.parse(string, Function);\n       *  twemoji.parse(string, Object);\n       *\n       * HTMLElement tree parsing for safer operations over existing DOM\n       *  twemoji.parse(HTMLElement);\n       *  twemoji.parse(HTMLElement, Function);\n       *  twemoji.parse(HTMLElement, Object);\n       *\n       * @param   string|HTMLElement  the source to parse and enrich with emoji.\n       *\n       *          string              replace emoji matches with <img> tags.\n       *                              Mainly used to inject emoji via `innerHTML`\n       *                              It does **not** parse the string or validate it,\n       *                              it simply replaces found emoji with a tag.\n       *                              NOTE: be sure this won't affect security.\n       *\n       *          HTMLElement         walk through the DOM tree and find emoji\n       *                              that are inside **text node only** (nodeType === 3)\n       *                              Mainly used to put emoji in already generated DOM\n       *                              without compromising surrounding nodes and\n       *                              **avoiding** the usage of `innerHTML`.\n       *                              NOTE: Using DOM elements instead of strings should\n       *                              improve security without compromising too much\n       *                              performance compared with a less safe `innerHTML`.\n       *\n       * @param   Function|Object  [optional]\n       *                              either the callback that will be invoked or an object\n       *                              with all properties to use per each found emoji.\n       *\n       *          Function            if specified, this will be invoked per each emoji\n       *                              that has been found through the RegExp except\n       *                              those follwed by the invariant \\uFE0E (\"as text\").\n       *                              Once invoked, parameters will be:\n       *\n       *                                iconId:string     the lower case HEX code point\n       *                                                  i.e. \"1f4a9\"\n       *\n       *                                options:Object    all info for this parsing operation\n       *\n       *                                variant:char      the optional \\uFE0F (\"as image\")\n       *                                                  variant, in case this info\n       *                                                  is anyhow meaningful.\n       *                                                  By default this is ignored.\n       *\n       *                              If such callback will return a falsy value instead\n       *                              of a valid `src` to use for the image, nothing will\n       *                              actually change for that specific emoji.\n       *\n       *\n       *          Object              if specified, an object containing the following properties\n       *\n       *            callback   Function  the callback to invoke per each found emoji.\n       *            base       string    the base url, by default twemoji.base\n       *            ext        string    the image extension, by default twemoji.ext\n       *            size       string    the assets size, by default twemoji.size\n       *\n       * @example\n       *\n       *  twemoji.parse(\"I \\u2764\\uFE0F emoji!\");\n       *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/2764.gif\"/> emoji!\n       *\n       *\n       *  twemoji.parse(\"I \\u2764\\uFE0F emoji!\", function(iconId, options) {\n       *    return '/assets/' + iconId + '.gif';\n       *  });\n       *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/2764.gif\"/> emoji!\n       *\n       *\n       * twemoji.parse(\"I \\u2764\\uFE0F emoji!\", {\n       *   size: 72,\n       *   callback: function(iconId, options) {\n       *     return '/assets/' + options.size + '/' + iconId + options.ext;\n       *   }\n       * });\n       *  // I <img class=\"emoji\" draggable=\"false\" alt=\"❤️\" src=\"/assets/72x72/2764.png\"/> emoji!\n       *\n       */\n      parse: parse,\n\n      /**\n       * Given a string, invokes the callback argument\n       *  per each emoji found in such string.\n       * This is the most raw version used by\n       *  the .parse(string) method itself.\n       *\n       * @param   string    generic string to parse\n       * @param   Function  a generic callback that will be\n       *                    invoked to replace the content.\n       *                    This calback wil receive standard\n       *                    String.prototype.replace(str, callback)\n       *                    arguments such:\n       *  callback(\n       *    rawText,  // the emoji match\n       *  );\n       *\n       *                    and others commonly received via replace.\n       */\n      replace: replace,\n\n      /**\n       * Simplify string tests against emoji.\n       *\n       * @param   string  some text that might contain emoji\n       * @return  boolean true if any emoji was found, false otherwise.\n       *\n       * @example\n       *\n       *  if (twemoji.test(someContent)) {\n       *    console.log(\"emoji All The Things!\");\n       *  }\n       */\n      test: test\n    },\n\n    // used to escape HTML special chars in attributes\n    escaper = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      \"'\": '&#39;',\n      '\"': '&quot;'\n    },\n\n    // RegExp based on emoji's official Unicode standards\n    // http://www.unicode.org/Public/UNIDATA/EmojiSources.txt\n    re = /\\ud83d[\\udc68-\\udc69](?:\\ud83c[\\udffb-\\udfff])?\\u200d(?:\\u2695\\ufe0f|\\u2696\\ufe0f|\\u2708\\ufe0f|\\ud83c[\\udf3e\\udf73\\udf93\\udfa4\\udfa8\\udfeb\\udfed]|\\ud83d[\\udcbb\\udcbc\\udd27\\udd2c\\ude80\\ude92])|(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75]|\\u26f9)(?:\\ufe0f|\\ud83c[\\udffb-\\udfff])\\u200d[\\u2640\\u2642]\\ufe0f|(?:\\ud83c[\\udfc3\\udfc4\\udfca]|\\ud83d[\\udc6e\\udc71\\udc73\\udc77\\udc81\\udc82\\udc86\\udc87\\ude45-\\ude47\\ude4b\\ude4d\\ude4e\\udea3\\udeb4-\\udeb6]|\\ud83e[\\udd26\\udd35\\udd37-\\udd39\\udd3d\\udd3e\\uddd6-\\udddd])(?:\\ud83c[\\udffb-\\udfff])?\\u200d[\\u2640\\u2642]\\ufe0f|\\ud83d\\udc68\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc8b\\u200d\\ud83d[\\udc68\\udc69]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f\\u200d\\ud83d\\udc68|\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\u2764\\ufe0f\\u200d\\ud83d[\\udc68\\udc69]|\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83c\\udff3\\ufe0f\\u200d\\ud83c\\udf08|\\ud83c\\udff4\\u200d\\u2620\\ufe0f|\\ud83d\\udc41\\u200d\\ud83d\\udde8|\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc6f\\u200d\\u2640\\ufe0f|\\ud83d\\udc6f\\u200d\\u2642\\ufe0f|\\ud83e\\udd3c\\u200d\\u2640\\ufe0f|\\ud83e\\udd3c\\u200d\\u2642\\ufe0f|\\ud83e\\uddde\\u200d\\u2640\\ufe0f|\\ud83e\\uddde\\u200d\\u2642\\ufe0f|\\ud83e\\udddf\\u200d\\u2640\\ufe0f|\\ud83e\\udddf\\u200d\\u2642\\ufe0f|(?:\\u002a)\\ufe0f?\\u20e3|(?:\\ud83c[\\udf85\\udfc2-\\udfc4\\udfc7\\udfca-\\udfcc]|\\ud83d[\\udc42\\udc43\\udc46-\\udc50\\udc66-\\udc69\\udc6e\\udc70-\\udc78\\udc7c\\udc81-\\udc83\\udc85-\\udc87\\udcaa\\udd74\\udd75\\udd7a\\udd90\\udd95\\udd96\\ude45-\\ude47\\ude4b-\\ude4f\\udea3\\udeb4-\\udeb6\\udec0\\udecc]|\\ud83e[\\udd18-\\udd1c\\udd1e\\udd1f\\udd26\\udd30-\\udd39\\udd3d\\udd3e\\uddd1-\\udddd]|[\\u261d\\u26f7\\u26f9\\u270a-\\u270d])(?:\\ud83c[\\udffb-\\udfff]|)|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc65\\udb40\\udc6e\\udb40\\udc67\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc73\\udb40\\udc63\\udb40\\udc74\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc77\\udb40\\udc6c\\udb40\\udc73\\udb40\\udc7f|\\ud83c\\udde6\\ud83c[\\udde8-\\uddec\\uddee\\uddf1\\uddf2\\uddf4\\uddf6-\\uddfa\\uddfc\\uddfd\\uddff]|\\ud83c\\udde7\\ud83c[\\udde6\\udde7\\udde9-\\uddef\\uddf1-\\uddf4\\uddf6-\\uddf9\\uddfb\\uddfc\\uddfe\\uddff]|\\ud83c\\udde8\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\uddee\\uddf0-\\uddf5\\uddf7\\uddfa-\\uddff]|\\ud83c\\udde9\\ud83c[\\uddea\\uddec\\uddef\\uddf0\\uddf2\\uddf4\\uddff]|\\ud83c\\uddea\\ud83c[\\udde6\\udde8\\uddea\\uddec\\udded\\uddf7-\\uddfa]|\\ud83c\\uddeb\\ud83c[\\uddee-\\uddf0\\uddf2\\uddf4\\uddf7]|\\ud83c\\uddec\\ud83c[\\udde6\\udde7\\udde9-\\uddee\\uddf1-\\uddf3\\uddf5-\\uddfa\\uddfc\\uddfe]|\\ud83c\\udded\\ud83c[\\uddf0\\uddf2\\uddf3\\uddf7\\uddf9\\uddfa]|\\ud83c\\uddee\\ud83c[\\udde8-\\uddea\\uddf1-\\uddf4\\uddf6-\\uddf9]|\\ud83c\\uddef\\ud83c[\\uddea\\uddf2\\uddf4\\uddf5]|\\ud83c\\uddf0\\ud83c[\\uddea\\uddec-\\uddee\\uddf2\\uddf3\\uddf5\\uddf7\\uddfc\\uddfe\\uddff]|\\ud83c\\uddf1\\ud83c[\\udde6-\\udde8\\uddee\\uddf0\\uddf7-\\uddfb\\uddfe]|\\ud83c\\uddf2\\ud83c[\\udde6\\udde8-\\udded\\uddf0-\\uddff]|\\ud83c\\uddf3\\ud83c[\\udde6\\udde8\\uddea-\\uddec\\uddee\\uddf1\\uddf4\\uddf5\\uddf7\\uddfa\\uddff]|\\ud83c\\uddf4\\ud83c\\uddf2|\\ud83c\\uddf5\\ud83c[\\udde6\\uddea-\\udded\\uddf0-\\uddf3\\uddf7-\\uddf9\\uddfc\\uddfe]|\\ud83c\\uddf6\\ud83c\\udde6|\\ud83c\\uddf7\\ud83c[\\uddea\\uddf4\\uddf8\\uddfa\\uddfc]|\\ud83c\\uddf8\\ud83c[\\udde6-\\uddea\\uddec-\\uddf4\\uddf7-\\uddf9\\uddfb\\uddfd-\\uddff]|\\ud83c\\uddf9\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\udded\\uddef-\\uddf4\\uddf7\\uddf9\\uddfb\\uddfc\\uddff]|\\ud83c\\uddfa\\ud83c[\\udde6\\uddec\\uddf2\\uddf3\\uddf8\\uddfe\\uddff]|\\ud83c\\uddfb\\ud83c[\\udde6\\udde8\\uddea\\uddec\\uddee\\uddf3\\uddfa]|\\ud83c\\uddfc\\ud83c[\\uddeb\\uddf8]|\\ud83c\\uddfd\\ud83c\\uddf0|\\ud83c\\uddfe\\ud83c[\\uddea\\uddf9]|\\ud83c\\uddff\\ud83c[\\udde6\\uddf2\\uddfc]|\\u0023\\u20e3|\\u0030\\u20e3|\\u0031\\u20e3|\\u0032\\u20e3|\\u0033\\u20e3|\\u0034\\u20e3|\\u0035\\u20e3|\\u0036\\u20e3|\\u0037\\u20e3|\\u0038\\u20e3|\\u0039\\u20e3|\\ud800\\udc00|\\ud83c[\\udc04\\udccf\\udd70\\udd71\\udd7e\\udd7f\\udd8e\\udd91-\\udd9a\\udde6-\\uddff\\ude01\\ude02\\ude1a\\ude2f\\ude32-\\ude3a\\ude50\\ude51\\udf00-\\udf21\\udf24-\\udf84\\udf86-\\udf93\\udf96\\udf97\\udf99-\\udf9b\\udf9e-\\udfc1\\udfc5\\udfc6\\udfc8\\udfc9\\udfcd-\\udff0\\udff3-\\udff5\\udff7-\\udfff]|\\ud83d[\\udc00-\\udc41\\udc44\\udc45\\udc51-\\udc65\\udc6a-\\udc6d\\udc6f\\udc79-\\udc7b\\udc7d-\\udc80\\udc84\\udc88-\\udca9\\udcab-\\udcfd\\udcff-\\udd3d\\udd49-\\udd4e\\udd50-\\udd67\\udd6f\\udd70\\udd73\\udd76-\\udd79\\udd87\\udd8a-\\udd8d\\udda4\\udda5\\udda8\\uddb1\\uddb2\\uddbc\\uddc2-\\uddc4\\uddd1-\\uddd3\\udddc-\\uddde\\udde1\\udde3\\udde8\\uddef\\uddf3\\uddfa-\\ude44\\ude48-\\ude4a\\ude80-\\udea2\\udea4-\\udeb3\\udeb7-\\udebf\\udec1-\\udec5\\udecb\\udecd-\\uded2\\udee0-\\udee5\\udee9\\udeeb\\udeec\\udef0\\udef3-\\udef8]|\\ud83e[\\udd10-\\udd17\\udd1d\\udd20-\\udd25\\udd27-\\udd2f\\udd3a\\udd3c\\udd40-\\udd45\\udd47-\\udd4c\\udd50-\\udd6b\\udd80-\\udd97\\uddc0\\uddd0\\uddde-\\udde6]|[\\u00a9\\u00ae\\u203c\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21a9\\u21aa\\u231a\\u231b\\u2328\\u23cf\\u23e9-\\u23f3\\u23f8-\\u23fa\\u24c2\\u25aa\\u25ab\\u25b6\\u25c0\\u25fb-\\u25fe\\u2600-\\u2604\\u260e\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262a\\u262e\\u262f\\u2638\\u263a\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267b\\u267f\\u2692-\\u2697\\u2699\\u269b\\u269c\\u26a0\\u26a1\\u26aa\\u26ab\\u26b0\\u26b1\\u26bd\\u26be\\u26c4\\u26c5\\u26c8\\u26ce\\u26cf\\u26d1\\u26d3\\u26d4\\u26e9\\u26ea\\u26f0-\\u26f5\\u26f8\\u26fa\\u26fd\\u2702\\u2705\\u2708\\u2709\\u270f\\u2712\\u2714\\u2716\\u271d\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274c\\u274e\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27a1\\u27b0\\u27bf\\u2934\\u2935\\u2b05-\\u2b07\\u2b1b\\u2b1c\\u2b50\\u2b55\\u3030\\u303d\\u3297\\u3299\\ue50a]|(?:\\u2639)(?:\\ufe0f|(?!\\ufe0e))/g,\n\n    // avoid runtime RegExp creation for not so smart,\n    // not JIT based, and old browsers / engines\n    UFE0Fg = /\\uFE0F/g,\n\n    // avoid using a string literal like '\\u200D' here because minifiers expand it inline\n    U200D = String.fromCharCode(0x200D),\n\n    // used to find HTML special chars in attributes\n    rescaper = /[&<>'\"]/g,\n\n    // nodes with type 1 which should **not** be parsed\n    shouldntBeParsed = /^(?:iframe|noframes|noscript|script|select|style|textarea)$/,\n\n    // just a private shortcut\n    fromCharCode = String.fromCharCode;\n\n  return twemoji;\n\n\n  /////////////////////////\n  //  private functions  //\n  //     declaration     //\n  /////////////////////////\n\n  /**\n   * Shortcut to create text nodes\n   * @param   string  text used to create DOM text node\n   * @return  Node  a DOM node with that text\n   */\n  function createText(text, clean) {\n    return document.createTextNode(clean ? text.replace(UFE0Fg, '') : text);\n  }\n\n  /**\n   * Utility function to escape html attribute text\n   * @param   string  text use in HTML attribute\n   * @return  string  text encoded to use in HTML attribute\n   */\n  function escapeHTML(s) {\n    return s.replace(rescaper, replacer);\n  }\n\n  /**\n   * Default callback used to generate emoji src\n   *  based on Twitter CDN\n   * @param   string    the emoji codepoint string\n   * @param   string    the default size to use, i.e. \"36x36\"\n   * @return  string    the image source to use\n   */\n  function defaultImageSrcGenerator(icon, options) {\n    return ''.concat(options.base, options.size, '/', icon, options.ext);\n  }\n\n  /**\n   * Given a generic DOM nodeType 1, walk through all children\n   * and store every nodeType 3 (#text) found in the tree.\n   * @param   Element a DOM Element with probably some text in it\n   * @param   Array the list of previously discovered text nodes\n   * @return  Array same list with new discovered nodes, if any\n   */\n  function grabAllTextNodes(node, allText) {\n    var\n      childNodes = node.childNodes,\n      length = childNodes.length,\n      subnode,\n      nodeType;\n    while (length--) {\n      subnode = childNodes[length];\n      nodeType = subnode.nodeType;\n      // parse emoji only in text nodes\n      if (nodeType === 3) {\n        // collect them to process emoji later\n        allText.push(subnode);\n      }\n      // ignore all nodes that are not type 1, that are svg, or that\n      // should not be parsed as script, style, and others\n      else if (nodeType === 1 && !('ownerSVGElement' in subnode) &&\n          !shouldntBeParsed.test(subnode.nodeName.toLowerCase())) {\n        grabAllTextNodes(subnode, allText);\n      }\n    }\n    return allText;\n  }\n\n  /**\n   * Used to both remove the possible variant\n   *  and to convert utf16 into code points.\n   *  If there is a zero-width-joiner (U+200D), leave the variants in.\n   * @param   string    the raw text of the emoji match\n   * @return  string    the code point\n   */\n  function grabTheRightIcon(rawText) {\n    // if variant is present as \\uFE0F\n    return toCodePoint(rawText.indexOf(U200D) < 0 ?\n      rawText.replace(UFE0Fg, '') :\n      rawText\n    );\n  }\n\n  /**\n   * DOM version of the same logic / parser:\n   *  emojify all found sub-text nodes placing images node instead.\n   * @param   Element   generic DOM node with some text in some child node\n   * @param   Object    options  containing info about how to parse\n    *\n    *            .callback   Function  the callback to invoke per each found emoji.\n    *            .base       string    the base url, by default twemoji.base\n    *            .ext        string    the image extension, by default twemoji.ext\n    *            .size       string    the assets size, by default twemoji.size\n    *\n   * @return  Element same generic node with emoji in place, if any.\n   */\n  function parseNode(node, options) {\n    var\n      allText = grabAllTextNodes(node, []),\n      length = allText.length,\n      attrib,\n      attrname,\n      modified,\n      fragment,\n      subnode,\n      text,\n      match,\n      i,\n      index,\n      img,\n      rawText,\n      iconId,\n      src;\n    while (length--) {\n      modified = false;\n      fragment = document.createDocumentFragment();\n      subnode = allText[length];\n      text = subnode.nodeValue;\n      i = 0;\n      while ((match = re.exec(text))) {\n        index = match.index;\n        if (index !== i) {\n          fragment.appendChild(\n            createText(text.slice(i, index), true)\n          );\n        }\n        rawText = match[0];\n        iconId = grabTheRightIcon(rawText);\n        i = index + rawText.length;\n        src = options.callback(iconId, options);\n        if (src) {\n          img = new Image();\n          img.onerror = options.onerror;\n          img.setAttribute('draggable', 'false');\n          attrib = options.attributes(rawText, iconId);\n          for (attrname in attrib) {\n            if (\n              attrib.hasOwnProperty(attrname) &&\n              // don't allow any handlers to be set + don't allow overrides\n              attrname.indexOf('on') !== 0 &&\n              !img.hasAttribute(attrname)\n            ) {\n              img.setAttribute(attrname, attrib[attrname]);\n            }\n          }\n          img.className = options.className;\n          img.alt = rawText;\n          img.src = src;\n          modified = true;\n          fragment.appendChild(img);\n        }\n        if (!img) fragment.appendChild(createText(rawText, false));\n        img = null;\n      }\n      // is there actually anything to replace in here ?\n      if (modified) {\n        // any text left to be added ?\n        if (i < text.length) {\n          fragment.appendChild(\n            createText(text.slice(i), true)\n          );\n        }\n        // replace the text node only, leave intact\n        // anything else surrounding such text\n        subnode.parentNode.replaceChild(fragment, subnode);\n      }\n    }\n    return node;\n  }\n\n  /**\n   * String/HTML version of the same logic / parser:\n   *  emojify a generic text placing images tags instead of surrogates pair.\n   * @param   string    generic string with possibly some emoji in it\n   * @param   Object    options  containing info about how to parse\n   *\n   *            .callback   Function  the callback to invoke per each found emoji.\n   *            .base       string    the base url, by default twemoji.base\n   *            .ext        string    the image extension, by default twemoji.ext\n   *            .size       string    the assets size, by default twemoji.size\n   *\n   * @return  the string with <img tags> replacing all found and parsed emoji\n   */\n  function parseString(str, options) {\n    return replace(str, function (rawText) {\n      var\n        ret = rawText,\n        iconId = grabTheRightIcon(rawText),\n        src = options.callback(iconId, options),\n        attrib,\n        attrname;\n      if (src) {\n        // recycle the match string replacing the emoji\n        // with its image counter part\n        ret = '<img '.concat(\n          'class=\"', options.className, '\" ',\n          'draggable=\"false\" ',\n          // needs to preserve user original intent\n          // when variants should be copied and pasted too\n          'alt=\"',\n          rawText,\n          '\"',\n          ' src=\"',\n          src,\n          '\"'\n        );\n        attrib = options.attributes(rawText, iconId);\n        for (attrname in attrib) {\n          if (\n            attrib.hasOwnProperty(attrname) &&\n            // don't allow any handlers to be set + don't allow overrides\n            attrname.indexOf('on') !== 0 &&\n            ret.indexOf(' ' + attrname + '=') === -1\n          ) {\n            ret = ret.concat(' ', attrname, '=\"', escapeHTML(attrib[attrname]), '\"');\n          }\n        }\n        ret = ret.concat('/>');\n      }\n      return ret;\n    });\n  }\n\n  /**\n   * Function used to actually replace HTML special chars\n   * @param   string  HTML special char\n   * @return  string  encoded HTML special char\n   */\n  function replacer(m) {\n    return escaper[m];\n  }\n\n  /**\n   * Default options.attribute callback\n   * @return  null\n   */\n  function returnNull() {\n    return null;\n  }\n\n  /**\n   * Given a generic value, creates its squared counterpart if it's a number.\n   *  As example, number 36 will return '36x36'.\n   * @param   any     a generic value.\n   * @return  any     a string representing asset size, i.e. \"36x36\"\n   *                  only in case the value was a number.\n   *                  Returns initial value otherwise.\n   */\n  function toSizeSquaredAsset(value) {\n    return typeof value === 'number' ?\n      value + 'x' + value :\n      value;\n  }\n\n\n  /////////////////////////\n  //  exported functions //\n  //     declaration     //\n  /////////////////////////\n\n  function fromCodePoint(codepoint) {\n    var code = typeof codepoint === 'string' ?\n          parseInt(codepoint, 16) : codepoint;\n    if (code < 0x10000) {\n      return fromCharCode(code);\n    }\n    code -= 0x10000;\n    return fromCharCode(\n      0xD800 + (code >> 10),\n      0xDC00 + (code & 0x3FF)\n    );\n  }\n\n  function parse(what, how) {\n    if (!how || typeof how === 'function') {\n      how = {callback: how};\n    }\n    // if first argument is string, inject html <img> tags\n    // otherwise use the DOM tree and parse text nodes only\n    return (typeof what === 'string' ? parseString : parseNode)(what, {\n      callback:   how.callback || defaultImageSrcGenerator,\n      attributes: typeof how.attributes === 'function' ? how.attributes : returnNull,\n      base:       typeof how.base === 'string' ? how.base : twemoji.base,\n      ext:        how.ext || twemoji.ext,\n      size:       how.folder || toSizeSquaredAsset(how.size || twemoji.size),\n      className:  how.className || twemoji.className,\n      onerror:    how.onerror || twemoji.onerror\n    });\n  }\n\n  function replace(text, callback) {\n    return String(text).replace(re, callback);\n  }\n\n  function test(text) {\n    // IE6 needs a reset before too\n    re.lastIndex = 0;\n    var result = re.test(text);\n    re.lastIndex = 0;\n    return result;\n  }\n\n  function toCodePoint(unicodeSurrogates, sep) {\n    var\n      r = [],\n      c = 0,\n      p = 0,\n      i = 0;\n    while (i < unicodeSurrogates.length) {\n      c = unicodeSurrogates.charCodeAt(i++);\n      if (p) {\n        r.push((0x10000 + ((p - 0xD800) << 10) + (c - 0xDC00)).toString(16));\n        p = 0;\n      } else if (0xD800 <= c && c <= 0xDBFF) {\n        p = c;\n      } else {\n        r.push(c.toString(16));\n      }\n    }\n    return r.join(sep || '-');\n  }\n\n}());\nif (!location.protocol) {\n  twemoji.base = twemoji.base.replace(/^http:/, \"\");\n}\nmodule.exports = twemoji;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/twemoji/2/twemoji.npm.js\n// module id = 7\n// module chunks = 0","module.exports = (__webpack_require__(0))(171);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./src/scripts/utility.ts from dll-reference lib_core_app\n// module id = 8\n// module chunks = 0","/**\n * @author Adam (charrondev) Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { delegateEvent } from \"@core/dom\";\nimport { setData, getData } from \"@core/dom\";\nimport debounce from \"lodash/debounce\";\nimport shave from 'shave';\n\n/**\n * Truncate embed link excerpts in a container\n *\n * @param {Element} container - Element containing embeds to truncate\n */\nexport function truncateEmbeds(container = document.body) {\n    const embeds = container.querySelectorAll('.embedLink-excerpt');\n    embeds.forEach(el => {\n        let untruncatedText = getData(el, 'untruncatedText');\n\n        if (!untruncatedText) {\n            untruncatedText = el.innerHTML;\n            setData(el, 'untruncatedText', untruncatedText);\n        } else {\n            el.innerHTML = untruncatedText;\n        }\n        truncateTextBasedOnMaxHeight(el);\n    });\n}\n\n/**\n * Truncate element text based on max-height\n *\n * @param {Element} excerpt - The excerpt to truncate.\n */\nexport function truncateTextBasedOnMaxHeight(excerpt) {\n    const maxHeight = parseInt(getComputedStyle(excerpt)['max-height'], 10);\n    if(maxHeight && maxHeight > 0) {\n        shave(excerpt, maxHeight);\n    }\n}\n\n/**\n * Handle a click on a video.\n *\n * @param {Event} event - The event.\n */\nfunction handlePlayVideo() {\n    const playButton = this;\n    if (!(playButton instanceof HTMLElement)) {\n        return;\n    }\n    const container = playButton.closest(\".embedVideo-ratio\");\n    container.innerHTML = `<iframe frameborder=\"0\" allow=\"autoplay; encrypted-media\" class=\"embedVideo-iframe\" src=\"${playButton.dataset.url}\" allowfullscreen></iframe>`;\n}\n\n\n/**\n * Init handler for embeds\n */\nexport function setupEmbeds() {\n    delegateEvent('click', '.js-playVideo', handlePlayVideo);\n    truncateEmbeds();\n\n    // Resize\n    window.addEventListener(\"resize\", debounce(truncateEmbeds, 200));\n}\n\nfunction handleToggleSpoiler() {\n    const toggleButton = this;\n    if (!(toggleButton instanceof HTMLElement)) {\n        return;\n    }\n\n    const spoilerContainer = toggleButton.closest(\".spoiler\");\n    spoilerContainer.classList.toggle(\"isShowingSpoiler\");\n}\n\nexport function setupSpoilers() {\n    delegateEvent('click', '.js-toggleSpoiler', handleToggleSpoiler);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/app/user-content.js","module.exports = (__webpack_require__(0))(259);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./src/scripts/dom.ts from dll-reference lib_core_app\n// module id = 10\n// module chunks = 0","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/debounce.js\n// module id = 11\n// module chunks = 0","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/now.js\n// module id = 12\n// module chunks = 0","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_freeGlobal.js\n// module id = 13\n// module chunks = 0","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/toNumber.js\n// module id = 14\n// module chunks = 0","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isSymbol.js\n// module id = 15\n// module chunks = 0","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseGetTag.js\n// module id = 16\n// module chunks = 0","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_getRawTag.js\n// module id = 17\n// module chunks = 0","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_objectToString.js\n// module id = 18\n// module chunks = 0","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isObjectLike.js\n// module id = 19\n// module chunks = 0","function shave(target, maxHeight) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!maxHeight) throw Error('maxHeight is required');\n  var els = typeof target === 'string' ? document.querySelectorAll(target) : target;\n  if (!els) return;\n\n  var character = opts.character || '…';\n  var classname = opts.classname || 'js-shave';\n  var spaces = opts.spaces || true;\n  var charHtml = '<span class=\"js-shave-char\">' + character + '</span>';\n\n  if (!('length' in els)) els = [els];\n  for (var i = 0; i < els.length; i += 1) {\n    var el = els[i];\n    var styles = el.style;\n    var span = el.querySelector('.' + classname);\n    var textProp = el.textContent === undefined ? 'innerText' : 'textContent';\n\n    // If element text has already been shaved\n    if (span) {\n      // Remove the ellipsis to recapture the original text\n      el.removeChild(el.querySelector('.js-shave-char'));\n      el[textProp] = el[textProp]; // nuke span, recombine text\n    }\n\n    var fullText = el[textProp];\n    var words = spaces ? fullText : fullText.split(' ');\n\n    // If 0 or 1 words, we're done\n    if (words.length < 2) continue;\n\n    // Temporarily remove any CSS height for text height calculation\n    var heightStyle = styles.height;\n    styles.height = 'auto';\n    var maxHeightStyle = styles.maxHeight;\n    styles.maxHeight = 'none';\n\n    // If already short enough, we're done\n    if (el.offsetHeight <= maxHeight) {\n      styles.height = heightStyle;\n      styles.maxHeight = maxHeightStyle;\n      continue;\n    }\n\n    // Binary search for number of words which can fit in allotted height\n    var max = words.length - 1;\n    var min = 0;\n    var pivot = void 0;\n    while (min < max) {\n      pivot = min + max + 1 >> 1; // eslint-disable-line no-bitwise\n      el[textProp] = spaces ? words.slice(0, pivot) : words.slice(0, pivot).join(' ');\n      el.insertAdjacentHTML('beforeend', charHtml);\n      if (el.offsetHeight > maxHeight) max = spaces ? pivot - 2 : pivot - 1;else min = pivot;\n    }\n\n    el[textProp] = spaces ? words.slice(0, max) : words.slice(0, max).join(' ');\n    el.insertAdjacentHTML('beforeend', charHtml);\n    var diff = spaces ? words.slice(max) : words.slice(max).join(' ');\n\n    el.insertAdjacentHTML('beforeend', '<span class=\"' + classname + '\" style=\"display:none;\">' + diff + '</span>');\n\n    styles.height = heightStyle;\n    styles.maxHeight = maxHeightStyle;\n  }\n}\n\nexport default shave;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/shave/dist/shave.es.js\n// module id = 20\n// module chunks = 0","module.exports = (__webpack_require__(0))(8);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./src/scripts/application.ts from dll-reference lib_core_app\n// module id = 21\n// module chunks = 0"],"sourceRoot":""}