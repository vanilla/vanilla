/*!
 * @author StÃ©phane LaFlÃ¨che <stephane.l@vanillaforums.com>
 * @copyright 2009-2019 Vanilla Forums Inc.
 * @license GPL-2.0-only
 */

$richEditor-scrollContainer_overshoot: 48px;

.richEditor {
    position: relative;
    display: block;
    &.isDisabled { // Before React has replaced initial HTML
        &,
        .richEditor-button {
            cursor: progress !important;
        }
    }

    &.inheritHeight {
        display: flex;
        flex-direction: column;
        flex-grow: 1;


        .richEditor-text,
        .richEditor-textWrap,
        .richEditor-frame {
            display: flex;
            flex-direction: column;
            flex-grow: 1;
        }
    }
}

.richEditor-scrollContainer {
    position: relative;
    overflow: auto;
    height: 100%;
    width: calc(100% + #{$richEditor-scrollContainer_overshoot * 2});
    margin-left: -$richEditor-scrollContainer_overshoot;
    padding: {
        left: $richEditor-scrollContainer_overshoot;
        right: $richEditor-scrollContainer_overshoot;
    }
}

.richEditor-frame {
    position: relative;
    background: $richEditor_bg;
    height: auto;
    padding: 0;


    &.isMenuInset {
        overflow: initial;
        position: relative;
    }
}

.richEditor-menu {
    display: inline-block;
    position: relative;
}

.richEditorParagraphMenu {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    top: $richEditor-pilcrow_offset;
    left: $richEditor_horizontalPadding - $icon_default_size + 2px;
    transform: translateX(-100%);
    height: $richEditor-floatingButton_size;
    width: $icon_default_size;
    z-index: 1;
    animation: fadein $richEditor-pilcrowAnimation_duration ease;
    animation-iteration-count: 1;

    .richEditor-button {
        &.isActive {
            &:hover {
                cursor: default;
            }
        }
    }

    &.isMenuInset {
        transform: none;
    }
}

.richEditorParagraphMenu-handle {
    width: $richEditor-floatingButton_size;
    max-width: $richEditor-floatingButton_size;
    min-width: $richEditor-floatingButton_size;
    height: $richEditor-floatingButton_size;
}

.richEditor-text {
    position: relative;
    min-height: $richEditor_minHeight;
    white-space: pre-wrap !important; // Needed for spaces around embed blots to work properly!
    outline: 0;
}

.ql-clipboard {
    @include sr-only();

    // Fixed https://github.com/quilljs/quill/issues/1374#issuecomment-415333651
    position: fixed;
}

.richEditor-menuItems {
    position: relative;
    display: flex;
    align-items: flex-start;
    justify-content: flex-start;
    flex-wrap: nowrap;
    list-style: none;
    padding: 0;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    margin: 0;
    z-index: 1;

    .richEditor-menuItem {
        display: block;
        padding: 0;
        margin: 0;

        .richEditor-button,
        &.richEditor-button {
            width: $richEditor-menuButton_size;
            font-size: #{$richEditor-menuButton_size * 24 / 39};
            line-height: $richEditor-menuButton_size;

            &.emojiChar-ðŸ‡ºðŸ‡³ {
                font-size: 10px;
            }
        }

        &:first-child {
            .richEditor-embedButton {
                border-bottom-left-radius: $global-borderRadius;
            }
        }

        &.isRightAligned {
            margin-left: auto;
        }
    }
}



// button reset
.richEditor-nextInput,
.iconButton,
.richEditor-button {
    @include singleLineEllipsis;
    position: relative;
    appearance: none;
    border: 0;
    padding: 0;
    background: none;
    text-align: left;
}



.richEditor-button {
    display: block;
    user-select: none;
    cursor: pointer;

    &.richEditor-formatButton,
    &.richEditor-embedButton {
        height: $richEditor-menuButton_size;
        color: inherit;
    }

    &.emojiGroup {
        display: block;
        width: $richEditor-menuButton_size;
        height: $richEditor-menuButton_size;
        text-align: center;

        &.isSelected {
            @include iconButtonActiveState;
        }
    }

    &:not(:disabled) {
        cursor: pointer;
    }

    &:hover {
        @include iconButtonHoverState;
        .Close-x,
        .richEditorButton-icon {
            opacity: 1;
        }
    }

    &:focus {
        @include iconButtonFocusState;
        z-index: 2;
        .Close-x,
        .richEditorButton-icon {
            opacity: 1;
        }
    }

    &.isActive {
        @include iconButtonActiveState;
        .Close-x,
        .richEditorButton-icon {
            opacity: 1;
        }
    }

    &.isOpen {
        @include iconButtonActiveState;
    }

    &.richEditor-formatButton {
        &:focus {
            @include iconButtonFocusState($richEditor-paragraphMenuButton_offset);
        }
    }
}

.richEditor-menuItem {
    display: block;
    padding: 0;
    margin: 0;

    .richEditor-button,
    &.richEditor-button {
        width: $richEditor-menuButton_size;
        height: $richEditor-menuButton_size;
        max-width: $richEditor-menuButton_size;
        font-size: #{$richEditor-menuButton_size * 24 / 39};
        line-height: $richEditor-menuButton_size;

        &.emojiChar-ðŸ‡ºðŸ‡³ {
            font-size: 14px;
        }
    }

    &.isRightAligned {
        margin-left: auto;
    }
}

.richEditor-upload {
    display: none !important;
}

.richEditor-embedBar {
    display: block;
    width: 100%;
    padding: $richEditor-embedMenu_padding;
    margin-top: $formElement-borderWidth;
}

.richEditorButton-icon {
    display: block;
    margin: auto;
    height: $icon-default_size;
    width: $icon-default_size;
    opacity: $state-icon_opacity;
}

.Close-x {
    display: block;
    opacity: $state-icon_opacity;
    cursor: pointer;
}

// Link Menu
.insertLink {
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    max-width: $richEditor-insertLink_width;
    width: 100%;
    padding: {
        left: 9px;
    }
}

.richEditor-close.Close {
    position: relative;
    display: block;
    width: $richEditor-menuButton_size;
    height: $richEditor-menuButton_size;
    line-height: $richEditor-menuButton_size;
    vertical-align: bottom;
    top: auto;
    right: auto;
    text-align: center;
    user-select: none;
    background: transparent;
    cursor: pointer;
    opacity: $state-icon_opacity;

    &:hover {
        @include iconButtonHoverState;
    }
    &:focus {
        @include iconButtonFocusState;
    }
    &:active {
        @include iconButtonActiveState;
    }
}

.insertLink-input.InputBox {
  border: 0 !important;
  margin-bottom: 0 !important;
  flex-grow: 1;
  max-width: calc(100% - #{$richEditor-menuButton_size})
}

// Insert Media
.richEditorFlyout {
    @include shadow-dropDown;
    position: relative;
    overflow: hidden;
    background-color: $global-color_bg;
    border: {
        radius: $global-borderRadius;
        color: $global-border_color;
        style: $global-border_style;
        width: $global-border_width;
    }
    z-index: 6;

    .InputBox {
        width: 100%;
        box-sizing: border-box;
    }

    .richEditor-close {
        position: absolute;
        top: 0;
        right: 0;
    }

    .Footer {
        display: flex;
    }
}

.richEditorFlyout-header {
    padding: {
        top: $richEditor-flyout_paddingHorizontal / 2;
        right: $richEditor-flyout_paddingHorizontal;
        bottom: $richEditor-flyout_paddingHorizontal / 2;
        left: $richEditor-flyout_paddingHorizontal;
    }
}

.richEditorFlyout-footer {
    padding: {
        top: $richEditor-flyout_paddingVertical;
        bottom: $richEditor-flyout_paddingVertical;
        left: $richEditor-flyout_paddingHorizontal;
        right: $richEditor-flyout_paddingHorizontal;
    }

    &.insertEmoji-footer {
        padding: 0;
    }
}

.richEditorFlyout-title {
    @include longWordEllipsis;
    margin: 0;
    max-width: calc(100% - #{$richEditor-menuButton_size});
    min-height: #{$richEditor-menuButton_size - $richEditor-flyout_paddingVertical};
    font-size: 100%;
    line-height: inherit;
    color: $global-color_fg;

    &:focus {
        outline: 0;
    }
}

.insertMedia-footer {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    padding: {
        left: $richEditor-flyout_paddingHorizontal;
        right: $richEditor-flyout_paddingHorizontal;
        bottom: $richEditor-flyout_paddingVertical;
    }
}

.insertMedia-help {
    margin-right: auto;
    font-size: 12px;
}

.insertMedia-insert {
    width: auto;
}

.richEditorFlyout {
    @include shadow-dropDown;
    position: absolute;
    left: 0;
    width: #{$richEditor-flyout_paddingHorizontal * 2 + 7 * $richEditor-menuButton_size};
    border: $formElement-borderWidth $formElement-borderStyle $formElement_borderColor;
    background: $global-color_bg;
    border-radius: $global-borderRadius;
}

.richEditorFlyout-body {
    padding: {
        left: $richEditor-flyout_paddingHorizontal;
        right: $richEditor-flyout_paddingHorizontal;
    }
}

.insertEmoji-body {
    max-height: $richEditor-flyout_maxHeight;
    height: $richEditor-flyout_height;
}

.content-wrapper {
    height: 100%;
}

.embedDialogue {
    position: relative;
}

.richEditor-insertEmoji {
    font-size: $icon-default_size;
    text-align: center;
    overflow: hidden;
    opacity: $state-text_opacity;

    .fallBackEmoji {
        display: block;
        margin: auto;
    }

    &:hover,
    &:focus {
        opacity: 1;
    }
}

// Nub styles
.richEditor-nubPosition {
    position: absolute;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    overflow: hidden;
    width: $richEditor-nub_width * 2;
    height: $richEditor-nub_width * 2;
    user-select: none;
    transform: translateX(-50%);
    margin-top: -$richEditor-menu_borderWidth;
    pointer-events: none;
}

.richEditor-nub {
    position: relative;
    display: block;
    width: $richEditor-nub_width;
    height: $richEditor-nub_width;
    border: {
        top: $richEditor-menu_borderWidth solid $global-border_color;
        right: $richEditor-menu_borderWidth solid $global-border_color;
    }
    box-shadow: #{$richEditor-menu_borderWidth} #{-$richEditor-menu_borderWidth} 5px 0 rgba($overlay-dropShadow_color, .1);
    background: $richEditor_bg;
}


// Orientation specific styles
.richEditor-inlineToolbarContainer {
    &.isUp {
        transform: translateY(-$richEditor-menu_offset);

        .richEditor-nubPosition {
            top: 100%;
        }

        .richEditor-nub {
            transform: translateY(-50%) rotate(135deg);
        }
    }

    &.isDown {
        transform: translateY($richEditor-menu_offset);

        .richEditor-nubPosition {
            bottom: 100%;
        }

        .richEditor-nubPosition {
            align-items: flex-end;
            transform: translateY(-50%) translateX(-50%);
            margin-top: $richEditor-menu_borderWidth;
        }
        .richEditor-nub {
            transform: translateY(50%) rotate(-45deg);
        }
    }
}

.richEditor-paragraphToolbarContainer {
    position: absolute;
    left: calc(50% - #{$richEditor_horizontalPadding / 2});


    &.isUp {
        bottom: calc(50% + #{$richEditor_horizontalPadding / 2 - $formElement-borderWidth});
    }

    &.isDown {
        top: calc(50% + #{$richEditor_horizontalPadding / 2 - $formElement-borderWidth});
    }
}


// Emoji Groups

.emojiGroups {
    display: flex;
    flex-wrap: nowrap;
    justify-content: center;
}

.emojiGroup-icon {
    display: block;
    position: relative;
    margin: auto;
    padding: 0;
    width: $icon-default_size;
    size: $icon-default_size;
}


.richEditor-popoverDescription {
    margin-bottom: .5em;
}
